{"version":3,"file":"js/app.067a8ec4.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/OpenAssistantBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/messagesPersist.js","webpack://chatall/./src/store/promptsPersist.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/ChatGLMBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT432kPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/huggingface/Llama2HC70bBot.js","webpack://chatall/./src/bots/lmsys/Llama213bBot.js","webpack://chatall/./src/bots/lmsys/Llama27bBot.js","webpack://chatall/./src/bots/lmsys/Llama270bBot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatResponses.vue","webpack://chatall/./src/components/Messages/ChatResponses.vue?de82","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/helpers/template-helper.js","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/prompts/index.js","webpack://chatall/./src/components/PromptModal.vue","webpack://chatall/./src/components/PromptModal.vue?7dc0","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/components/ChatAction.vue","webpack://chatall/./src/components/ChatAction.vue?8a01","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue?9e83","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    const context = await this.getChatContext();\n    let available = false;\n\n    if (context.requestParams.atValue) {\n      available = true;\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n  static _isDisabled = false; // True if the bot is permanently disabled\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    const prefix = this.isDisabled()\n      ? `(${i18n.global.t(\"bot.disabled\")}) `\n      : \"\";\n    if (this.getModelName())\n      return prefix + `${this.getModelName()}@${this.getBrandName()}`;\n    else return prefix + this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  isDisabled() {\n    return this.constructor._isDisabled;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      let message;\n      if (err instanceof LoginError) {\n        message = `${err.message}\\n${i18n.global.t(\"error.requireLogin\", {\n          link: this.getLoginHyperlink(),\n        })}`;\n      } else {\n        message = err;\n      }\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(message),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  async checkAvailability() {\n    if (this.isDisabled()) return false;\n    this.constructor._isAvailable = await this._checkAvailability();\n    return this.isAvailable();\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return false;\n  }\n\n  disable() {\n    this.constructor._isDisabled = true;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = store.getters.currentChat?.contexts?.[this.getClassname()];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n\nexport class LoginError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"LoginError\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  static _characterId = \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\"; // Character Assistant id\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        Authorization: `Token ${store.state.characterAI.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    try {\n      if (!store.state.characterAI.token) {\n        console.error(\"Error CharacterAIBot check login: token not found\");\n        return false;\n      }\n\n      if (new Date().getTime() >= store.state.characterAI?.ttl) {\n        console.error(\"Error CharacterAIBot check login: token expired\");\n        return false;\n      }\n\n      const userInfoResponse = await axios.get(\n        \"https://beta.character.ai/chat/user/\",\n        this.getAuthHeaders(),\n      );\n\n      if (userInfoResponse.status !== 200) {\n        console.error(\"Error CharacterAIBot check login:\", userInfoResponse);\n        return false;\n      }\n\n      if (userInfoResponse.data.user?.user?.username !== \"ANONYMOUS\") {\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          ...this.getAuthHeaders().headers,\n        };\n        const payload = {\n          history_external_id: context.history_external_id,\n          character_external_id: this.constructor._characterId,\n          text: prompt,\n          tgt: context.tgt,\n        };\n        axios\n          .post(\"https://beta.character.ai/chat/streaming/\", payload, {\n            headers: headers,\n            onDownloadProgress: (progressEvent) => {\n              this.onResponseDownloadProgress(\n                progressEvent,\n                onUpdateResponse,\n                callbackParam,\n                reject,\n              );\n            },\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              resolve();\n            } else {\n              reject(response);\n            }\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  text = \"\";\n  onResponseDownloadProgress(\n    progressEvent,\n    onUpdateResponse,\n    callbackParam,\n    reject,\n  ) {\n    try {\n      const responses = progressEvent?.event?.currentTarget?.response\n        ?.split(\"\\n\") // split with new line\n        ?.filter((n) => n); //  filter empty string in array\n\n      // take last response item only\n      const lastResponse = JSON.parse(responses[responses.length - 1]);\n      if (Array.isArray(lastResponse.replies) && lastResponse.replies.length) {\n        this.text = lastResponse.replies[0].text;\n        onUpdateResponse(callbackParam, {\n          content: lastResponse.replies[0].text,\n          done: lastResponse.is_final_chunk,\n        });\n      } else {\n        // handle exception\n        // {\"abort\": true, \"error\": \"No eligible candidates\", \"last_user_msg_id\": 123, \"last_user_msg_uuid\": \"1111-uuid\"}\n        onUpdateResponse(callbackParam, {\n          content: `${this.text}\\n${this.wrapCollapsedSection(\n            JSON.stringify(lastResponse),\n          )}`,\n          done: true,\n        });\n      }\n    } catch (error) {\n      reject(error);\n      console.error(\"Error CharacterAIBot onChatDownloadProgress\", error);\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    let characterInfoResponse = await axios.post(\n      \"https://beta.character.ai/chat/character/info/\",\n      { external_id: this.constructor._characterId },\n      this.getAuthHeaders(),\n    );\n\n    if (characterInfoResponse.status !== 200) {\n      console.error(\n        \"CharacterAIBot characterInfoResponse\",\n        characterInfoResponse,\n      );\n      throw new Error(characterInfoResponse);\n    }\n\n    let chatContinueResponse;\n    try {\n      chatContinueResponse = await axios.post(\n        \"https://beta.character.ai/chat/history/continue/\",\n        {\n          character_external_id: this.constructor._characterId,\n          history_external_id: null,\n        },\n        this.getAuthHeaders(),\n      );\n    } catch (error) {\n      if (\n        error.response.status === 404 &&\n        error.response.data === \"there is no history between user and character\"\n      ) {\n        // no history, create\n        chatContinueResponse = await axios\n          .post(\n            \"https://beta.character.ai/chat/history/create/\",\n            {\n              character_external_id: this.constructor._characterId,\n            },\n            this.getAuthHeaders(),\n          )\n          .catch((error) => {\n            console.error(\"CharacterAIBot chatCreateResponse\", error);\n            throw Error(error);\n          });\n      } else {\n        console.error(\"CharacterAIBot chatContinueResponse\", error);\n        throw Error(error);\n      }\n    }\n\n    context = {\n      history_external_id: chatContinueResponse?.data?.external_id,\n      tgt: characterInfoResponse?.data?.character?.participant__user__username,\n    };\n\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.claudeAi.org) {\n      const currentAcountResponse = await axios.get(\n        \"https://claude.ai/api/auth/current_account\",\n      );\n\n      if (currentAcountResponse.data.success) {\n        available = true;\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      attachments: [],\n      completion: {\n        incremental: true,\n        model: \"claude-2\",\n        prompt: prompt,\n      },\n      conversation_uuid: context.uuid,\n      organization_uuid: store.state.claudeAi.org,\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://claude.ai/api/append_message\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { HumanMessage, AIMessage, SystemMessage } from \"langchain/schema\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages = messages.map((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (storedMessage.type === \"human\") {\n        return new HumanMessage(storedMessage.data);\n      } else if (storedMessage.type === \"ai\") {\n        return new AIMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        return new SystemMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    messages.push(new HumanMessage(prompt));\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    messages.push(new AIMessage(res));\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async _checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n    let available = false;\n\n    if (token) {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then(() => {\n          available = true;\n        });\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\n\nexport default class OpenAssistantBot extends Bot {\n  static _brandId = \"openAssistant\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"OpenAssistantBot\"; // Class name of the bot\n  static _logoFilename = \"open-assistant.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://open-assistant.io/auth/signin/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .get(\"https://open-assistant.io/api/auth/session\")\n      .then((response) => {\n        if (response.data) {\n          // eslint-disable-next-line\n          for (var i in response.data) {\n            // if data object not empty, user logged in\n            available = true;\n            break;\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error OpenAssistantBot check login:\", error);\n      });\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    const prompterResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/prompter_message\",\n      { chat_id: context.id, content: prompt, parent_id: context.parent_id },\n    );\n\n    if (prompterResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    const assistantResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/assistant_message\",\n      {\n        chat_id: context.id,\n        model_config_name: \"OA_SFT_Llama_30B_6\",\n        content: prompt,\n        parent_id: prompterResponse.data.id,\n        plugins: [],\n        sampling_parameters: {\n          top_k: 50,\n          top_p: 0.95,\n          typical_p: null,\n          temperature: 0.75,\n          repetition_penalty: 1.2,\n          max_new_tokens: 1024,\n        },\n      },\n    );\n\n    if (assistantResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    this.setChatContext({\n      ...context,\n      parent_id: assistantResponse.data.id, // save assistant response id for next prompt parent_id\n    });\n\n    const headers = {\n      accept: \"*/*\",\n    };\n    const payload = {\n      chat_id: context.id,\n      message_id: assistantResponse.data.id,\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://open-assistant.io/api/chat/events?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let data;\n          try {\n            // handle event data: \": ping - 2023-07-14 13:28:17.735145\"\n            data = JSON.parse(event.data);\n          } catch {\n            console.error(\n              \"Error OpenAssistantBot JSON.parse message:\",\n              event.data,\n            );\n            return;\n          }\n          switch (data.event_type) {\n            case \"pending\":\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"openAssistant.queue\", {\n                  ...data,\n                }),\n                done: false,\n              });\n              break;\n            case \"token\":\n              text += data.text;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n              break;\n            case \"message\":\n              onUpdateResponse(callbackParam, {\n                content: data.message.content, // full message\n                done: true,\n              });\n              resolve();\n              break;\n            case \"error\":\n              onUpdateResponse(callbackParam, {\n                content: `${text}\\n${this.wrapCollapsedSection(event.data)}`,\n                done: true,\n              });\n              resolve();\n              break;\n            default:\n              break;\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    try {\n      await axios\n        .post(\"https://open-assistant.io/api/chat\")\n        .then((response) => {\n          if (response.status === 200) {\n            context = {\n              ...response.data,\n            };\n          }\n        });\n    } catch (error) {\n      console.error(\"Error OpenAssistantBot createChatContext:\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://pi.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://pi.ai/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        available = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        { firstQuery: \"ChatALL\" }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.cn/\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://chat.360.cn/backend-api/apiz/user/info\")\n      .then((response) => {\n        available = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.cn/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        available = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          available = true;\n        }\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      available = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n    }\n    return available;\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt-chat/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"langchain/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      const chatModel = new ChatBaiduWenxin({\n        modelName: this.constructor._model,\n        baiduApiKey: apiKey,\n        baiduSecretKey: secretKey,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  _checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super._checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    if (this.constructor._loginUrl !== \"\") {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        available = true;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(event.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot, { LoginError } from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _model = \"OpenAssistant/oasst-sft-6-llama-30b-xor\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    // Create a conversation to test if the bot is available\n    const conversationId = await this.createChatContext();\n    let available = false;\n\n    if (conversationId) {\n      available = true;\n      // Delete the conversation after testing\n      axios.delete(\n        `https://huggingface.co/chat/conversation/${conversationId}`,\n      );\n    }\n\n    return available;\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      parameters: {\n        temperature: 0.9,\n        truncate: 1000,\n        max_new_tokens: 1024,\n        stop: [\"</s>\"],\n        top_p: 0.95,\n        repetition_penalty: 1.2,\n        top_k: 50,\n        return_full_text: false,\n      },\n      stream: true,\n      options: {\n        id: uuidv4(),\n        is_retry: false,\n        use_cache: false,\n      },\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        const source = new SSE(\n          `https://huggingface.co/chat/conversation/${conversationId}`,\n          {\n            headers: { \"Content-Type\": \"application/json\" },\n            payload: JSON.stringify(this.packRequest(prompt)),\n          },\n        );\n\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.generated_text === null) {\n            text += data.token.text;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } else {\n            // the last message\n            onUpdateResponse(callbackParam, {\n              content: data.generated_text,\n              done: true,\n            });\n            source.close();\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n          const data = JSON.parse(error.data);\n          if (data.message === \"Exceeded number of messages before login\") {\n            reject(new LoginError(data.message));\n          } else if (data.message) {\n            reject(new Error(data.message));\n          } else {\n            reject(error);\n          }\n        });\n\n        source.stream();\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(\"https://huggingface.co/chat/conversation\", {\n        model: this.constructor._model,\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return conversationId;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [39, 40]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n    if (available) {\n      this._sendFnIndex(43, \"\", () => {}, 0); // Refresh the session\n    }\n    return available;\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    } else if (fn_index === 43) {\n      r = [{}];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n\n      // Refresh the session too\n      const context = this.createChatContext();\n      this.setChatContext(context);\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    if (\n      store.state.azureOpenaiApi.azureApiKey &&\n      store.state.azureOpenaiApi.azureApiInstanceName &&\n      store.state.azureOpenaiApi.azureOpenAIApiDeploymentName &&\n      store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      const chatModel = new ChatOpenAI({\n        azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n        azureOpenAIApiInstanceName:\n          store.state.azureOpenaiApi.azureApiInstanceName,\n        azureOpenAIApiDeploymentName:\n          store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n        azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n        temperature: store.state.azureOpenaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot, { LoginError } from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://www.bing.com/new\";\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.48\";\n\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.10.3 OS/macOS\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://www.bing.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.status == 200 && response.data?.result?.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature:\n          response.data.conversationSignature ??\n          response.headers[\"x-sydney-conversationsignature\"],\n        secAccessToken:\n          response.headers[\"x-sydney-encryptedconversationsignature\"],\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Bing Chat conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://www.bing.com/turing/conversation/chats\")\n      .then((response) => {\n        available =\n          response.data?.result?.value == \"Success\" &&\n          !this.isAnonymous(response.data?.clientId); // Anonymous user is not supported any more\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking Bing Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"629adsredir\",\n            \"gbaa\",\n            \"gba\",\n            \"divkorbl2p\",\n            \"emovoicecf\",\n            \"tts3cf\",\n            \"crtrgxnew\",\n            \"wrapuxslimt\",\n            \"norbingchrome\",\n            \"sydconfigoptt\",\n            \"803iyjbexps0\",\n            \"178gentechs0\",\n            \"824fluxhi52s0\",\n            \"0825agicert\",\n            \"821iypapyrust\",\n          ],\n          verbosity: \"verbose\",\n          scenario: \"SERP\",\n          plugins: [],\n          isStartOfSession: context.invocationId === 0,\n          requestId: uuid,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          conversationSignature: context.conversationSignature, // TODO: test if this is needed when secAccessToken is set\n          participant: { id: context.clientId },\n          spokenTextMode: \"None\",\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        // If secAccessToken is not set, use the old way to pass conversationSignature\n        const url = context.secAccessToken\n          ? `wss://sydney.bing.com/sydney/ChatHub?sec_access_token=${encodeURIComponent(\n              context.secAccessToken,\n            )}`\n          : \"wss://sydney.bing.com/sydney/ChatHub\";\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data) + seperator;\n          },\n          unpackMessage: (data) => {\n            return data\n              .toString()\n              .split(seperator)\n              .filter(Boolean)\n              .map((r) => JSON.parse(r));\n          },\n        });\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Bing Chat:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (this.isAnonymous(context.clientId)) {\n                      reject(new LoginError(event.item.result.message));\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(\n                      new Error(\n                        `${event.item.result.message} (${event.item.result.value})`,\n                      ),\n                    );\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Bing Chat response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  static _arkoseScriptLoaded = false;\n  static _myEnforcement = null;\n  static _arkosePromise = null;\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (!response.data?.error && response.data?.accessToken) {\n        this.accessToken = response.data.accessToken;\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n    }\n\n    if (available) {\n      this.loadArkoseScript();\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(available);\n\n    return available;\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  loadArkoseScript() {\n    // Append the Arkose JS tag to the Document Body. Reference https://github.com/ArkoseLabs/arkose-examples/blob/main/vue-example/src/components/Arkose.vue\n    if (!ChatGPTBot._arkoseScriptLoaded) {\n      ChatGPTBot._arkoseScriptLoaded = true;\n      console.log(\"Loading Arkose API Script\", this.getFullname());\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src =\n        \"https://tcr9i.chat.openai.com/v2/35536E1E-65B4-4D96-9D97-6ADB7EFF8147/api.js\";\n      script.setAttribute(\"data-callback\", \"setupEnforcement\");\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        console.log(\"Arkose API Script loaded\");\n        window.setupEnforcement = this.setupEnforcement.bind(this);\n      };\n      script.onerror = () => {\n        console.log(\"Could not load the Arkose API Script!\");\n      };\n    }\n  }\n\n  setupEnforcement(myEnforcement) {\n    ChatGPTBot._myEnforcement = myEnforcement;\n    ChatGPTBot._myEnforcement.setConfig({\n      onReady: () => {},\n      onShown: () => {},\n      onShow: () => {},\n      onSuppress: () => {},\n      onCompleted: (response) => {\n        console.log(\"Arkose response:\", response);\n        ChatGPTBot._arkosePromise.resolve(response.token);\n      },\n      onReset: () => {},\n      onHide: () => {},\n      onError: (response) => {\n        console.log(\"Arkose error:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n      onFailed: (response) => {\n        console.log(\"Arkose failed:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n    });\n  }\n\n  async getArkoseToken() {\n    if (\n      ChatGPTBot._myEnforcement &&\n      this.constructor._model !== \"text-davinci-002-render-sha\"\n    ) {\n      return new Promise((resolve, reject) => {\n        ChatGPTBot._arkosePromise = { resolve, reject };\n        ChatGPTBot._myEnforcement.run();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: await this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message_id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.openaiApi.apiKey) {\n      const chatModel = new ChatOpenAI({\n        configuration: {\n          basePath: store.state.openaiApi.alterUrl\n            ? store.state.openaiApi.alterUrl\n            : \"\",\n        },\n        openAIApiKey: store.state.openaiApi.apiKey,\n        modelName: this.constructor._model ? this.constructor._model : \"\",\n        temperature: store.state.openaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { settings } = this.context;\n    const formkey = store.state.poe.formkey;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"4LxgHM6KpFqokX0Ox\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude-2-100k\",\n      capybara: \"Assistant\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n      vizcacha: \"GPT-4-32k\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      const response = await axios.get(url);\n\n      // Parse buildId\n      const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n      this.context.buildId = buildId[1];\n\n      // Parse chatId\n      const chatId = response.data.match(/\"chatId\":(\\d+),/);\n      this.context.chatId = chatId[1];\n\n      available = true;\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\nimport { VDataTable } from \"vuetify/labs/VDataTable\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\n// Init storage\nstore.commit(\"init\");\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\n\nconst vuetify = createVuetify({\n  components: { ...components, VDataTable },\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme: defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n          \"table-tr-2n\": \"#F6F8FA\",\n          \"code-font\": \"#476582\",\n          \"code-background\": \"#F3F4F4\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n          \"table-tr-2n\": \"#1d1e20\",\n          \"code-font\": \"#cbdae6\",\n          \"code-background\": \"#292a2d\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","// store/messagesPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst messagesPersist = new VuexPersist({\n  key: \"chatall-messages\",\n  storage: window.localStorage,\n  reducer: (state) => ({ messages: state.messages, chats: state.chats }), // Store only messages and chats\n});\n\nexport default messagesPersist;\n","// store/promptsPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst promptsPersist = new VuexPersist({\n  key: \"chatall-prompts\",\n  storage: window.localStorage,\n  reducer: (state) => ({ prompts: state.prompts }), // Store prompts\n});\n\nexport default promptsPersist;\n","import { createStore } from \"vuex\";\nimport VuexPersist from \"vuex-persist\";\nimport i18n from \"@/i18n\";\nimport messagesPersist from \"./messagesPersist\";\nimport promptsPersist from \"./promptsPersist\";\nimport { getMatomo } from \"@/composables/matomo\";\n\nlet isThrottleMessage = false;\nlet isThrottleThreadMessage = false;\nlet messageBuffer = [];\nlet threadMessageBuffer = [];\n// 初始化 VuexPersist 实例\nconst vuexPersist = new VuexPersist({\n  key: \"chatall-app\", // 用于存储的键名，可以根据你的应用更改\n  storage: window.localStorage, // 使用 localStorage，你还可以选择其他存储方式，如 sessionStorage\n  reducer: (state) => {\n    /* eslint-disable no-unused-vars */\n    const {\n      messages,\n      chats,\n      prompts,\n      updateCounter,\n      selectedResponses,\n      ...persistedState\n    } = state;\n    /* eslint-enable no-unused-vars */\n    return persistedState;\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      token: \"\",\n      ttl: 0,\n    },\n    claudeAi: {\n      org: \"\",\n    },\n    poe: {\n      formkey: \"\",\n    },\n    chats: [\n      {\n        title: \"New Chat\",\n        favBots: [\n          // default bots\n          { classname: \"ChatGPT35Bot\", selected: true },\n          { classname: \"ChatGPT4Bot\", selected: true },\n          { classname: \"BingChatCreativeBot\", selected: true },\n          { classname: \"BingChatBalancedBot\", selected: true },\n          { classname: \"BingChatPreciseBot\", selected: true },\n          { classname: \"BardBot\", selected: true },\n          { classname: \"Llama270bBot\", selected: true },\n          { classname: \"VicunaBot\", selected: true },\n        ],\n        contexts: {},\n        messages: [],\n        threads: [],\n        hide: false,\n        createdTime: new Date().getTime(),\n      },\n    ],\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    // TODO: delete following fields\n    selectedBots: null,\n    messages: [],\n    prompts: [],\n    actions: [\n      {\n        name: \"Summarize 1\",\n        prefix:\n          \"Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\\nDo not include the response' value column in your table.\\nSimplify the data and identify the differences.\\nEach response is delimited by the `resp` tag.\\nInside every response, the bot's name is delimited by the `name` tag, and the bot's response is delimited by the `value` tag.\",\n        template:\n          \"<resp>\\n  <name>{botName}</name>\\n  <value>{botResponse}</value>\\n</resp>\",\n        suffix: \"Give me the best response.\",\n        index: 0,\n      },\n    ],\n    selectedResponses: [],\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    setBotSelected(state, { botClassname, selected }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const bot = currentChat.favBots.find(\n        (bot) => bot.classname === botClassname,\n      );\n      if (bot) bot.selected = selected;\n      else currentChat.favBots.push({ classname: botClassname, selected });\n    },\n    setFavBotOrder(state, newOrder) {\n      const currentChat = state.chats[state.currentChatIndex];\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n    },\n    addFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      if (favBots.find((bot) => bot.classname === botClassname) == undefined)\n        favBots.push({ classname: botClassname, selected: true });\n    },\n    removeFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      const index = favBots.findIndex((bot) => bot.classname === botClassname);\n      favBots.splice(index, 1);\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setPoe(state, values) {\n      state.poe = { ...state.poe, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.latestPromptIndex = promptIndex;\n    },\n    setLatestThreadPromptIndex(state, { threadIndex, promptIndex }) {\n      const currentChat =\n        state.chats[state.currentChatIndex].threads[threadIndex];\n      currentChat.latestPromptIndex = promptIndex;\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    updateMessage(state) {\n      messageBuffer.forEach((update) => {\n        const { indexes, message } = update;\n        const { chatIndex, messageIndex } = indexes;\n        const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n        const chat = state.chats[i];\n        chat.messages[messageIndex] = {\n          ...chat.messages[messageIndex],\n          ...message,\n        };\n      });\n      messageBuffer = [];\n      isThrottleMessage = false;\n    },\n    updateThreadMessage(state) {\n      threadMessageBuffer.forEach((update) => {\n        const { indexes, message } = update;\n        const { chatIndex, messageIndex, threadIndex } = indexes;\n        const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n        const chat = state.chats[i];\n        chat.threads[threadIndex].messages[messageIndex] = {\n          ...chat.threads[threadIndex].messages[messageIndex],\n          ...message,\n        };\n      });\n      threadMessageBuffer = [];\n      isThrottleThreadMessage = false;\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      if (currentChat.contexts == undefined) currentChat.contexts = {};\n      currentChat.contexts[botClassname] = context;\n    },\n    clearMessages(state) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.contexts = {};\n      currentChat.messages = [];\n      currentChat.threads = [];\n    },\n    init(state) {\n      // Upgrade messages data structure\n      if (state.messages.length > 0) {\n        const chat = {\n          title: i18n.global.t(\"chat.newChat\"),\n          contexts: {},\n          messages: state.messages,\n        };\n        state.chats[0] = chat;\n        state.messages = [];\n      }\n      // Migrate to favorited bots\n      if (state.selectedBots) {\n        const bots = Object.keys(state.selectedBots);\n        state.chats[0].favBots = [];\n        for (const bot of bots) {\n          if (state.selectedBots[bot])\n            state.chats[0].favBots.push({ classname: bot, selected: true });\n        }\n        state.selectedBots = null;\n      }\n      if (state.chats[0].threads === undefined) {\n        state.chats[0].threads = [];\n      }\n      if (state.chats[0].index === undefined) {\n        state.chats[0].index = 0;\n        state.chats[0].createdTime = new Date().getTime();\n        state.isChatDrawerOpen = true;\n      }\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    editChatTitle(state, { title, isEditedByUser = false }) {\n      if (isEditedByUser) {\n        state.chats[state.currentChatIndex].title = title;\n        state.chats[state.currentChatIndex].isTitleUserEdited = true;\n      } else {\n        if (!state.chats[state.currentChatIndex].isTitleUserEdited) {\n          // if user has not edit title before, set title\n          state.chats[state.currentChatIndex].title = title;\n        } // else do not overwrite user title\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    deleteChats(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const newChats = [\n        {\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          index: 0,\n          title: i18n.global.t(\"chat.newChat\"),\n          createdTime: new Date().getTime(),\n        },\n      ];\n      state.chats = newChats;\n      state.currentChatIndex = 0;\n    },\n    addPrompt(state, values) {\n      const addPrompt = { ...values };\n      addPrompt.index = state.prompts.push(addPrompt) - 1;\n    },\n    editPrompt(state, values) {\n      const { index } = values;\n      state.prompts[index] = { ...state.prompts[index], ...values };\n    },\n    deletePrompt(state, values) {\n      state.prompts[values.index].hide = true;\n    },\n    addAction(state, values) {\n      const addAction = { ...values };\n      addAction.index = state.actions.push(addAction) - 1;\n    },\n    editAction(state, values) {\n      const { index } = values;\n      state.actions[index] = { ...state.actions[index], ...values };\n    },\n    deleteAction(state, values) {\n      state.actions[values.index].hide = true;\n    },\n    addSelectedResponses(state, value) {\n      value.selectedIndex = state.selectedResponses.push(value) - 1;\n    },\n    deleteSelectedResponses(state, value) {\n      const index = state.selectedResponses.findIndex(\n        (r) => r.selectedIndex === value,\n      );\n      state.selectedResponses.splice(index, 1);\n    },\n    deleteAllSelectedResponses(state) {\n      state.selectedResponses = [];\n    },\n  },\n  actions: {\n    sendPrompt({ commit, state, dispatch }, { prompt, bots, promptIndex }) {\n      isThrottleMessage = false;\n      const currentChat = state.chats[state.currentChatIndex];\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n          hide: false,\n        };\n        // add message\n        const index = currentChat.messages.push(promptMessage);\n        promptMessage.index = index - 1;\n        promptIndex = promptMessage.index;\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      for (const bot of bots) {\n        const message = {\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          done: false,\n          highlight: false,\n          hide: false,\n          className: bot.getClassname(),\n          promptIndex: promptIndex,\n        };\n\n        // workaround for tracking message position\n        message.index = currentChat.messages.push(message) - 1;\n\n        bot.sendPrompt(\n          prompt,\n          (indexes, values) =>\n            dispatch(\"updateMessage\", { indexes, message: values }),\n          { chatIndex: state.currentChatIndex, messageIndex: message.index },\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          bot.getClassname(),\n          prompt.length,\n        );\n      }\n    },\n    sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, responseIndex, threadIndex, promptIndex },\n    ) {\n      isThrottleThreadMessage = false;\n      const currentChat = state.chats[state.currentChatIndex];\n      let thread;\n      if (threadIndex !== undefined) {\n        // existing thread\n        thread = currentChat.threads[threadIndex];\n      } else {\n        // new thread\n        const newThreadMessage = {\n          responseIndex: responseIndex,\n          messages: [],\n        };\n        newThreadMessage.index = currentChat.threads.push(newThreadMessage) - 1;\n        thread = newThreadMessage;\n        threadIndex = thread.index;\n        // update threadIndex to response\n        commit(\"setResponseThreadIndex\", {\n          responseIndex,\n          threadIndex: thread.index,\n        });\n      }\n\n      if (promptIndex === undefined) {\n        // index starts at zero, using `if (!promptIndex)` will enter wrong condition for first time.\n        // if promptIndex not found, not resend, push to messages array\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        // add message\n        threadPromptMessage.index =\n          thread.messages.push(threadPromptMessage) - 1;\n        promptIndex = threadPromptMessage.index;\n      }\n      commit(\"setLatestThreadPromptIndex\", {\n        threadIndex: thread.index,\n        promptIndex,\n      }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        done: false,\n        highlight: false,\n        hide: false,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n\n      // workaround for tracking message position\n      threadResponseMessage.index =\n        thread.messages.push(threadResponseMessage) - 1;\n\n      bot.sendPrompt(\n        prompt,\n        (indexes, values) =>\n          dispatch(\"updateThreadMessage\", { indexes, message: values }),\n        {\n          chatIndex: state.currentChatIndex,\n          messageIndex: threadResponseMessage.index,\n          threadIndex: threadIndex,\n        },\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    updateMessage({ commit, state }, { indexes, message: values }) {\n      messageBuffer.push({ indexes, message: values });\n      if (!isThrottleMessage) {\n        isThrottleMessage = true;\n        setTimeout(() => {\n          commit(\"updateMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const i =\n          indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n        const chat = state.chats[i];\n        const message = { ...chat.messages[indexes.messageIndex], ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    updateThreadMessage({ commit, state }, { indexes, message: values }) {\n      threadMessageBuffer.push({ indexes, message: values });\n      if (!isThrottleThreadMessage) {\n        isThrottleThreadMessage = true;\n        setTimeout(() => {\n          commit(\"updateThreadMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const i =\n          indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n        const chat = state.chats[i];\n        let message = { ...chat.threads[indexes.threadIndex], ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    addSelectedResponses({ commit, state }, value) {\n      commit(\"addSelectedResponses\", value);\n      return state.selectedResponses.length - 1;\n    },\n    createChatAndSelect({ commit, state }) {\n      commit(\"createChat\");\n      commit(\"selectChat\", state.chats.length - 1);\n    },\n  },\n  getters: {\n    currentChat: (state) => {\n      if (state.chats.length === 0) {\n        return null;\n      }\n      return state.chats[state.currentChatIndex];\n    },\n    // get current chat prompt\n    getCurrentChatPrompt: (state, getters) => {\n      const messages = getters.currentChat.messages;\n      return messages.filter((message) => message?.type === \"prompt\");\n    },\n  },\n  modules: {\n    // ...你的模块\n  },\n  plugins: [vuexPersist.plugin, messagesPersist.plugin, promptsPersist.plugin], // 添加插件到 store\n});\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 15,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_PRE_NEXT = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"up/down\"],\n  offset: {\n    top: 15,\n    left: 100,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_MANAGEMENT = {\n  elementId: \"prompt-btn\",\n  key: [modifier, \"p\"],\n  offset: {\n    top: -65,\n    left: 5,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_PROMPT_PRE_NEXT,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          class=\"bg-primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"store.getters.currentChat.index === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    class=\"pa-3 pr-0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\" class=\"mr-4\"> mdi-message-outline </v-icon>\n    </template>\n    <template\n      #append\n      v-if=\"store.getters.currentChat.index === props.chat.index\"\n    >\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding: 6px\"\n    class=\"pl-3 pr-0\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst emit = defineEmits([\"confirmHideChat\", \"focusTextarea\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\nwatch(() => store.state.currentChatIndex, unsetCursorWait);\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  if (props.chat.index === store.state.currentChatIndex) return;\n  setCursorWait();\n  await new Promise((r) => setTimeout(r, 25));\n  store.commit(\"selectChat\", props.chat.index);\n  emit(\"focusTextarea\");\n}\n\nfunction setCursorWait() {\n  document.body.style.cursor = \"wait\";\n  isCursorWait.value = true;\n}\n\nfunction unsetCursorWait() {\n  document.body.style.cursor = \"\";\n  isCursorWait.value = false;\n}\n\nasync function confirmHideChat() {\n  emit(\"confirmHideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  store.commit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__append {\n  margin-left: 0 !important;\n}\n\n:deep() .v-input__prepend {\n  margin-right: 0.25rem !important;\n}\n\n:deep() .v-field__input {\n  padding-left: 12px;\n  padding-right: 0;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=c5a6b94e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c5a6b94e\"]])\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddNewChat\"\n        @shortkey=\"onAddNewChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in chatsReversed\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :chat=\"chat\"\n        @confirm-hide-chat=\"confirmHideChat\"\n        @focus-textarea=\"focusTextarea\"\n        :key=\"chat.index\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref, computed, onUpdated, nextTick } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\n\nconst store = useStore();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst chatsReversed = computed(() => store.state.chats.slice().reverse());\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction onAddNewChat() {\n  store.commit(\"createChat\");\n  store.commit(\"selectChat\", store.state.chats.length - 1);\n  focusTextarea();\n}\n\nasync function confirmHideChat() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (result) {\n    store.commit(\"hideChat\");\n    selectLatestVisibleChat();\n  }\n}\n\nfunction selectLatestVisibleChat() {\n  let isAnyChatVisible = false;\n  for (let i = 0; i < chatsReversed.value.length; i++) {\n    const chat = chatsReversed.value[i];\n    if (!chat.hide) {\n      isAnyChatVisible = true;\n      store.commit(\"selectChat\", chat.index);\n      focusTextarea();\n      break;\n    }\n  }\n  if (!isAnyChatVisible) {\n    // if there is no visible chat, create a new chat\n    store.commit(\"createChat\");\n    store.commit(\"selectChat\", store.state.chats.length - 1);\n    focusTextarea();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem !important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=85dea396&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-85dea396\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"props.isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ props.message.content }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4e9f2e3c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e9f2e3c\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(message, index) in messages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message)\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <template v-else>\n      <chat-responses\n        v-if=\"pushResponseAndCheckIsNextMessagePromptType(index, message)\"\n        :columns=\"1\"\n        :responses=\"responses\"\n        :threadIndex=\"props.threadIndex\"\n        :isThread=\"true\"\n        :updateThreadMessage=\"props.updateThreadMessage\"\n      ></chat-responses>\n    </template>\n  </template>\n</template>\n\n<script setup>\nimport { ref, computed, toRefs } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponses from \"@/components/Messages/ChatResponses.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  threadIndex: {\n    type: Number,\n    required: true,\n  },\n  updateThreadMessage: {\n    type: Function,\n  },\n});\n\nconst { threadIndex } = toRefs(props);\nconst thread = ref(store.getters.currentChat.threads[threadIndex.value]);\nconst messages = computed(() => {\n  return (thread.value ? thread.value.messages : []).filter(\n    (message) => !message.hide,\n  );\n});\n\nlet responses = []; // this array store a prompt responses in a thread\nfunction checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message) {\n  if (message.type === \"prompt\") {\n    responses = []; // clear responses for next prompt's responses\n    return true;\n  }\n  return false;\n}\n\nfunction pushResponseAndCheckIsNextMessagePromptType(index, response) {\n  const nextIndex = index + 1;\n  if (!response.hide) responses.push(response);\n  if (nextIndex >= messages.value.length) {\n    return true; // allow last element\n  }\n  return messages.value[nextIndex].type === \"prompt\";\n}\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n\n    if (available) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        available = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        available = false;\n      }\n    }\n\n    return available;\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"machine_affinity\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3precise\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"adsredirecturl\",\n    \"agicert\",\n    \"iypapyrus\",\n    \"eredirecturl\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"machine_affinity\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"galileo\",\n    \"saharagenconv5\",\n    \"fluxhint\",\n    \"glfluxv13\",\n    \"adsredirecturl\",\n    \"agicert\",\n    \"iypapyrus\",\n    \"eredirecturl\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"machine_affinity\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3imaginative\",\n    \"adsredirecturl\",\n    \"agicert\",\n    \"iypapyrus\",\n    \"eredirecturl\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.webp\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-logo.jpeg\"; // Place it in public/bots/\n  static _model = \"vicuna-33b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLMBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.svg\"; // Place it in public/bots/\n  static _model = \"chatglm2-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT432kPoeBot extends PoeBot {\n  static _className = \"ChatGPT432kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"gpt-4-32k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"vizcacha\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Llama2HC70bBot extends HuggingChatBot {\n  static _className = \"Llama2HC70bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-huggingchat-logo.png\"; // Place it in public/bots/\n  static _model = \"meta-llama/Llama-2-70b-chat-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama213bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama213bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-13b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama27bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama27bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-7b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama270bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama270bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-70b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/lmsys/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport ChatGPT432kPoeBot from \"./poe/ChatGPT432kPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WenxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport OpenAssistantBot from \"./OpenAssistantBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\nimport Llama2HC70bBot from \"./huggingface/Llama2HC70bBot\";\nimport Llama213bBot from \"./lmsys/Llama213bBot\";\nimport Llama27bBot from \"./lmsys/Llama27bBot\";\nimport Llama270bBot from \"./lmsys/Llama270bBot\";\n\nconst all = [\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WenxinQianfanTurboBot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  ChatGPT432kPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  Llama27bBot.getInstance(),\n  Llama213bBot.getInstance(),\n  Llama270bBot.getInstance(),\n  Llama2HC70bBot.getInstance(),\n  MOSSBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  OpenAssistantBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SageBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  VicunaBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [\"ClaudeBot\", \"ChatGPTBrowsingBot\", \"ChatGLMBot\", \"AlpacaBot\"];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    return all.find((bot) => bot.getClassname() === className);\n  },\n};\n\ndisabled.forEach((className) => {\n  const bot = bots.getBotByClassName(className);\n  bot?.disable();\n});\n\nexport const botTags = {\n  free: [\n    bots.getBotByClassName(\"BardBot\"),\n    bots.getBotByClassName(\"BingChatBalancedBot\"),\n    bots.getBotByClassName(\"BingChatCreativeBot\"),\n    bots.getBotByClassName(\"BingChatPreciseBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGPT35Bot\"),\n    bots.getBotByClassName(\"ChatGPT35PoeBot\"),\n    bots.getBotByClassName(\"ClaudeBot\"),\n    bots.getBotByClassName(\"ClaudeInstantPoeBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"YouChatBot\"),\n    bots.getBotByClassName(\"GradioAppBot\"),\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"CharacterAIBot\"),\n    bots.getBotByClassName(\"ClaudeAIBot\"),\n    bots.getBotByClassName(\"PiBot\"),\n    bots.getBotByClassName(\"SageBot\"),\n  ],\n  paid: [\n    bots.getBotByClassName(\"ChatGPT4Bot\"),\n    bots.getBotByClassName(\"ChatGPT4MobileBot\"),\n    bots.getBotByClassName(\"ChatGPT4PoeBot\"),\n    bots.getBotByClassName(\"ChatGPTBrowsingBot\"),\n    bots.getBotByClassName(\"ClaudeInstant100kPoeBot\"),\n    bots.getBotByClassName(\"ClaudePlusPoeBot\"),\n    bots.getBotByClassName(\"ChatGPT432kPoeBot\"),\n  ],\n  openSource: [\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n  ],\n  api: [\n    bots.getBotByClassName(\"AzureOpenAIAPIBot\"),\n    bots.getBotByClassName(\"OpenAIAPI35Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI3516KBot\"),\n    bots.getBotByClassName(\"OpenAIAPI4Bot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n  ],\n  madeInChina: [\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n  ],\n};\nexport default bots;\n","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted && isSelectedResponsesEmpty ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n      isSelectedResponsesEmpty ? 'cursor-auto' : 'cursor-pointer',\n      isSelected ? 'highlight-border' : '',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n    :ripple=\"!isSelectedResponsesEmpty\"\n    @click=\"!isSelectedResponsesEmpty && select($event)\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n        v-show=\"isSelectedResponsesEmpty\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        v-show=\"isSelectedResponsesEmpty\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        v-show=\"isSelectedResponsesEmpty\"\n        icon\n        @click=\"hide\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        :class=\"getSelectButtonClass\"\n        @click=\"select($event)\"\n      >\n        <v-icon>{{\n          isSelected ? \"mdi-check-circle\" : \"mdi-check-circle-outline\"\n        }}</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"props.messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!props.isThread && messages[0].threadIndex !== undefined\">\n        <!-- if the repsonse is not a thread and there is value in message.threadIndex, means thread existed for this response\n            we pass in threadIndex into <chat-thread> to render based on the threadIndex -->\n        <chat-thread\n          :key=\"rerenderThread\"\n          :threadIndex=\"messages[0].threadIndex\"\n          :updateThreadMessage=\"updateThreadMessage\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!props.isThread && message.threadIndex !== undefined\">\n          <!-- if the repsonse is not a thread and there is value in message.threadIndex, means thread existed for this response\n          we pass in threadIndex into <chat-thread> to render based on the threadIndex -->\n          <chat-thread\n            :key=\"rerenderThread\"\n            :threadIndex=\"message.threadIndex\"\n            :updateThreadMessage=\"updateThreadMessage\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageLeftButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageLeft\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageRightButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageRight\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { onMounted, ref, watch, computed, nextTick, toRaw } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatThread from \"./ChatThread.vue\";\nimport bots from \"@/bots\";\nimport { Theme } from \"@/theme\";\n\nconst props = defineProps({\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  threadIndex: {\n    type: Number,\n    required: false,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emits = defineEmits([\"update-message\", \"update-thread-message\"]);\n\nconst matomo = useMatomo();\nconst store = useStore();\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst pageLeftButton = ref();\nconst pageRightButton = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst isSelected = ref(false);\nconst isSelectedList = ref([]);\nconst isSelectedResponsesEmpty = ref(\n  store.state.selectedResponses.length === 0,\n);\nconst botInstance = computed(() => {\n  return bots.getBotByClassName(props.messages[0].className);\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() => props.messages[maxPage.value].highlight); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messages array is in correct order\n  () =>\n    props.messages[0].promptIndex !== undefined &&\n    store.getters.currentChat.latestPromptIndex !== undefined &&\n    store.getters.currentChat.latestPromptIndex ===\n      props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messages array is in correct order\n    const responseIndex =\n      store.getters.currentChat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex =\n      store.getters.currentChat.messages[responseIndex].promptIndex; // using responseIndex to get response from messages, and in the repsonse we can retrieve promptIndex\n    return (\n      threadPromptIndex !== undefined &&\n      store.getters.currentChat.latestPromptIndex !== undefined &&\n      store.getters.currentChat.latestPromptIndex === threadPromptIndex\n    );\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected() && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.threadIndex !== undefined),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      isAllDone.value && // if all response done\n      messageBotIsSelected() && // if responding bot selected\n      props.messages[0].promptIndex !== undefined && // if current threads is a response to latest prompt\n      store.getters.currentChat.threads[props.threadIndex].latestPromptIndex !==\n        undefined &&\n      store.getters.currentChat.threads[props.threadIndex].latestPromptIndex ===\n        props.messages[0].promptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected() && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\nconst getSelectButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread && isSelectedResponsesEmpty.value,\n  \"hide-thread-btn\": props.isThread && isSelectedResponsesEmpty.value,\n}));\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    responseIndex: props.messages[maxPage.value].index, // always send prompt in thread to last page\n    threadIndex: props.messages[carouselModel.value].threadIndex,\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nconst rerenderThread = ref(0);\nconst rerenderThreadWhenChatIndexChanged = () => {\n  rerenderThread.value = Math.random();\n};\nwatch(() => store.state.currentChatIndex, rerenderThreadWhenChatIndexChanged);\nwatch(\n  () => store.state.selectedResponses.length,\n  updateIsSelectedResponsesEmpty,\n);\n\nconst updateThreadMessage = (threadIndex, messageIndex, values) => {\n  store.dispatch(\"updateThreadMessage\", {\n    indexes: {\n      chatIndex: store.state.currentChatIndex,\n      messageIndex,\n      threadIndex,\n    },\n    message: values,\n  });\n};\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    emits(\n      \"update-thread-message\",\n      props.threadIndex,\n      props.messages[maxPage.value].index,\n      {\n        highlight: !props.messages[maxPage.value].highlight, // only update last response highlight\n      },\n    );\n  } else {\n    emits(\"update-message\", props.messages[maxPage.value].index, {\n      highlight: !props.messages[maxPage.value].highlight,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[carouselModel.value].className,\n    props.messages[carouselModel.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      emits(\n        \"update-thread-message\",\n        props.threadIndex,\n        props.messages[carouselModel.value].index,\n        { hide: true },\n      );\n    } else {\n      emits(\"update-message\", props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nfunction resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage =\n      store.getters.currentChat.threads[props.threadIndex].messages[\n        responseMessage.promptIndex\n      ];\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        responseIndex: responseMessage.index,\n        threadIndex: props.threadIndex,\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage =\n      store.getters.currentChat.messages[responseMessage.promptIndex];\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction messageBotIsSelected() {\n  var favBot = store.getters.currentChat.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n\nlet selectedIndex = undefined;\nasync function select(event) {\n  event.stopPropagation();\n  if (\n    pageLeftButton.value?.$el.contains(event.target) ||\n    pageRightButton.value?.$el.contains(event.target)\n  ) {\n    // return when click on page left, right button\n    return;\n  }\n\n  if (isSelected.value) {\n    store.commit(\"deleteSelectedResponses\", selectedIndex);\n    isSelected.value = false;\n    const index = isSelectedList.value.indexOf(carouselModel.value);\n    isSelectedList.value.splice(index, 1);\n  } else {\n    selectedIndex = await store.dispatch(\"addSelectedResponses\", {\n      ...toRaw(props.messages[carouselModel.value]),\n    });\n    isSelected.value = true;\n    isSelectedList.value.push(carouselModel.value);\n  }\n}\n\nfunction updateIsSelectedResponsesEmpty() {\n  isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  if (isSelectedResponsesEmpty.value) {\n    isSelected.value = false;\n    isSelectedList.value = [];\n  }\n}\n\nfunction pageLeft() {\n  carouselModel.value = Math.max(carouselModel.value - 1, 0);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n\nfunction pageRight() {\n  carouselModel.value = Math.min(carouselModel.value + 1, maxPage.value);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn,\n.hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n\n.response:hover .hide-btn,\n.response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert {\n  filter: invert(100%);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=7a17b926&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7a17b926\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(grouped, index) in groupedResponses\" :key=\"index\">\n    <chat-response\n      :columns=\"columns\"\n      :messages=\"grouped\"\n      :isThread=\"props.isThread\"\n      :threadIndex=\"props.threadIndex\"\n      @update-message=\"props.updateMessage\"\n      @update-thread-message=\"props.updateThreadMessage\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\n\nconst props = defineProps({\n  responses: {\n    type: Array,\n    default: () => [],\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  updateMessage: {\n    type: Function,\n  },\n  updateThreadMessage: {\n    type: Function,\n  },\n  threadIndex: {\n    type: Number,\n    required: false,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst groupedResponses = computed(() => {\n  // group by bot class name\n  // group responses' from same bot in an array to populate to v-carousel\n  return props.responses.reduce(function (r, a) {\n    r[a.className] = r[a.className] || [];\n    r[a.className].push(a);\n    return r;\n  }, Object.create(null));\n});\n</script>\n","import script from \"./ChatResponses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in messages\" :key=\"index\">\n        <!-- Check if the current message is a prompt\n          If true, render <chat-prompt> component and set responses array empty -->\n        <chat-prompt\n          v-if=\"checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message)\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <template v-else>\n          <!-- If current message is response, push current message to responses array.\n            Then check if next message.type === 'prompt', if true, render <chat-responses> -->\n          <chat-responses\n            v-if=\"pushResponseAndCheckIsNextMessagePromptType(index, message)\"\n            :columns=\"columns\"\n            :responses=\"responses\"\n            :update-message=\"updateMessage\"\n          ></chat-responses>\n        </template>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponses from \"./ChatResponses.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chatIndex: {\n    type: Number,\n    default: 0,\n  },\n});\n\nconst autoScroll = ref(true);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst messages = computed(() => store.state.chats[props.chatIndex].messages);\n\nconst updateMessage = (index, values) => {\n  store.dispatch(\"updateMessage\", {\n    indexes: { chatIndex: store.state.currentChatIndex, messageIndex: index },\n    message: values,\n  });\n};\n\nconst scrollToBottom = ({ immediately = false }) => {\n  nextTick(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: immediately ? \"instant\" : \"smooth\",\n    });\n  });\n};\n\nconst autoScrollToBottom = () => {\n  if (autoScroll.value) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nwatch(() => store.getters.currentChat.messages.length, autoScrollToBottom);\nwatch(() => store.state.updateCounter, autoScrollToBottom);\n\nconst onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll.value =\n    scrollPosition >= document.documentElement.scrollHeight - 10;\n};\n\nonMounted(() => {\n  store.getters.currentChat.messages.forEach((message) => {\n    message.done = true;\n  });\n  window.addEventListener(\"scroll\", onScroll);\n  scrollToBottom({ immediately: true });\n});\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", onScroll);\n});\n\nlet responses = []; // this array store a prompt responses\nfunction checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message) {\n  if (message.type === \"prompt\") {\n    responses = []; // clear responses for next prompt's responses\n    return true;\n  }\n  return false;\n}\n\nfunction pushResponseAndCheckIsNextMessagePromptType(index, response) {\n  const nextIndex = index + 1;\n  if (!response.hide) responses.push(response);\n  if (nextIndex >= messages.value.length) {\n    return true; // allow last element\n  }\n  return messages.value[nextIndex].type === \"prompt\";\n}\n</script>\n\n<style scoped>\n.messages {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: 100%;\n  overflow-y: auto;\n  gap: 16px;\n  padding: 0;\n}\n\n.message-grid {\n  display: grid;\n  grid-gap: 16px;\n  width: 100%;\n  padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=3fc2c603&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3fc2c603\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.PACfile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.PACfile;\n  if (newInputfile.value) {\n    proxySettings.value.PACfile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.PACfile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {\n  PromptTemplate,\n  FewShotPromptTemplate,\n  LengthBasedExampleSelector,\n} from \"langchain/prompts\";\n\nconst prefixPlaceholder = `Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\nDo not include the response' value column in your table.\nSimplify the data and identify the differences.\nEach response is delimited by the \\`resp\\` tag.\nInside every response, the bot's name is delimited by the \\`name\\` tag, and the bot's response is delimited by the \\`value\\` tag.`;\nconst templatePlaceholder = `<resp>\n    <name>{botName}</name>\n    <value>{botResponse}</value>\n</resp>`;\nconst suffixPlaceholder = \"Give me the best response.\";\n\nasync function preview(prefix, exampleTemplate, suffix, data) {\n  const examplePrompt = new PromptTemplate({\n    template: exampleTemplate,\n    inputVariables: [\"botName\", \"botResponse\"],\n  });\n\n  const exampleSelector = await LengthBasedExampleSelector.fromExamples(data, {\n    examplePrompt,\n    maxLength: Number.MAX_VALUE,\n  });\n\n  const dynamicPrompt = new FewShotPromptTemplate({\n    exampleSelector,\n    examplePrompt,\n    prefix: prefix,\n    suffix: suffix,\n    inputVariables: [],\n  });\n  return await dynamicPrompt.format();\n}\n\nexport { prefixPlaceholder, templatePlaceholder, suffixPlaceholder, preview };\n","<template>\n  <v-list>\n    <v-list-item>\n      <v-btn\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.deleteAllChatHistory')\"\n        @click=\"deleteChats\"\n      ></v-btn>\n      <v-btn\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.downloadAllChatHistory')\"\n        @click=\"downloadJson\"\n        style=\"margin-left: 10px\"\n      ></v-btn>\n    </v-list-item>\n    <v-list-item>\n      <v-row>\n        <v-col class=\"align-baseline d-flex\" style=\"font-size: 1.5rem\">\n          <label class=\"pr-3\">{{ $t(\"chat.actions\") }}</label>\n          <v-btn\n            class=\"mt-1\"\n            color=\"primary\"\n            variant=\"outlined\"\n            prepend-icon=\"mdi-plus\"\n            :text=\"$t('chat.addAction')\"\n            @click=\"add\"\n          ></v-btn>\n        </v-col>\n      </v-row>\n    </v-list-item>\n    <v-list-item\n      v-for=\"action in userActions\"\n      density=\"comfortable\"\n      :key=\"action.index\"\n      :value=\"action.index\"\n      :ripple=\"false\"\n    >\n      <div class=\"align-center d-flex\">\n        <v-list-item-title class=\"pr-5\">{{ action.name }}</v-list-item-title>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-pencil-outline\"\n          @click=\"edit(action)\"\n          style=\"background-color: transparent\"\n        ></v-btn>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-delete-outline\"\n          @click=\"deleteAction(action)\"\n          style=\"margin: 0; background-color: transparent\"\n        ></v-btn>\n      </div>\n    </v-list-item>\n  </v-list>\n  <v-dialog\n    persistent\n    width=\"90%\"\n    height=\"90%\"\n    :model-value=\"isOpenAddEditAction\"\n    @update:model-value=\"isOpenAddEditAction = $event\"\n  >\n    <v-card>\n      <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n        <v-text-field\n          required\n          autofocus\n          v-model=\"actionName\"\n          placeholder=\"Summarize\"\n          :label=\"$t('chat.actionName')\"\n          :rules=\"[required]\"\n        ></v-text-field>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"prefix\"\n          :placeholder=\"prefixPlaceholder\"\n          :label=\"$t('chat.prefix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"4\"\n          v-model=\"template\"\n          :placeholder=\"templatePlaceholder\"\n          :label=\"$t('chat.actionTemplate')\"\n          :rules=\"[required]\"\n          @input=\"onInputTemplate\"\n        >\n          <template v-slot:append-inner>\n            <v-btn\n              flat\n              size=\"x-small\"\n              icon=\"mdi-help\"\n              style=\"background-color: inherit\"\n              @click=\"\n                isShowTemplateParametersDialog = !isShowTemplateGuideTooltip\n              \"\n            >\n            </v-btn>\n          </template>\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"suffix\"\n          :placeholder=\"suffixPlaceholder\"\n          :label=\"$t('chat.suffix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <label class=\"pl-4\" style=\"font-size: 1.2rem\">{{\n          $t(\"chat.preview\")\n        }}</label>\n        <chat-prompt\n          class=\"w-100\"\n          :message=\"{ content: previewRef }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-form>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          variant=\"outlined\"\n          color=\"primary\"\n          @click=\"isOpenAddEditAction = false\"\n          >{{ $t(\"modal.cancel\") }}</v-btn\n        >\n        <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditAction\">{{\n          $t(\"modal.done\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n  <v-dialog\n    width=\"auto\"\n    :model-value=\"isShowTemplateParametersDialog\"\n    v-on:after-leave=\"isShowTemplateParametersDialog = false\"\n  >\n    <v-card>\n      <v-md-preview class=\"pa-4\" :text=\"templateParametersInfo\" />\n    </v-card>\n  </v-dialog>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport bots from \"@/bots\";\nimport {\n  preview,\n  prefixPlaceholder,\n  templatePlaceholder,\n  suffixPlaceholder,\n} from \"../helpers/template-helper\";\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst formRef = ref(null);\nconst isOpenAddEditAction = ref(false);\nconst actionName = ref(\"\");\nconst prefix = ref(\"\");\nconst template = ref(\"\");\nconst suffix = ref(\"\");\nconst previewRef = ref(\"\");\nconst templateParametersInfo = `\n#### ${i18n.global.t(\"chat.templateParameters\")}:\n| ${i18n.global.t(\"chat.parameter\")}|${i18n.global.t(\"chat.description\")}|\n|-|-|\n|{botName}|${i18n.global.t(\"chat.botNameDesc\")}|\n|{botResponse}|${i18n.global.t(\"chat.botResponseDesc\")}|`;\nconst isShowTemplateParametersDialog = ref(false);\nconst store = useStore();\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\nconst previewSampleData = [\n  {\n    botName: \"Bing Chat (Creative)\",\n    botResponse: \"Hello, this is Bing. How are you today? 😊\",\n  },\n  {\n    botName: \"ChatGPT (GPT-3.5)\",\n    botResponse: \"Hello! How can I assist you today?\",\n  },\n  {\n    botName: \"Bard\",\n    botResponse: \"Hi there! How can I help you today?\",\n  },\n  {\n    botName: \"YouChat\",\n    botResponse: \"Hi there! How can I assist you today?\",\n  },\n];\nlet editIndex = undefined;\nlet isEdit = false;\nconst required = (value) =>\n  value?.trim() ? true : i18n.global.t(\"prompt.required\");\n\n// This function downloads the chat history as a JSON file.\nconst downloadJson = () => {\n  // Get the chat history from localStorage.\n  const chatallMessages = localStorage.getItem(\"chatall-messages\");\n  if (!chatallMessages) {\n    console.error(\"chatall-messages not found in localStorage\");\n    return;\n  }\n\n  const chats = JSON.parse(chatallMessages)?.chats ?? [];\n\n  // Create an array of messages from the chat history.\n  const messages = chats\n    .filter((d) => !d.hide)\n    .map((chat) => ({\n      // The title of the chat.\n      title: chat.title,\n      // The messages in the chat.\n      messages: chat.messages\n        .filter((d) => !d.hide)\n        .reduce((arr, message) => {\n          const t = message.type;\n          const content = message.content;\n          if (t == \"prompt\") {\n            arr.push({\n              prompt: content,\n              responses: [],\n            });\n          } else {\n            const botClassname = message.className;\n            const bot = bots.getBotByClassName(botClassname);\n            const botName = bot.getFullname();\n            arr.at(-1).responses.push({\n              content,\n              botName,\n              botClassname,\n              botModel: message.model,\n              highlight: message.highlight,\n            });\n          }\n          return arr;\n        }, []),\n    }));\n\n  // Create a blob that contains the JSON data.\n  // The space parameter specifies the indentation of nested objects in the string representation.\n  const blob = new Blob([JSON.stringify({ chats: messages }, null, 2)], {\n    // The type of the blob.\n    type: \"application/json\",\n  });\n\n  const url = URL.createObjectURL(blob);\n\n  // Create a file name for the JSON file.\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // months are 0-based in JavaScript\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hour = String(date.getHours()).padStart(2, \"0\");\n  const minute = String(date.getMinutes()).padStart(2, \"0\");\n  const second = String(date.getSeconds()).padStart(2, \"0\");\n  const fileName = `chatall-history-${year}${month}${day}-${hour}${minute}${second}`;\n\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = `${fileName}.json`;\n  document.body.appendChild(a);\n\n  // Click the anchor element to download the file.\n  a.click();\n\n  // Remove the anchor element from the document body.\n  document.body.removeChild(a);\n\n  // Revoke the URL for the blob.\n  URL.revokeObjectURL(url);\n};\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n\nfunction add() {\n  isEdit = false;\n  actionName.value = \"\";\n  prefix.value = prefixPlaceholder;\n  template.value = templatePlaceholder;\n  suffix.value = suffixPlaceholder;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nfunction edit(item) {\n  isEdit = true;\n  actionName.value = item.name;\n  prefix.value = item.prefix;\n  template.value = item.template;\n  suffix.value = item.suffix;\n  editIndex = item.index;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nasync function onInputTemplate() {\n  try {\n    previewRef.value = await preview(\n      prefix.value,\n      template.value,\n      suffix.value,\n      previewSampleData,\n    );\n  } catch (error) {\n    previewRef.value = `Error:\\n${error.message}`;\n  }\n}\n\nasync function addEditAction() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit) {\n      store.commit(\"editAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n        index: editIndex,\n      });\n    } else {\n      store.commit(\"addAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n      });\n    }\n    isOpenAddEditAction.value = false;\n  }\n}\n\nasync function deleteAction(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideAction\"),\n  );\n  if (result) {\n    store.commit(\"deleteAction\", { ...item });\n  }\n}\n</script>\n<style scoped>\n.no-text-transform {\n  text-transform: none !important;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() .v-textarea .v-field {\n  padding: 0;\n}\n</style>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatSetting.vue?vue&type=style&index=0&id=7c54998f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7c54998f\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport OpenAssistantBotSettings from \"./BotSettings/OpenAssistantBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"openAssistant\", component: OpenAssistantBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=c2988198&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2988198\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert {\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=5e9ca404&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in shownBots\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n            <template v-slot:append>\n              <v-btn-toggle\n                v-model=\"selectedTags\"\n                divided\n                color=\"primary\"\n                group\n                variant=\"outlined\"\n                rounded=\"xl\"\n                @update:model-value=\"filterBots($event)\"\n              >\n                <v-btn v-for=\"(tag, index) in tags\" :key=\"index\" :value=\"tag\">\n                  {{ $t(`footer.${tag}`) }}\n                </v-btn>\n              </v-btn-toggle>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport { botTags } from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nlet menu = ref(false);\n\nconst props = defineProps([\"favBots\"]);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst tags = Object.keys(botTags);\nconst selectedTags = ref([]);\n\nconst notDisabledBots = bots.all.filter((bot) => !bot.isDisabled());\nconst shownBots = ref(notDisabledBots);\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\nfunction filterBots(selectedTags) {\n  let filteredIn = notDisabledBots;\n\n  // If the toggle is not multi-select, the selectedTags will be a string\n  if (typeof selectedTags === \"string\") {\n    selectedTags = [selectedTags];\n  }\n\n  if (selectedTags.length) {\n    const tagBots = selectedTags.map((tag) => botTags[tag]);\n    filteredIn = filteredIn.filter((bot) => {\n      return tagBots.every((tagBot) => tagBot.includes(bot));\n    });\n  }\n  shownBots.value = filteredIn;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3;\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=431958f3&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import en from \"./prompts-en.json\";\nimport zh from \"./prompts-zh.json\";\nimport es from \"./prompts-es.json\";\n\nconst prompts = {\n  en,\n  zh,\n  es,\n  languages: [\n    { name: \"English\", code: \"en\" },\n    { name: \"简体中文\", code: \"zh\" },\n    { name: \"Español\", code: \"es\" },\n  ],\n};\n\nexport default prompts;\n","<template>\n  <div>\n    <v-dialog\n      :model-value=\"props.open\"\n      @update:model-value=\"closeDialog\"\n      @after-leave=\"onDialogCloseTransitionEnded\"\n    >\n      <v-card class=\"justify-center\">\n        <v-card-title>\n          <v-text-field\n            clearable\n            v-model=\"search\"\n            density=\"compact\"\n            append-icon=\"mdi-magnify\"\n            :label=\"$t('find.find')\"\n            single-line\n            hide-details\n            autofocus\n          ></v-text-field>\n          <div class=\"pt-2 d-flex justify-space-between\">\n            <v-btn\n              class=\"mt-1\"\n              prepend-icon=\"mdi-plus\"\n              :text=\"$t('prompt.addPrompt')\"\n              @click=\"add\"\n            ></v-btn>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <v-select\n              color=\"primary\"\n              density=\"compact\"\n              :items=\"prompts.languages\"\n              hide-details\n              item-title=\"name\"\n              item-value=\"code\"\n              :model-value=\"language\"\n              @update:model-value=\"setPromptLanguage($event)\"\n            ></v-select>\n          </div>\n        </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"data\"\n          :search=\"search\"\n          height=\"70vh\"\n          fixed-header\n          hover\n          :no-data-text=\"$t('find.noMatches')\"\n          items-per-page=\"10\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td\n                @click=\"usePrompt(item.raw)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.columns.title }}\n              </td>\n              <td\n                @click=\"usePrompt(item.raw)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.columns.prompt }}\n              </td>\n              <td>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  :icon=\"item.raw.isPin ? 'mdi-star' : 'mdi-star-outline'\"\n                  @click=\"pin(item.raw)\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-pencil\"\n                  @click=\"edit(item.raw)\"\n                  v-if=\"item.raw.index >= 0\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-delete-outline\"\n                  @click=\"deletePrompt(item.raw)\"\n                  v-if=\"item.raw.index >= 0\"\n                ></v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      persistent\n      width=\"50%\"\n      :model-value=\"isOpenAddEditPrompt\"\n      @update:model-value=\"isOpenAddEditPrompt = $event\"\n    >\n      <v-card>\n        <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n          <v-text-field\n            required\n            :placeholder=\"$t('prompt.title')\"\n            v-model=\"title\"\n            :rules=\"requiredRule\"\n          ></v-text-field>\n          <v-textarea\n            required\n            :placeholder=\"$t('prompt.prompt')\"\n            v-model=\"prompt\"\n            :rules=\"requiredRule\"\n          ></v-textarea>\n        </v-form>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            variant=\"outlined\"\n            color=\"primary\"\n            @click=\"isOpenAddEditPrompt = false\"\n            >{{ $t(\"modal.cancel\") }}</v-btn\n          >\n          <!-- color=\"primary\" not working for nested dialog button -->\n          <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditPrompt\">{{\n            $t(\"modal.done\")\n          }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport prompts from \"@/prompts\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"afterLeave\"]);\nconst defaultLanguage = prompts.languages\n  .map((lang) => lang.code)\n  .includes(i18n.global.locale.value)\n  ? i18n.global.locale.value // use user langauge if availble\n  : \"en\"; // else default to 'en'\nconst language = ref(defaultLanguage);\nconst search = ref(\"\");\nconst title = ref(\"\");\nconst prompt = ref(\"\");\nconst isEdit = ref(false);\nconst editIndex = ref(null);\nconst formRef = ref(null);\nconst confirmModal = ref(null);\nconst isOpenAddEditPrompt = ref(false);\nlet selectedPrompt = \"\";\nconst requiredRule = [\n  (value) => (value?.trim() ? true : i18n.global.t(\"prompt.required\")),\n];\n\nconst headers = computed(() => [\n  {\n    key: \"title\",\n    title: i18n.global.t(\"prompt.title\"),\n    width: \"20%\",\n  },\n  { key: \"prompt\", title: i18n.global.t(\"prompt.prompt\"), width: \"70%\" },\n  {\n    key: \"action\",\n    title: i18n.global.t(\"prompt.action\"),\n    width: \"10%\",\n    sortable: false,\n  },\n]);\nconst userPrompts = computed(() => {\n  return store.state.prompts\n    .slice()\n    .filter((p) => !p.hide)\n    .sort((x, y) => {\n      return x.isPin === y.isPin ? 0 : x.isPin ? -1 : 1;\n    });\n});\nconst data = computed(() => {\n  const defaultPrompts = prompts[language.value].map((prompt) => {\n    return { title: prompt.act, prompt: prompt.prompt };\n  });\n\n  return [...userPrompts.value, ...defaultPrompts];\n});\n\nconst closeDialog = (value) => {\n  emit(\"update:open\", value);\n};\n\nfunction pin(row) {\n  if (row.index >= 0) {\n    store.commit(\"editPrompt\", {\n      ...row,\n      isPin: !row.isPin,\n    });\n  } else {\n    store.commit(\"addPrompt\", { ...row, isPin: true });\n  }\n}\n\nfunction usePrompt(row) {\n  selectedPrompt = row.prompt;\n  emit(\"update:open\", false);\n}\n\nasync function addEditPrompt() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit.value) {\n      store.commit(\"editPrompt\", {\n        title: title.value,\n        prompt: prompt.value,\n        index: editIndex.value,\n      });\n    } else {\n      store.commit(\"addPrompt\", { title: title.value, prompt: prompt.value });\n    }\n    isOpenAddEditPrompt.value = false;\n  }\n}\n\nfunction add() {\n  isEdit.value = false;\n  title.value = \"\";\n  prompt.value = \"\";\n  isOpenAddEditPrompt.value = true;\n}\n\nfunction edit(item) {\n  isEdit.value = true;\n  title.value = item.title;\n  prompt.value = item.prompt;\n  editIndex.value = item.index;\n  isOpenAddEditPrompt.value = true;\n}\n\nasync function deletePrompt(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHidePrompt\"),\n  );\n  if (result) {\n    store.commit(\"deletePrompt\", { ...item });\n  }\n}\n\nfunction showFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (parent.querySelector(\".tooltip\")) {\n    return;\n  }\n  for (let i = 0; i < parent.children.length - 1; i++) {\n    const td = parent.children[i];\n    const position = td.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.innerText = td.innerText;\n    td.innerText = \"\";\n    div.classList.add(\"tooltip\");\n    div.style.width = `${position.width}px`;\n    div.addEventListener(\"mouseleave\", hideFullText);\n    td.appendChild(div);\n  }\n}\n\nfunction hideFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (!element.toElement || !parent.contains(element.toElement)) {\n    const toRemove = parent.querySelectorAll(\".tooltip\");\n    for (let i = 0; i < toRemove.length; i++) {\n      toRemove[i].parentElement.innerText = toRemove[i].innerText;\n      toRemove[i].remove();\n    }\n  }\n}\n\nfunction setPromptLanguage(value) {\n  language.value = value;\n}\n\nfunction onDialogCloseTransitionEnded() {\n  emit(\"afterLeave\", selectedPrompt);\n  selectedPrompt = \"\";\n  search.value = \"\";\n}\n</script>\n\n<style scoped>\n:deep() tr {\n  cursor: pointer;\n}\n\n:deep() td:nth-child(1),\ntd:nth-child(2) {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n:deep() table {\n  table-layout: fixed;\n}\n\n:deep() .tooltip {\n  padding-right: 16px;\n  white-space: break-spaces;\n  background-color: transparent;\n}\n</style>\n","import script from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptModal.vue?vue&type=style&index=0&id=be457426&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-be457426\"]])\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :id=\"SHORTCUT_PROMPT_MANAGEMENT.elementId\"\n            @click=\"isPromptManagementOpen = !isPromptManagementOpen\"\n            color=\"primary\"\n            variant=\"plain\"\n            class=\"h-100 w-100\"\n            style=\"border-radius: 4px; min-width: unset !important\"\n            icon=\"mdi-creation-outline\"\n          ></v-btn>\n        </template>\n      </v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div class=\"bot-logos\" ref=\"favBotLogosRef\" :key=\"rerenderFavBotLogos\">\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <PromptModal\n      v-shortkey=\"SHORTCUT_PROMPT_MANAGEMENT.key\"\n      @shortkey=\"isPromptManagementOpen = !isPromptManagementOpen\"\n      v-model:open=\"isPromptManagementOpen\"\n      @after-leave=\"usePrompt\"\n    ></PromptModal>\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\nimport PromptModal from \"@/components/PromptModal.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\nconst emit = defineEmits([\"updateActiveBots\"]);\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\nconst isPromptManagementOpen = ref(false);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  const _favBots = [];\n  store.getters.currentChat.favBots.forEach((favBot) => {\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots\n    .filter((bot) => bot.instance)\n    .sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n  emit(\"updateActiveBots\", activeBots);\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  const keyCode = event.keyCode;\n  if (\n    keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n\n  // up or down\n  const isUpOrDown =\n    keyCode == historyKeyCode.pre || keyCode == historyKeyCode.next;\n\n  const isAuxiliaryKey = event.metaKey || event.ctrlKey;\n\n  // macOS: Cmd + up/down, Windows: Ctrl + up/down\n  if (isAuxiliaryKey && isUpOrDown) {\n    event.preventDefault();\n\n    // get new prompt and set it\n    const newPrompt = getHistoryPrompt(keyCode);\n    prompt.value = newPrompt.content;\n  }\n}\n\nfunction sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const isFirstPrompt = store.getters.currentChat.messages.length === 0;\n  store\n    .dispatch(\"sendPrompt\", {\n      prompt: prompt.value,\n      bots: toBots,\n    })\n    .then(() => updateChatTitleWithFirstPrompt(isFirstPrompt));\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  // reset prompt index\n  promptIndex = 0;\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\n// current prompt index\nlet promptIndex = 0;\n\n// up and down key code\nconst historyKeyCode = { pre: 38, next: 40 };\n\n// Listen to the up and down arrow keys to obtain historical records.\nfunction getHistoryPrompt(keyCode) {\n  const historyPrompts = store.getters.getCurrentChatPrompt;\n\n  if (!historyPrompts || !historyPrompts.length) return false;\n\n  if (keyCode === historyKeyCode.pre) {\n    // get previous prompt\n    promptIndex =\n      (promptIndex - 1 + historyPrompts.length) % historyPrompts.length;\n  } else if (keyCode === historyKeyCode.next) {\n    // get next prompt\n    promptIndex = (promptIndex + 1) % historyPrompts.length;\n  }\n\n  return historyPrompts[promptIndex];\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nfunction updateChatTitleWithFirstPrompt(isFirstPrompt) {\n  if (isFirstPrompt) {\n    // if this is first prompt, update chat title to first 30 characters of user prompt\n    store.commit(\"editChatTitle\", {\n      title: store.getters.currentChat.messages[0].content.substring(0, 30),\n    });\n  }\n}\n\nasync function usePrompt(value) {\n  await nextTick();\n  focusPromptTextarea();\n  document.execCommand(\"insertText\", false, value);\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: rgba(var(--v-theme-background), 0.7) !important;\n  height: auto !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: 0.5rem;\n  box-shadow: none !important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n\n:deep() .v-field.v-field--appended {\n  padding-right: 0;\n}\n\n:deep() .v-field__append-inner {\n  padding-top: 0;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=7b9721c8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7b9721c8\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: 0.2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0 !important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: 0.5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=6015a817&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6015a817\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n  padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=4c4cde2d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c4cde2d\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"position: absolute; top: 0; left: 0; width: 100vw; height: 100vh\"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace(\"meta\", \"cmd\");\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font:\n    11px ui-monospace,\n    SFMono-Regular,\n    SF Mono,\n    Menlo,\n    Consolas,\n    Liberation Mono,\n    monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110, 118, 129, 0.4);\n  border-bottom-color: rgba(110, 118, 129, 0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110, 118, 129, 0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=28fc2763&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-28fc2763\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    height=\"75%\"\n    width=\"80%\"\n    :model-value=\"props.open\"\n    @update:model-value=\"closeDialog\"\n  >\n    <v-card height=\"100%\">\n      <v-card-title>\n        <v-row>\n          <v-col class=\"d-flex align-center\">\n            {{ props.action.name }}\n            <v-btn\n              flat\n              @click=\"isEdit = !isEdit\"\n              :icon=\"isEdit ? 'mdi-eye' : 'mdi-pencil-outline'\"\n            ></v-btn>\n          </v-col>\n          <v-col class=\"d-flex align-center justify-end\">\n            <v-label>{{ previewTextarea.length }}</v-label>\n          </v-col>\n        </v-row>\n      </v-card-title>\n      <v-card-text class=\"pt-0 overflow-auto\">\n        <v-textarea\n          hide-details\n          rows=\"20\"\n          v-show=\"isEdit\"\n          v-model=\"previewTextarea\"\n          @input=\"previewText = previewTextarea\"\n        >\n        </v-textarea>\n        <chat-prompt\n          v-show=\"!isEdit\"\n          :message=\"{ content: previewText }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-card-text>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          class=\"send-prompt-btn\"\n          elevation=\"2\"\n          :disabled=\"\n            previewTextarea.trim() === '' ||\n            selectedBots.length === 0 ||\n            !chatRef\n          \"\n          @click=\"send\"\n        >\n          {{ $t(\"footer.sendPrompt\") }}\n        </v-btn>\n        <div class=\"bot-logos\">\n          <BotLogo\n            v-for=\"(bot, index) in favBots\"\n            :id=\"`fav-bot-${index + 1}`\"\n            :key=\"index\"\n            :bot=\"bot.instance\"\n            :active=\"bot.selected\"\n            :data-id=\"bot.classname\"\n            size=\"36\"\n            @click=\"bot.selected = !bot.selected\"\n          />\n        </div>\n        <v-form class=\"d-flex\">\n          <v-radio-group v-model=\"chatRef\" density=\"compact\" hide-details>\n            <v-radio :label=\"$t('chat.inNewChat')\" value=\"new\"></v-radio>\n            <v-radio\n              :label=\"$t('chat.inCurrentChat')\"\n              value=\"current\"\n            ></v-radio>\n          </v-radio-group>\n        </v-form>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, toRaw, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { preview } from \"../helpers/template-helper\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport BotLogo from \"@/components/Footer/BotLogo.vue\";\nimport _bots from \"@/bots\";\n\nconst store = useStore();\nconst isEdit = ref(false);\nconst previewText = ref(\"\");\nconst previewTextarea = ref(\"\");\nconst chatRef = ref(undefined);\nconst emit = defineEmits([\"update:open\"]);\nconst props = defineProps([\"open\", \"action\", \"responses\", \"activeBots\"]);\nwatch(() => props.open, onChangeOpenProp);\n\nconst selectedResponses = computed(() =>\n  store.state.selectedResponses.map((res) => {\n    return { botName: res.className, botResponse: res.content };\n  }),\n);\nconst favBots = ref([]);\nconst selectedBots = computed(() =>\n  favBots.value.filter((bot) => bot.selected),\n);\n\nfunction onChangeOpenProp() {\n  if (props.open) {\n    updatePreview();\n    updateFavBots();\n  } else {\n    isEdit.value = false;\n  }\n}\n\nasync function updatePreview() {\n  previewTextarea.value = await preview(\n    props.action.prefix,\n    props.action.template,\n    props.action.suffix,\n    selectedResponses.value,\n  );\n  previewText.value = previewTextarea.value;\n}\n\nfunction updateFavBots() {\n  favBots.value = [];\n  for (const key in props.activeBots) {\n    if (props.activeBots[key]) {\n      favBots.value.push({\n        classname: key,\n        selected: false,\n        instance: _bots.getBotByClassName(key),\n      });\n    }\n  }\n}\n\nfunction closeDialog(value) {\n  emit(\"update:open\", value);\n}\n\nasync function send() {\n  if (chatRef.value === \"new\") {\n    await store.dispatch(\"createChatAndSelect\");\n  }\n  await store\n    .dispatch(\"sendPrompt\", {\n      prompt: previewTextarea.value,\n      bots: selectedBots.value.map((bot) => toRaw(bot).instance),\n    })\n    .then(() => {\n      if (chatRef.value === \"new\") {\n        store.commit(\"editChatTitle\", {\n          title: previewTextarea.value.substring(0, 30),\n        });\n      }\n    });\n  closeDialog(false);\n  deselectAllResponses();\n}\n\nfunction deselectAllResponses() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n</script>\n\n<style scoped>\n:deep() .v-textarea textarea {\n    height: 100%;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n.bot-logos {\n  gap: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n</style>\n","import script from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatAction.vue?vue&type=style&index=0&id=1ce2fcba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1ce2fcba\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\">\n        <v-app-bar class=\"header-content pa-0\">\n          <!-- Start Header  -->\n          <div class=\"header-content\" v-show=\"isSelectedResponsesEmpty\">\n            <v-app-bar-nav-icon\n              :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n              variant=\"text\"\n              @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n            >\n            </v-app-bar-nav-icon>\n            <img\n              :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n              class=\"logo\"\n              src=\"@/assets/logo-banner.png\"\n              alt=\"ChatALL\"\n            />\n          </div>\n          <div\n            class=\"column-icons header-content\"\n            v-show=\"isSelectedResponsesEmpty\"\n          >\n            <img\n              v-for=\"columnCount in 3\"\n              :id=\"`column-${columnCount}`\"\n              :key=\"columnCount\"\n              :src=\"getColumnImage(columnCount)\"\n              @click=\"changeColumns(columnCount)\"\n              @shortkey=\"changeColumns(columnCount)\"\n              v-shortkey=\"[`f${columnCount}`]\"\n              :class=\"{\n                selected: columns === columnCount,\n                'dark-png': store.state.theme === Theme.DARK,\n              }\"\n            />\n          </div>\n          <div\n            class=\"header-content\"\n            style=\"padding-right: 16px\"\n            v-show=\"isSelectedResponsesEmpty\"\n          >\n            <v-icon\n              :id=\"SHORTCUT_FIND.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-magnify\"\n              size=\"x-large\"\n              @click=\"openFind()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n              @shortkey=\"clearMessages\"\n              :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-broom\"\n              size=\"x-large\"\n              @click=\"clearMessages()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SETTINGS.key\"\n              @shortkey=\"openSettingsModal\"\n              :id=\"SHORTCUT_SETTINGS.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-cog\"\n              size=\"x-large\"\n              @click=\"openSettingsModal()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n              @shortkey=\"toggleShortcutGuide\"\n              :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-help\"\n              size=\"x-large\"\n              @click=\"toggleShortcutGuide()\"\n            ></v-icon>\n          </div>\n          <!-- End Header  -->\n          <!-- Start Selected Responses  -->\n          <div\n            class=\"header-content pr-3\"\n            style=\"text-wrap: nowrap\"\n            v-show=\"!isSelectedResponsesEmpty\"\n          >\n            <v-btn icon color=\"primary\" @click=\"deselectAll\">\n              <v-icon>mdi-arrow-left</v-icon>\n            </v-btn>\n            {{\n              $t(\"header.selectedResponsesCount\", {\n                selectedCount: store.state.selectedResponses.length,\n              })\n            }}\n          </div>\n          <div\n            class=\"header-content overflow-auto\"\n            v-show=\"!isSelectedResponsesEmpty\"\n          >\n            <v-btn\n              v-for=\"action in userActions\"\n              color=\"primary\"\n              class=\"no-text-transform\"\n              :text=\"action.name\"\n              :key=\"action.index\"\n              @click=\"callAction(action)\"\n            ></v-btn>\n          </div>\n          <!-- End Selected Responses  -->\n        </v-app-bar>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages\n          :chat-index=\"store.state.currentChatIndex\"\n          :columns=\"columns\"\n        ></ChatMessages>\n        <FooterBar\n          ref=\"footerBarRef\"\n          @update-active-bots=\"(bots) => (activeBots = bots)\"\n        ></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n      <ChatAction\n        v-model:open=\"isChatActionOpen\"\n        :action=\"action\"\n        :responses=\"store.state.selectedResponses\"\n        :activeBots=\"activeBots\"\n      ></ChatAction>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, watch } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\nimport ChatAction from \"@/components/ChatAction.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst chatDrawerRef = ref();\nconst isSelectedResponsesEmpty = ref(true);\nconst isChatActionOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\nlet action;\nlet activeBots;\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n});\n\nwatch(\n  () => store.state.selectedResponses.length,\n  () => {\n    isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  },\n);\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n\nfunction deselectAll() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n\nfunction callAction(value) {\n  action = value;\n  isChatActionOpen.value = true;\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Arial\", sans-serif;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\nheader {\n  width: 100%;\n  background-color: rgb(var(--v-theme-header));\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  padding: 16px;\n  z-index: 999;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n  opacity: 0.5;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n  background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between;\n}\n\n.vuepress-markdown-body {\n  color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n  padding: 0 !important;\n  background-color: transparent !important;\n}\n.vuepress-markdown-body .arrow {\n  display: inline !important;\n}\n.vuepress-markdown-body .arrow.up,\n.arrow.down,\n.arrow.left,\n.arrow.right {\n  display: inline-block !important;\n}\n.vuepress-markdown-body tr:nth-child(2n) {\n  background-color: rgb(var(--v-theme-table-tr-2n)) !important;\n}\n.vuepress-markdown-body code {\n  color: rgb(var(--v-theme-code-font)) !important;\n  background-color: rgb(var(--v-theme-code-background)) !important;\n}\n.vuepress-markdown-body pre[class*=\"v-md-prism-\"] code,\n.vuepress-markdown-body pre code {\n  color: #fff !important;\n  background-color: initial !important;\n}\n.no-text-transform {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=f670d2d8&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiKey\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiKey\"\n      outlined\n      dense\n      placeholder=\"b40...\"\n      @update:model-value=\"setAzureOpenaiApi({ azureApiKey: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureApiInstanceName\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureApiInstanceNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiInstanceName\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureApiInstanceName: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentName\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiDeploymentName\"\n      outlined\n      dense\n      @update:model-value=\"\n        setAzureOpenaiApi({ azureOpenAIApiDeploymentName: $event })\n      \"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiVersion\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiVersionPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiVersion\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureOpenAIApiVersion: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.temperature\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setAzureOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setAzureOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"azureOpenaiApi.temperature0\"),\n        2: i18n.global.t(\"azureOpenaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setAzureOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"azureOpenaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=5374fd33\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6c0f01d1\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHARACTER-AI-TOKENS message from background.js\n    ipcRenderer.on(\"CHARACTER-AI-TOKENS\", (event, token) => {\n      try {\n        const tokenInfo = JSON.parse(token);\n        this.setCharacterAI({ token: tokenInfo.value, ttl: tokenInfo.ttl });\n      } catch (error) {\n        console.error(\"CHARACTER-AI-TOKENS\", error);\n      }\n    });\n  },\n  methods: {\n    ...mapMutations([\"setCharacterAI\"]),\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=38718633\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=17188e40\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"gradio.url\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{ $t(\"gradio.urlPrompt\") }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.url\"\n      outlined\n      dense\n      :placeholder=\"\n        $t('settings.forExample', {\n          example: 'https://*.hf.space, http://127.0.0.1:7861',\n        })\n      \"\n      @update:model-value=\"setGradio({ url: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"gradio.fnIndex\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"gradio.fnIndexPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.fnIndex\"\n      outlined\n      dense\n      placeholder=\"0\"\n      @update:model-value=\"setGradio({ fnIndex: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\n\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setGradio\"]),\n  },\n  computed: {\n    ...mapState([\"gradio\"]),\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=63ca672b\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"openaiApi.apiKey\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.apiKey\"\n      outlined\n      dense\n      placeholder=\"sk-...\"\n      @update:model-value=\"setOpenaiApi({ apiKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"openaiApi.temperature\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"openaiApi.alterUrl\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.alterUrlPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.alterUrl\"\n      outlined\n      dense\n      placeholder=\"https://your.proxy.com/v1\"\n      @update:model-value=\"setOpenaiApi({ alterUrl: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"openaiApi.temperature0\"),\n        2: i18n.global.t(\"openaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"openaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=458805c5\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/OpenAssistantBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAssistantBotSettings.vue?vue&type=template&id=8f4ba222\"\nimport script from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the POE-FORMKEY message from background.js\n    ipcRenderer.on(\"POE-FORMKEY\", (event, formkey) => {\n      this.setPoe({ formkey });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setPoe\"]),\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=276b8eed\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>API Key & Secret Key</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"wenxinQianfan.apiKey\"\n      outlined\n      dense\n      hide-details\n      label=\"API Key\"\n      :placeholder=\"'2125NA8mQy7gC52Pq9BK3tvk'\"\n      @update:model-value=\"setWenxinQianfan({ apiKey: $event })\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"wenxinQianfan.secretKey\"\n      outlined\n      dense\n      label=\"Secret Key\"\n      :placeholder=\"'IWf2pyYm26fz8GgNAHdkPkznHgazlffQ'\"\n      @update:model-value=\"setWenxinQianfan({ secretKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"wenxinQianfan.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      hide-details\n      @update:model-value=\"setWenxinQianfan({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setWenxinQianfan\"]),\n  },\n  computed: {\n    ...mapState([\"wenxinQianfan\"]),\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=1b8c7b96\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 32669,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 32669,\n\t\"./BardBotSettings\": 55538,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 28778,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 94647,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./GradioAppBotSettings\": 35928,\n\t\"./GradioAppBotSettings.vue\": 35928,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 35562,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings\": 57272,\n\t\"./OpenAIAPIBotSettings.vue\": 57272,\n\t\"./OpenAssistantBotSettings\": 38570,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 41084,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 31736,\n\t\"./WenxinQianfanBotSettings.vue\": 31736,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 32669,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./GradioAppBotSettings.vue\": 35928,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings.vue\": 57272,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 31736,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = function() { return Promise.resolve(); };","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","_checkAvailability","context","this","getChatContext","available","requestParams","atValue","_sendPrompt","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","content","done","catch","error","createChatContext","get","match","_defineProperty","AsyncLock","getInstance","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","prefix","isDisabled","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","getSettingsComponent","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","isAvailable","_isAvailable","_isDisabled","confirmBeforeUsing","confirmModal","acquireLock","key","lockedFn","onLockUnavailable","self","_lock","acquire","async","ret","err","timeout","sendPrompt","botName","executeSendPrompt","message","console","LoginError","getLoginHyperlink","wrapCollapsedSection","checkAvailability","disable","createIfNotExists","store","getters","currentChat","contexts","setChatContext","commit","botClassname","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","status","response","name","CharacterAIBot","getAuthHeaders","headers","Authorization","state","characterAI","token","Date","getTime","ttl","userInfoResponse","user","username","Accept","payload","history_external_id","character_external_id","_characterId","tgt","onDownloadProgress","progressEvent","onResponseDownloadProgress","responses","currentTarget","filter","n","lastResponse","length","Array","isArray","replies","is_final_chunk","chatContinueResponse","characterInfoResponse","external_id","character","participant__user__username","ClaudeAIBot","claudeAi","org","currentAcountResponse","success","accept","attachments","completion","incremental","conversation_uuid","uuid","organization_uuid","SSE","withCredentials","addEventListener","readyState","CLOSED","stream","uuidv4","createResponse","LangChainBot","messages","getPastRounds","shift","map","item","storedMessage","type","HumanMessage","AIMessage","SystemMessage","push","res","_chatModel","callbacks","handleLLMNewToken","handleLLMEnd","call","toDict","undefined","MOSSBot","getAuthHeader","moss","refresh","id","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","output","stage","status_code","onError","target","open","OpenAssistantBot","i","prompterResponse","parent_id","assistantResponse","model_config_name","plugins","sampling_parameters","top_k","top_p","typical_p","temperature","repetition_penalty","max_new_tokens","message_id","queryString","event_type","PiBot","generateRandomId","randomStr","QianWenBot","getRequestHeaders","qianWen","xsrfToken","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","chunk","failed","errorCode","errorMsg","stopReason","firstQuery","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","skyWork","inviteToken","code","resp_data","busy_now","invite_token","currentPrompt","messageId","currentMessageId","session_id","result_message","code_msg","setTimeout","dialogue","SparkBot","flag","desc","getGtToken","window","initGeeGuard","appId","https","gee_token","chatId","GtToken","formData","FormData","append","String","slice","partialText","descr","Buffer","from","YouChatBot","q","domain","queryTraceId","chat","chatHistory","youChatToken","question","answer","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","chatModel","ChatBaiduWenxin","modelName","baiduApiKey","baiduSecretKey","streaming","pastRounds","GradioAppBot","GradioBot","gradio","_fnIndexes","fnIndex","makeData","fn_index","parseData","config","path","root","log","_sendFnIndex","session_hash","URL","protocol","msg","event_data","rank","rank_eta","parseError","onClose","substring","HuggingChatBot","conversationId","delete","packRequest","inputs","parameters","truncate","stop","return_full_text","options","is_retry","use_cache","generated_text","LMSYSBot","r","includes","AzureOpenAIAPIBot","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","BingChatBot","conversation","result","value","clientId","conversationSignature","secAccessToken","invocationId","isAnonymous","makePromptRequest","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","verbosity","scenario","isStartOfSession","requestId","timestamp","toISOString","author","inputMethod","messageType","tone","_tone","participant","spokenTextMode","seperator","fromCharCode","encodeURIComponent","Boolean","version","events","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","ChatGPTBot","setRefreshCycle","chatgpt","refreshCycle","accessToken","loadArkoseScript","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","_arkoseScriptLoaded","script","document","createElement","src","setAttribute","defer","appendChild","onload","setupEnforcement","onerror","myEnforcement","_myEnforcement","setConfig","onReady","onShown","onShow","onSuppress","onCompleted","_arkosePromise","onReset","onHide","onFailed","getArkoseToken","run","arkose_token","content_type","parts","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","test","join","citations","metadata","element","detail","e","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","OpenAIAPIBot","openaiApi","configuration","basePath","alterUrl","openAIApiKey","PoeBot","buildId","settings","lastMessageId","gqlPost","queryName","variables","formkey","poe","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","vizcacha","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","subscriptions","subscriptionName","query","queryHash","debug","min_seq","m","message_type","messageAdded","bot","withChatBreak","messageEdgeCreate","errors","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","start","now","timer","onUnmounted","lang","navigator","language","userLanguage","substr","en","enMessages","zh","zhMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","ipcRenderer","require","defaultTheme","resolveTheme","mode","applyTheme","vuetify","createVuetify","components","VDataTable","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","fetch","head","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","messagesPersist","VuexPersist","storage","localStorage","reducer","chats","promptsPersist","prompts","isThrottleMessage","isThrottleThreadMessage","messageBuffer","threadMessageBuffer","vuexPersist","updateCounter","selectedResponses","persistedState","createStore","columns","riskConfirmed","favBots","classname","selected","threads","hide","createdTime","currentChatIndex","isChatDrawerOpen","selectedBots","actions","template","suffix","index","mutations","changeColumns","setUuid","setBotSelected","find","setFavBotOrder","newOrder","order","addFavoriteBot","removeFavoriteBot","findIndex","splice","setCurrentLanguage","setChatgpt","setOpenaiApi","values","setAzureOpenaiApi","setMoss","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","setCharacterAI","setClaudeAi","setPoe","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","threadIndex","setResponseThreadIndex","responseIndex","updateMessage","update","indexes","chatIndex","messageIndex","updateThreadMessage","setMessages","incrementUpdateCounter","clearMessages","init","bots","keys","setTheme","setMode","createChat","selectChat","hideChat","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","newChats","addPrompt","editPrompt","deletePrompt","addAction","editAction","deleteAction","addSelectedResponses","selectedIndex","deleteSelectedResponses","deleteAllSelectedResponses","dispatch","promptMessage","highlight","className","trackEvent","sendPromptInThread","thread","newThreadMessage","threadPromptMessage","threadResponseMessage","createChatAndSelect","getCurrentChatPrompt","modules","plugin","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","invoke","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_PROMPT_PRE_NEXT","left","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","SHORTCUT_PROMPT_MANAGEMENT","SHORTCUT_LIST","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","__exports__","useStore","unsetCursorWait","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","props","setCursorWait","emit","style","cursor","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","onUpdated","chatsReversed","computed","reverse","onAddNewChat","focusTextarea","selectLatestVisibleChat","isAnyChatVisible","setProperty","onMounted","toRefs","checkIsMessagePromptTypeAndEmptyResponsesIfTrue","pushResponseAndCheckIsNextMessagePromptType","nextIndex","ChatGPT35Bot","ChatGPT4Bot","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","OpenAIAPI35Bot","OpenAIAPI4Bot","VicunaBot","ChatGLMBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT432kPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","Llama2HC70bBot","Llama213bBot","Llama27bBot","Llama270bBot","all","disabled","getBotByClassName","botTags","free","paid","openSource","api","madeInChina","replyModel","replyRef","pageLeftButton","pageRightButton","maxPage","carouselModel","isSelected","isSelectedList","isSelectedResponsesEmpty","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","isAllDone","some","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isSomeResponsesHasThread","isShowResendButton","isShowPagingButton","getButtonClass","getSelectButtonClass","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","trim","rerenderThread","rerenderThreadWhenChatIndexChanged","updateIsSelectedResponsesEmpty","copyToClipboard","clipboard","writeText","toggleHighlight","emits","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","favBot","b","toggleReplyButton","select","stopPropagation","contains","indexOf","toRaw","pageLeft","max","pageRight","min","groupedResponses","reduce","a","create","autoScroll","gridTemplateColumns","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","onScroll","scrollPosition","pageYOffset","innerHeight","removeEventListener","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","PACfile","reply","onFileChange","file","files","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","add","prefixPlaceholder","templatePlaceholder","suffixPlaceholder","preview","exampleTemplate","examplePrompt","PromptTemplate","inputVariables","exampleSelector","LengthBasedExampleSelector","fromExamples","maxLength","Number","MAX_VALUE","dynamicPrompt","FewShotPromptTemplate","formRef","isOpenAddEditAction","actionName","previewRef","templateParametersInfo","isShowTemplateParametersDialog","userActions","p","previewSampleData","botResponse","editIndex","isEdit","required","downloadJson","chatallMessages","getItem","d","arr","botModel","blob","Blob","createObjectURL","date","year","getFullYear","month","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","fileName","download","click","removeChild","revokeObjectURL","confirm","onInputTemplate","edit","addEditAction","validate","valid","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGPTBotSettings","ClaudeAIBotSettings","GradioAppBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","OpenAssistantBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","newBot","markRaw","onDone","isLogoInverted","menu","favorited","tags","selectedTags","notDisabledBots","shownBots","toggleFavorite","toggleMenu","filterBots","filteredIn","tagBots","tag","every","tagBot","defaultLanguage","search","isOpenAddEditPrompt","selectedPrompt","requiredRule","width","sortable","userPrompts","sort","x","y","isPin","defaultPrompts","act","pin","row","usePrompt","addEditPrompt","showFullText","parent","closest","children","td","position","getBoundingClientRect","div","innerText","classList","hideFullText","toElement","toRemove","querySelectorAll","remove","setPromptLanguage","onDialogCloseTransitionEnded","promptTextArea","botsMenuRef","favBotLogosRef","isPromptManagementOpen","_bots","activeBots","rerenderFavBotLogos","_favBots","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmed","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","isUpOrDown","historyKeyCode","pre","next","isAuxiliaryKey","newPrompt","getHistoryPrompt","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","newValue","oldValue","botsToCheck","oldBot","historyPrompts","toggleSelected","availability","initializeSortable","isDropOnFavBotBar","onDragEnd","parentNode","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","toArray","execCommand","onBeforeMount","on","versions","checkVersion","latest","current","compare","skip","removeListener","setItem","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","getElementById","innerHTML","toggleShortcutGuide","openShortcutGuide","previewText","previewTextarea","chatRef","onChangeOpenProp","updatePreview","updateFavBots","send","deselectAllResponses","onUpdatedSystemTheme","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","isChatActionOpen","openSettingsModal","openFind","getColumnImage","columnCount","deselectAll","callAction","_paq","ver","_createBlock","_component_v_list_item","_createVNode","_component_v_list_item_title","_ctx","_component_v_list_item_subtitle","_component_v_text_field","$event","outlined","dense","_component_v_slider","step","ticks","$data","temperatureLabels","methods","mapMutations","mapState","render","_component_login_setting","LoginSetting","mounted","tokenInfo","_component_v_alert","_component_v_checkbox","$options","autoRefresh","hideDetails","label","AUTO_REFRESH_CYCLE","set","auto","_createElementVNode","$props","onClick","_cache","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","secret","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}