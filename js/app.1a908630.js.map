{"version":3,"file":"js/app.1a908630.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/OpenAssistantBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/messagesPersist.js","webpack://chatall/./src/store/promptsPersist.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/ChatGLMBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/huggingface/Llama2HC70bBot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatResponses.vue","webpack://chatall/./src/components/Messages/ChatResponses.vue?de82","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/prompts/index.js","webpack://chatall/./src/components/PromptModal.vue","webpack://chatall/./src/components/PromptModal.vue?7dc0","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue?9e83","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/get javascript chunk filename","webpack://chatall/webpack/runtime/get mini-css chunk filename","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/load script","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const context = await this.getChatContext();\n    if (context.requestParams.atValue) {\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    if (this.getModelName())\n      return `${this.getBrandName()} (${this.getModelName()})`;\n    else return this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(err),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    return false;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = store.getters.currentChat?.contexts?.[this.getClassname()];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  static _characterId = \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\"; // Character Assistant id\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        Authorization: `Token ${store.state.characterAI.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    try {\n      this.constructor._isAvailable = false;\n\n      if (!store.state.characterAI.token) {\n        console.error(\"Error CharacterAIBot check login: token not found\");\n        return this.isAvailable();\n      }\n\n      if (new Date().getTime() >= store.state.characterAI?.ttl) {\n        console.error(\"Error CharacterAIBot check login: token expired\");\n        return this.isAvailable();\n      }\n\n      const userInfoResponse = await axios.get(\n        \"https://beta.character.ai/chat/user/\",\n        this.getAuthHeaders(),\n      );\n\n      if (userInfoResponse.status !== 200) {\n        console.error(\"Error CharacterAIBot check login:\", userInfoResponse);\n        return this.isAvailable();\n      }\n\n      if (userInfoResponse.data.user?.user?.username !== \"ANONYMOUS\") {\n        this.constructor._isAvailable = true;\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return this.isAvailable();\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          ...this.getAuthHeaders().headers,\n        };\n        const payload = {\n          history_external_id: context.history_external_id,\n          character_external_id: this.constructor._characterId,\n          text: prompt,\n          tgt: context.tgt,\n        };\n        axios\n          .post(\"https://beta.character.ai/chat/streaming/\", payload, {\n            headers: headers,\n            onDownloadProgress: (progressEvent) => {\n              this.onResponseDownloadProgress(\n                progressEvent,\n                onUpdateResponse,\n                callbackParam,\n                reject,\n              );\n            },\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              resolve();\n            } else {\n              reject(response);\n            }\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  text = \"\";\n  onResponseDownloadProgress(\n    progressEvent,\n    onUpdateResponse,\n    callbackParam,\n    reject,\n  ) {\n    try {\n      const responses = progressEvent?.event?.currentTarget?.response\n        ?.split(\"\\n\") // split with new line\n        ?.filter((n) => n); //  filter empty string in array\n\n      // take last response item only\n      const lastResponse = JSON.parse(responses[responses.length - 1]);\n      if (Array.isArray(lastResponse.replies) && lastResponse.replies.length) {\n        this.text = lastResponse.replies[0].text;\n        onUpdateResponse(callbackParam, {\n          content: lastResponse.replies[0].text,\n          done: lastResponse.is_final_chunk,\n        });\n      } else {\n        // handle exception\n        // {\"abort\": true, \"error\": \"No eligible candidates\", \"last_user_msg_id\": 123, \"last_user_msg_uuid\": \"1111-uuid\"}\n        onUpdateResponse(callbackParam, {\n          content: `${this.text}\\n${this.wrapCollapsedSection(\n            JSON.stringify(lastResponse),\n          )}`,\n          done: true,\n        });\n      }\n    } catch (error) {\n      reject(error);\n      console.error(\"Error CharacterAIBot onChatDownloadProgress\", error);\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    let characterInfoResponse = await axios.post(\n      \"https://beta.character.ai/chat/character/info/\",\n      { external_id: this.constructor._characterId },\n      this.getAuthHeaders(),\n    );\n\n    if (characterInfoResponse.status !== 200) {\n      console.error(\n        \"CharacterAIBot characterInfoResponse\",\n        characterInfoResponse,\n      );\n      throw new Error(characterInfoResponse);\n    }\n\n    let chatContinueResponse;\n    try {\n      chatContinueResponse = await axios.post(\n        \"https://beta.character.ai/chat/history/continue/\",\n        {\n          character_external_id: this.constructor._characterId,\n          history_external_id: null,\n        },\n        this.getAuthHeaders(),\n      );\n    } catch (error) {\n      if (\n        error.response.status === 404 &&\n        error.response.data === \"there is no history between user and character\"\n      ) {\n        // no history, create\n        chatContinueResponse = await axios\n          .post(\n            \"https://beta.character.ai/chat/history/create/\",\n            {\n              character_external_id: this.constructor._characterId,\n            },\n            this.getAuthHeaders(),\n          )\n          .catch((error) => {\n            console.error(\"CharacterAIBot chatCreateResponse\", error);\n            throw Error(error);\n          });\n      } else {\n        console.error(\"CharacterAIBot chatContinueResponse\", error);\n        throw Error(error);\n      }\n    }\n\n    context = {\n      history_external_id: chatContinueResponse?.data?.external_id,\n      tgt: characterInfoResponse?.data?.character?.participant__user__username,\n    };\n\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    if (!store.state.claudeAi.org) {\n      this.constructor._isAvailable = false;\n      return this.isAvailable();\n    }\n\n    const currentAcountResponse = await axios.get(\n      \"https://claude.ai/api/auth/current_account\",\n    );\n\n    if (currentAcountResponse.data.success) {\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      attachments: [],\n      completion: {\n        incremental: true,\n        model: \"claude-2\",\n        prompt: prompt,\n      },\n      conversation_uuid: context.uuid,\n      organization_uuid: store.state.claudeAi.org,\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://claude.ai/api/append_message\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { HumanMessage, AIMessage, SystemMessage } from \"langchain/schema\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages = messages.map((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (storedMessage.type === \"human\") {\n        return new HumanMessage(storedMessage.data);\n      } else if (storedMessage.type === \"ai\") {\n        return new AIMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        return new SystemMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    messages.push(new HumanMessage(prompt));\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    messages.push(new AIMessage(res));\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n\n    if (!token) {\n      this.constructor._isAvailable = false;\n    } else {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then((res) => {\n          this.constructor._isAvailable = true;\n          return res;\n        })\n        .catch((err) => {\n          this.constructor._isAvailable = false;\n          return err;\n        });\n    }\n\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\n\nexport default class OpenAssistantBot extends Bot {\n  static _brandId = \"openAssistant\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"OpenAssistantBot\"; // Class name of the bot\n  static _logoFilename = \"open-assistant.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://open-assistant.io/auth/signin/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    await axios\n      .get(\"https://open-assistant.io/api/auth/session\")\n      .then((response) => {\n        if (response.data) {\n          this.constructor._isAvailable = false;\n          // eslint-disable-next-line\n          for (var i in response.data) {\n            // if data object not empty, user logged in\n            this.constructor._isAvailable = true;\n            break;\n          }\n        } else {\n          this.constructor._isAvailable = false;\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error OpenAssistantBot check login:\", error);\n        this.constructor._isAvailable = false;\n      });\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    const prompterResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/prompter_message\",\n      { chat_id: context.id, content: prompt, parent_id: context.parent_id },\n    );\n\n    if (prompterResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    const assistantResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/assistant_message\",\n      {\n        chat_id: context.id,\n        model_config_name: \"OA_SFT_Llama_30B_6\",\n        content: prompt,\n        parent_id: prompterResponse.data.id,\n        plugins: [],\n        sampling_parameters: {\n          top_k: 50,\n          top_p: 0.95,\n          typical_p: null,\n          temperature: 0.75,\n          repetition_penalty: 1.2,\n          max_new_tokens: 1024,\n        },\n      },\n    );\n\n    if (assistantResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    this.setChatContext({\n      ...context,\n      parent_id: assistantResponse.data.id, // save assistant response id for next prompt parent_id\n    });\n\n    const headers = {\n      accept: \"*/*\",\n    };\n    const payload = {\n      chat_id: context.id,\n      message_id: assistantResponse.data.id,\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://open-assistant.io/api/chat/events?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let data;\n          try {\n            // handle event data: \": ping - 2023-07-14 13:28:17.735145\"\n            data = JSON.parse(event.data);\n          } catch {\n            console.error(\n              \"Error OpenAssistantBot JSON.parse message:\",\n              event.data,\n            );\n            return;\n          }\n          switch (data.event_type) {\n            case \"pending\":\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"openAssistant.queue\", {\n                  ...data,\n                }),\n                done: false,\n              });\n              break;\n            case \"token\":\n              text += data.text;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n              break;\n            case \"message\":\n              onUpdateResponse(callbackParam, {\n                content: data.message.content, // full message\n                done: true,\n              });\n              resolve();\n              break;\n            case \"error\":\n              onUpdateResponse(callbackParam, {\n                content: `${text}\\n${this.wrapCollapsedSection(event.data)}`,\n                done: true,\n              });\n              resolve();\n              break;\n            default:\n              break;\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    try {\n      await axios\n        .post(\"https://open-assistant.io/api/chat\")\n        .then((response) => {\n          if (response.status === 200) {\n            context = {\n              ...response.data,\n            };\n          }\n        });\n    } catch (error) {\n      console.error(\"Error OpenAssistantBot createChatContext:\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://pi.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    this.constructor._isAvailable = true;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://pi.ai/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        this.constructor._isAvailable = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n        this.constructor._isAvailable = false;\n      });\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        { firstQuery: \"ChatALL\" }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.cn/\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    await axios\n      .get(\"https://chat.360.cn/backend-api/apiz/user/info\")\n      .then((response) => {\n        this.constructor._isAvailable = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        this.constructor._isAvailable = false;\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.cn/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        this.constructor._isAvailable = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          this.constructor._isAvailable = true;\n        } else {\n          this.constructor._isAvailable = false;\n        }\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      this.constructor._isAvailable = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    this.constructor._isAvailable = true;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"langchain/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      const chatModel = new ChatBaiduWenxin({\n        modelName: this.constructor._model,\n        baiduApiKey: apiKey,\n        baiduSecretKey: secretKey,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super.checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    if (this.constructor._loginUrl === \"\") {\n      this.constructor._isAvailable = false;\n    } else {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        this.constructor._isAvailable = true;\n      } catch (err) {\n        console.log(err);\n        this.constructor._isAvailable = false;\n      }\n    }\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(event.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _model = \"OpenAssistant/oasst-sft-6-llama-30b-xor\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Create a conversation to test if the bot is available\n    const conversationId = await this.createChatContext();\n    if (conversationId) {\n      this.constructor._isAvailable = true;\n      // Delete the conversation after testing\n      axios.delete(\n        `https://huggingface.co/chat/conversation/${conversationId}`,\n      );\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      parameters: {\n        temperature: 0.9,\n        truncate: 1000,\n        max_new_tokens: 1024,\n        stop: [\"</s>\"],\n        top_p: 0.95,\n        repetition_penalty: 1.2,\n        top_k: 50,\n        return_full_text: false,\n      },\n      stream: true,\n      options: {\n        id: uuidv4(),\n        is_retry: false,\n        use_cache: false,\n      },\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        const source = new SSE(\n          `https://huggingface.co/chat/conversation/${conversationId}`,\n          {\n            headers: { \"Content-Type\": \"application/json\" },\n            payload: JSON.stringify(this.packRequest(prompt)),\n          },\n        );\n\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.generated_text === null) {\n            text += data.token.text;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } else {\n            // the last message\n            onUpdateResponse(callbackParam, {\n              content: data.generated_text,\n              done: true,\n            });\n            source.close();\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n          reject(new Error(error.data.error));\n        });\n\n        source.stream();\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(\"https://huggingface.co/chat/conversation\", {\n        model: this.constructor._model,\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return conversationId;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [9, 10]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (\n      !store.state.azureOpenaiApi.azureApiKey ||\n      !store.state.azureOpenaiApi.azureApiInstanceName ||\n      !store.state.azureOpenaiApi.azureOpenAIApiDeploymentName ||\n      !store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      this.constructor._isAvailable = false;\n    } else {\n      const chatModel = new ChatOpenAI({\n        azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n        azureOpenAIApiInstanceName:\n          store.state.azureOpenaiApi.azureApiInstanceName,\n        azureOpenAIApiDeploymentName:\n          store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n        azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n        temperature: store.state.azureOpenaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://www.bing.com/new\";\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.48\";\n\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.10.0 OS/MacIntel\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://www.bing.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.data && response.data.result.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature: response.data.conversationSignature,\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Bing Chat conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async checkAvailability() {\n    await axios\n      .get(\"https://www.bing.com/turing/conversation/chats\")\n      .then((response) => {\n        this.constructor._isAvailable =\n          response.data?.result?.value == \"Success\";\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        this.constructor._isAvailable = false;\n        console.error(\"Error checking Bing Chat login status:\", error);\n      });\n    return this.isAvailable();\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"winmuid2tf\",\n            \"tnaenableux\",\n            \"adssqovr\",\n            \"tnaenable\",\n            \"upselltr2\",\n            \"gaincrrev2\",\n            \"anssupfo\",\n            \"tempcacheread\",\n            \"temptacache\",\n            \"oldmmadesign-prod\",\n            \"winstmsg2tf\",\n            \"724mtcls\",\n            \"713savemems0\",\n            \"727nrprdrss0\",\n            \"207hlthgrds0\",\n          ],\n          isStartOfSession: context.invocationId === 0,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          requestId: uuid,\n          conversationSignature: context.conversationSignature,\n          participant: { id: context.clientId },\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        const wsp = new WebSocketAsPromised(\n          \"wss://sydney.bing.com/sydney/ChatHub\",\n          {\n            packMessage: (data) => {\n              return JSON.stringify(data) + seperator;\n            },\n            unpackMessage: (data) => {\n              return data\n                .toString()\n                .split(seperator)\n                .filter(Boolean)\n                .map((r) => JSON.parse(r));\n            },\n          },\n        );\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Bing Chat:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (await this.isAnonymous(context.clientId)) {\n                      const url = this.getLoginUrl();\n                      onUpdateResponse(callbackParam, {\n                        content: i18n.global.t(\"bingChat.loginToContinue\", {\n                          attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                        }),\n                        format: \"html\",\n                        done: false,\n                      });\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(new Error(event.item.result.message));\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Bing Chat response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (response.data && response.data.accessToken) {\n        this.accessToken = response.data.accessToken;\n        this.constructor._isAvailable = true;\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(this.isAvailable());\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  // Credit: https://github.com/linweiyuan/go-chatgpt-api/issues/175\n  async getArkoseToken() {\n    let token = void 0;\n\n    if (this.constructor._model !== \"text-davinci-002-render-sha\") {\n      await axios.get(\"https://arkose-token.linweiyuan.com/\").then((res) => {\n        token = res.data.token;\n      });\n    }\n\n    return token;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: await this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message.id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (!store.state.openaiApi.apiKey) {\n      this.constructor._isAvailable = false;\n    } else {\n      const chatModel = new ChatOpenAI({\n        configuration: {\n          basePath: store.state.openaiApi.alterUrl\n            ? store.state.openaiApi.alterUrl\n            : \"\",\n        },\n        openAIApiKey: store.state.openaiApi.apiKey,\n        modelName: this.constructor._model ? this.constructor._model : \"\",\n        temperature: store.state.openaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    formkey: \"\",\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { formkey, settings } = this.context;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"WpuLMiXEKKE98j56k\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    let isAvailable = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude+\",\n      capybara: \"Sage\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      await axios.get(url).then((response) => {\n        if (response.request.responseURL !== url) {\n          // A 307 redirect to the login page means the bot is not logged in\n          // Axios always do the redirect, so we have to check the responseURL\n          return;\n        }\n\n        // Parse buildId\n        const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n        this.context.buildId = buildId[1];\n\n        // Parse chatId\n        const chatId = response.data.match(/\"chatId\":(\\d+),/);\n        this.context.chatId = chatId[1];\n\n        // Parse and run the secret code of Poe for formkey\n        const secretCode = response.data.match(\n          /var .=\".*\",.*window\\..*=function\\(\\)\\{return .\\.join\\(\"\"\\)\\};/,\n        );\n\n        const secretFunction = secretCode[0].match(\n          /(window\\..*)=function\\(\\)\\{.*\\};/,\n        );\n\n        this.context.formkey = eval(`${secretCode[0]}${secretFunction[1]}();`);\n\n        isAvailable = true;\n      });\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    this.constructor._isAvailable = isAvailable;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\nimport { VDataTable } from \"vuetify/labs/VDataTable\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\n// Init storage\nstore.commit(\"init\");\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\n\nconst vuetify = createVuetify({\n  components: { ...components, VDataTable },\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme: defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n          \"table-tr-2n\": \"#F6F8FA\",\n          \"code-font\": \"#476582\",\n          \"code-background\": \"#F3F4F4\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n          \"table-tr-2n\": \"#1d1e20\",\n          \"code-font\": \"#cbdae6\",\n          \"code-background\": \"#292a2d\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","// store/messagesPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst messagesPersist = new VuexPersist({\n  key: \"chatall-messages\",\n  storage: window.localStorage,\n  reducer: (state) => ({ messages: state.messages, chats: state.chats }), // Store only messages and chats\n});\n\nexport default messagesPersist;\n","// store/promptsPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst promptsPersist = new VuexPersist({\n  key: \"chatall-prompts\",\n  storage: window.localStorage,\n  reducer: (state) => ({ prompts: state.prompts }), // Store prompts\n});\n\nexport default promptsPersist;\n","import { createStore } from \"vuex\";\nimport VuexPersist from \"vuex-persist\";\nimport i18n from \"@/i18n\";\nimport messagesPersist from \"./messagesPersist\";\nimport promptsPersist from \"./promptsPersist\";\nimport { getMatomo } from \"@/composables/matomo\";\n\nlet isThrottleMessage = false;\nlet isThrottleThreadMessage = false;\nlet messageBuffer = [];\nlet threadMessageBuffer = [];\n// 初始化 VuexPersist 实例\nconst vuexPersist = new VuexPersist({\n  key: \"chatall-app\", // 用于存储的键名，可以根据你的应用更改\n  storage: window.localStorage, // 使用 localStorage，你还可以选择其他存储方式，如 sessionStorage\n  reducer: (state) => {\n    // eslint-disable-next-line\n    const { messages, chats, prompts, updateCounter, ...persistedState } =\n      state;\n    return persistedState;\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      token: \"\",\n      ttl: 0,\n    },\n    claudeAi: {\n      org: \"\",\n    },\n    chats: [\n      {\n        title: \"New Chat\",\n        favBots: [\n          // default bots\n          { classname: \"ChatGPT35Bot\", selected: true },\n          { classname: \"BingChatCreativeBot\", selected: true },\n          { classname: \"BingChatBalancedBot\", selected: true },\n          { classname: \"BingChatPreciseBot\", selected: true },\n          { classname: \"PiBot\", selected: true },\n          { classname: \"YouChatBot\", selected: true },\n          { classname: \"ChatGLMBot\", selected: true },\n          { classname: \"VicunaBot\", selected: true },\n          { classname: \"AlpacaBot\", selected: true },\n          { classname: \"ClaudeBot\", selected: true },\n        ],\n        contexts: {},\n        messages: [],\n        threads: [],\n        hide: false,\n        createdTime: new Date().getTime(),\n      },\n    ],\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    // TODO: delete following fields\n    selectedBots: null,\n    messages: [],\n    prompts: [],\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    setBotSelected(state, { botClassname, selected }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const bot = currentChat.favBots.find(\n        (bot) => bot.classname === botClassname,\n      );\n      if (bot) bot.selected = selected;\n      else currentChat.favBots.push({ classname: botClassname, selected });\n    },\n    setFavBotOrder(state, newOrder) {\n      const currentChat = state.chats[state.currentChatIndex];\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n    },\n    addFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      if (favBots.find((bot) => bot.classname === botClassname) == undefined)\n        favBots.push({ classname: botClassname, selected: true });\n    },\n    removeFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      const index = favBots.findIndex((bot) => bot.classname === botClassname);\n      favBots.splice(index, 1);\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.latestPromptIndex = promptIndex;\n    },\n    setLatestThreadPromptIndex(state, { threadIndex, promptIndex }) {\n      const currentChat =\n        state.chats[state.currentChatIndex].threads[threadIndex];\n      currentChat.latestPromptIndex = promptIndex;\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    updateMessage(state) {\n      messageBuffer.forEach((update) => {\n        const { indexes, message } = update;\n        const { chatIndex, messageIndex } = indexes;\n        const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n        const chat = state.chats[i];\n        chat.messages[messageIndex] = {\n          ...chat.messages[messageIndex],\n          ...message,\n        };\n      });\n      messageBuffer = [];\n      isThrottleMessage = false;\n    },\n    updateThreadMessage(state) {\n      threadMessageBuffer.forEach((update) => {\n        const { indexes, message } = update;\n        const { chatIndex, messageIndex, threadIndex } = indexes;\n        const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n        const chat = state.chats[i];\n        chat.threads[threadIndex].messages[messageIndex] = {\n          ...chat.threads[threadIndex].messages[messageIndex],\n          ...message,\n        };\n      });\n      threadMessageBuffer = [];\n      isThrottleThreadMessage = false;\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      if (currentChat.contexts == undefined) currentChat.contexts = {};\n      currentChat.contexts[botClassname] = context;\n    },\n    clearMessages(state) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.contexts = {};\n      currentChat.messages = [];\n      currentChat.threads = [];\n    },\n    init(state) {\n      // Upgrade messages data structure\n      if (state.messages.length > 0) {\n        const chat = {\n          title: i18n.global.t(\"chat.newChat\"),\n          contexts: {},\n          messages: state.messages,\n        };\n        state.chats[0] = chat;\n        state.messages = [];\n      }\n      // Migrate to favorited bots\n      if (state.selectedBots) {\n        const bots = Object.keys(state.selectedBots);\n        state.chats[0].favBots = [];\n        for (const bot of bots) {\n          if (state.selectedBots[bot])\n            state.chats[0].favBots.push({ classname: bot, selected: true });\n        }\n        state.selectedBots = null;\n      }\n      if (state.chats[0].threads === undefined) {\n        state.chats[0].threads = [];\n      }\n      if (state.chats[0].index === undefined) {\n        state.chats[0].index = 0;\n        state.chats[0].createdTime = new Date().getTime();\n        state.isChatDrawerOpen = true;\n      }\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    editChatTitle(state, { title, isEditedByUser = false }) {\n      if (isEditedByUser) {\n        state.chats[state.currentChatIndex].title = title;\n        state.chats[state.currentChatIndex].isTitleUserEdited = true;\n      } else {\n        if (!state.chats[state.currentChatIndex].isTitleUserEdited) {\n          // if user has not edit title before, set title\n          state.chats[state.currentChatIndex].title = title;\n        } // else do not overwrite user title\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    deleteChats(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const newChats = [\n        {\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          index: 0,\n          title: i18n.global.t(\"chat.newChat\"),\n          createdTime: new Date().getTime(),\n        },\n      ];\n      state.chats = newChats;\n      state.currentChatIndex = 0;\n    },\n    addPrompt(state, values) {\n      const addPrompt = { ...values };\n      addPrompt.index = state.prompts.push(addPrompt) - 1;\n    },\n    editPrompt(state, values) {\n      const { index } = values;\n      state.prompts[index] = { ...state.prompts[index], ...values };\n    },\n    deletePrompt(state, values) {\n      state.prompts[values.index].hide = true;\n    },\n  },\n  actions: {\n    sendPrompt({ commit, state, dispatch }, { prompt, bots, promptIndex }) {\n      isThrottleMessage = false;\n      const currentChat = state.chats[state.currentChatIndex];\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n          hide: false,\n        };\n        // add message\n        const index = currentChat.messages.push(promptMessage);\n        promptMessage.index = index - 1;\n        promptIndex = promptMessage.index;\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      for (const bot of bots) {\n        const message = {\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          done: false,\n          highlight: false,\n          hide: false,\n          className: bot.getClassname(),\n          promptIndex: promptIndex,\n        };\n\n        // workaround for tracking message position\n        message.index = currentChat.messages.push(message) - 1;\n\n        bot.sendPrompt(\n          prompt,\n          (indexes, values) =>\n            dispatch(\"updateMessage\", { indexes, message: values }),\n          { chatIndex: state.currentChatIndex, messageIndex: message.index },\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          bot.getClassname(),\n          prompt.length,\n        );\n      }\n    },\n    sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, responseIndex, threadIndex, promptIndex },\n    ) {\n      isThrottleThreadMessage = false;\n      const currentChat = state.chats[state.currentChatIndex];\n      let thread;\n      if (threadIndex !== undefined) {\n        // existing thread\n        thread = currentChat.threads[threadIndex];\n      } else {\n        // new thread\n        const newThreadMessage = {\n          responseIndex: responseIndex,\n          messages: [],\n        };\n        newThreadMessage.index = currentChat.threads.push(newThreadMessage) - 1;\n        thread = newThreadMessage;\n        threadIndex = thread.index;\n        // update threadIndex to response\n        commit(\"setResponseThreadIndex\", {\n          responseIndex,\n          threadIndex: thread.index,\n        });\n      }\n\n      if (promptIndex === undefined) {\n        // index starts at zero, using `if (!promptIndex)` will enter wrong condition for first time.\n        // if promptIndex not found, not resend, push to messages array\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        // add message\n        threadPromptMessage.index =\n          thread.messages.push(threadPromptMessage) - 1;\n        promptIndex = threadPromptMessage.index;\n      }\n      commit(\"setLatestThreadPromptIndex\", {\n        threadIndex: thread.index,\n        promptIndex,\n      }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        done: false,\n        highlight: false,\n        hide: false,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n\n      // workaround for tracking message position\n      threadResponseMessage.index =\n        thread.messages.push(threadResponseMessage) - 1;\n\n      bot.sendPrompt(\n        prompt,\n        (indexes, values) =>\n          dispatch(\"updateThreadMessage\", { indexes, message: values }),\n        {\n          chatIndex: state.currentChatIndex,\n          messageIndex: threadResponseMessage.index,\n          threadIndex: threadIndex,\n        },\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    updateMessage({ commit, state }, { indexes, message: values }) {\n      messageBuffer.push({ indexes, message: values });\n      if (!isThrottleMessage) {\n        isThrottleMessage = true;\n        setTimeout(() => {\n          commit(\"updateMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const i =\n          indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n        const chat = state.chats[i];\n        const message = { ...chat.messages[indexes.messageIndex], ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    updateThreadMessage({ commit, state }, { indexes, message: values }) {\n      threadMessageBuffer.push({ indexes, message: values });\n      if (!isThrottleThreadMessage) {\n        isThrottleThreadMessage = true;\n        setTimeout(() => {\n          commit(\"updateThreadMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const i =\n          indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n        const chat = state.chats[i];\n        let message = { ...chat.threads[indexes.threadIndex], ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n  },\n  getters: {\n    currentChat: (state) => {\n      if (state.chats.length === 0) {\n        return null;\n      }\n      return state.chats[state.currentChatIndex];\n    },\n    // get current chat prompt\n    getCurrentChatPrompt: (state, getters) => {\n      const messages = getters.currentChat.messages;\n      return messages.filter((message) => message?.type === \"prompt\");\n    },\n  },\n  modules: {\n    // ...你的模块\n  },\n  plugins: [vuexPersist.plugin, messagesPersist.plugin, promptsPersist.plugin], // 添加插件到 store\n});\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 15,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_PRE_NEXT = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"up/down\"],\n  offset: {\n    top: 15,\n    left: 100,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_MANAGEMENT = {\n  elementId: \"prompt-btn\",\n  key: [modifier, \"p\"],\n  offset: {\n    top: -65,\n    left: 5,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_PROMPT_PRE_NEXT,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          class=\"bg-primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"store.getters.currentChat.index === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    style=\"padding: 0.8rem; padding-right: 0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template\n      #append\n      v-if=\"store.getters.currentChat.index === props.chat.index\"\n    >\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding-top: 0.8rem; padding-bottom: 0.8rem\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst emit = defineEmits([\"confirmHideChat\", \"focusTextarea\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\nwatch(() => store.state.currentChatIndex, unsetCursorWait);\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  if (props.chat.index === store.state.currentChatIndex) return;\n  setCursorWait();\n  await new Promise((r) => setTimeout(r, 25));\n  store.commit(\"selectChat\", props.chat.index);\n  emit(\"focusTextarea\");\n}\n\nfunction setCursorWait() {\n  document.body.style.cursor = \"wait\";\n  isCursorWait.value = true;\n}\n\nfunction unsetCursorWait() {\n  document.body.style.cursor = \"\";\n  isCursorWait.value = false;\n}\n\nasync function confirmHideChat() {\n  emit(\"confirmHideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  store.commit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__prepend{\n    margin-left: 0.8rem;\n    margin-right: 0.25rem!important;\n}\n:deep() .v-input__append{\n    margin-left: 0!important;\n}\n\n:deep() .v-list-item__prepend > i {\n    margin-right: 0.5rem!important;\n}\n\n:deep() .v-field__field > input {\n    padding-left: 0.25rem;\n    padding-right: 0.5rem;\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=0f4350df&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0f4350df\"]])\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddNewChat\"\n        @shortkey=\"onAddNewChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in chatsReversed\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :chat=\"chat\"\n        @confirm-hide-chat=\"confirmHideChat\"\n        @focus-textarea=\"focusTextarea\"\n        :key=\"chat.index\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref, computed, onUpdated, nextTick } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\n\nconst store = useStore();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst chatsReversed = computed(() => store.state.chats.slice().reverse());\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction onAddNewChat() {\n  store.commit(\"createChat\");\n  store.commit(\"selectChat\", store.state.chats.length - 1);\n  focusTextarea();\n}\n\nasync function confirmHideChat() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (result) {\n    store.commit(\"hideChat\");\n    selectLatestVisibleChat();\n  }\n}\n\nfunction selectLatestVisibleChat() {\n  let isAnyChatVisible = false;\n  for (let i = 0; i < chatsReversed.value.length; i++) {\n    const chat = chatsReversed.value[i];\n    if (!chat.hide) {\n      isAnyChatVisible = true;\n      store.commit(\"selectChat\", chat.index);\n      focusTextarea();\n      break;\n    }\n  }\n  if (!isAnyChatVisible) {\n    // if there is no visible chat, create a new chat\n    store.commit(\"createChat\");\n    store.commit(\"selectChat\", store.state.chats.length - 1);\n    focusTextarea();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem!important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=b41b7876&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b41b7876\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"props.isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ props.message.content }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4e9f2e3c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e9f2e3c\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(message, index) in messages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message)\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <template v-else>\n      <chat-responses\n        v-if=\"pushResponseAndCheckIsNextMessagePromptType(index, message)\"\n        :columns=\"1\"\n        :responses=\"responses\"\n        :threadIndex=\"props.threadIndex\"\n        :isThread=\"true\"\n        :updateThreadMessage=\"props.updateThreadMessage\"\n      ></chat-responses>\n    </template>\n  </template>\n</template>\n\n<script setup>\nimport { ref, computed, toRefs } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponses from \"@/components/Messages/ChatResponses.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  threadIndex: {\n    type: Number,\n    required: true,\n  },\n  updateThreadMessage: {\n    type: Function,\n  },\n});\n\nconst { threadIndex } = toRefs(props);\nconst thread = ref(store.getters.currentChat.threads[threadIndex.value]);\nconst messages = computed(() => {\n  return (thread.value ? thread.value.messages : []).filter(\n    (message) => !message.hide,\n  );\n});\n\nlet responses = []; // this array store a prompt responses in a thread\nfunction checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message) {\n  if (message.type === \"prompt\") {\n    responses = []; // clear responses for next prompt's responses\n    return true;\n  }\n  return false;\n}\n\nfunction pushResponseAndCheckIsNextMessagePromptType(index, response) {\n  const nextIndex = index + 1;\n  if (!response.hide) responses.push(response);\n  if (nextIndex >= messages.value.length) {\n    return true; // allow last element\n  }\n  return messages.value[nextIndex].type === \"prompt\";\n}\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async confirmBeforeUsing(confirmModal) {\n    if (\n      store.state.chatgpt.riskConfirmed ||\n      (this.constructor._model !== \"gpt-4\" &&\n        this.constructor._model !== \"gpt-4-browsing\" &&\n        this.constructor._model !== \"gpt-4-mobile\")\n    )\n      return true;\n\n    const confirmed = await confirmModal.showModal(\n      i18n.global.t(\"chatGpt.riskWarningTitle\"),\n      i18n.global.t(\"chatGpt.riskWarningText\"),\n    );\n\n    store.state.chatgpt.riskConfirmed = confirmed;\n    return confirmed;\n  }\n\n  async checkAvailability() {\n    const reserved = this.constructor._isAvailable; // To supress the availablity changing\n    const isAvailable = await super.checkAvailability();\n    this.constructor._isAvailable = reserved;\n\n    if (isAvailable) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        this.constructor._isAvailable = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        this.constructor._isAvailable = false;\n      }\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3precise\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"clgalileoall\",\n    \"fluxclmodelsp\",\n    \"fluxsrtrunc\",\n    \"fluxtrunc\",\n    \"fluxv1\",\n    \"fluxv1short\",\n    \"mtpreclst25\",\n    \"rai278\",\n    \"replaceurl\",\n    \"weanow\",\n    \"eredirecturl\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"galileo\",\n    \"weanow\",\n    \"eredirecturl\",\n    \"saharagenconv5\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3imaginative\",\n    \"weanow\",\n    \"eredirecturl\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"clgalileoall\",\n    \"fluxclmodelsp\",\n    \"fluxsrtrunc\",\n    \"fluxtrunc\",\n    \"fluxv1\",\n    \"fluxv1short\",\n    \"mtpreclst25\",\n    \"rai278\",\n    \"replaceurl\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.png\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-logo.jpeg\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLMBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.svg\"; // Place it in public/bots/\n  static _model = \"chatglm-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-v1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Check:\n    // 1. Whether the bot is logged in as needed\n    // 2. Whether the bot settings are correct (e.g. API key is valid)\n    // If yes:\n    //   this.constructor._isAvailable = true;\n    // else:\n    //   this.constructor._isAvailable = false;\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Llama2HC70bBot extends HuggingChatBot {\n  static _className = \"Llama2HC70bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-huggingchat-logo.png\"; // Place it in public/bots/\n  static _model = \"meta-llama/Llama-2-70b-chat-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/lmsys/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WinxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport OpenAssistantBot from \"./OpenAssistantBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\nimport Llama2HC70bBot from \"./huggingface/Llama2HC70bBot\";\n\nconst all = [\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  Llama2HC70bBot.getInstance(),\n  MOSSBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  OpenAssistantBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SageBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  VicunaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WinxinQianfanTurboBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    const bot = disabled.find((bot) => bot.getClassname() === className);\n    if (bot) {\n      return bot;\n    } else {\n      return all.find((bot) => bot.getClassname() === className);\n    }\n  },\n  isBotDisabled(className) {\n    return disabled.some((bot) => bot.getClassname() === className);\n  },\n};\n\nexport default bots;\n","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn flat size=\"x-small\" icon @click=\"hide\" :class=\"getButtonClass\">\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"props.messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!props.isThread && messages[0].threadIndex !== undefined\">\n        <!-- if the repsonse is not a thread and there is value in message.threadIndex, means thread existed for this response\n            we pass in threadIndex into <chat-thread> to render based on the threadIndex -->\n        <chat-thread\n          :key=\"rerenderThread\"\n          :threadIndex=\"messages[0].threadIndex\"\n          :updateThreadMessage=\"updateThreadMessage\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!props.isThread && message.threadIndex !== undefined\">\n          <!-- if the repsonse is not a thread and there is value in message.threadIndex, means thread existed for this response\n          we pass in threadIndex into <chat-thread> to render based on the threadIndex -->\n          <chat-thread\n            :key=\"rerenderThread\"\n            :threadIndex=\"message.threadIndex\"\n            :updateThreadMessage=\"updateThreadMessage\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowPagingButton\"\n          @click=\"carouselModel = Math.max(carouselModel - 1, 0)\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowPagingButton\"\n          @click=\"carouselModel = Math.min(carouselModel + 1, maxPage)\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { onMounted, ref, watch, computed, nextTick } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatThread from \"./ChatThread.vue\";\nimport bots from \"@/bots\";\nimport { Theme } from \"@/theme\";\n\nconst props = defineProps({\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  threadIndex: {\n    type: Number,\n    required: false,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emits = defineEmits([\"update-message\", \"update-thread-message\"]);\n\nconst matomo = useMatomo();\nconst store = useStore();\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst botInstance = computed(() => {\n  return bots.getBotByClassName(props.messages[0].className);\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() => props.messages[maxPage.value].highlight); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messages array is in correct order\n  () =>\n    props.messages[0].promptIndex !== undefined &&\n    store.getters.currentChat.latestPromptIndex !== undefined &&\n    store.getters.currentChat.latestPromptIndex ===\n      props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messages array is in correct order\n    const responseIndex =\n      store.getters.currentChat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex =\n      store.getters.currentChat.messages[responseIndex].promptIndex; // using responseIndex to get response from messages, and in the repsonse we can retrieve promptIndex\n    return (\n      threadPromptIndex !== undefined &&\n      store.getters.currentChat.latestPromptIndex !== undefined &&\n      store.getters.currentChat.latestPromptIndex === threadPromptIndex\n    );\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected() && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.threadIndex !== undefined),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      isAllDone.value && // if all response done\n      messageBotIsSelected() && // if responding bot selected\n      props.messages[0].promptIndex !== undefined && // if current threads is a response to latest prompt\n      store.getters.currentChat.threads[props.threadIndex].latestPromptIndex !==\n        undefined &&\n      store.getters.currentChat.threads[props.threadIndex].latestPromptIndex ===\n        props.messages[0].promptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected() && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    responseIndex: props.messages[maxPage.value].index, // always send prompt in thread to last page\n    threadIndex: props.messages[carouselModel.value].threadIndex,\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nconst rerenderThread = ref(0);\nconst rerenderThreadWhenChatIndexChanged = () => {\n  rerenderThread.value = Math.random();\n};\nwatch(() => store.state.currentChatIndex, rerenderThreadWhenChatIndexChanged);\n\nconst updateThreadMessage = (threadIndex, messageIndex, values) => {\n  store.dispatch(\"updateThreadMessage\", {\n    indexes: {\n      chatIndex: store.state.currentChatIndex,\n      messageIndex,\n      threadIndex,\n    },\n    message: values,\n  });\n};\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    emits(\n      \"update-thread-message\",\n      props.threadIndex,\n      props.messages[maxPage.value].index,\n      {\n        highlight: !props.messages[maxPage.value].highlight, // only update last response highlight\n      },\n    );\n  } else {\n    emits(\"update-message\", props.messages[maxPage.value].index, {\n      highlight: !props.messages[maxPage.value].highlight,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[carouselModel.value].className,\n    props.messages[carouselModel.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      emits(\n        \"update-thread-message\",\n        props.threadIndex,\n        props.messages[carouselModel.value].index,\n        { hide: true },\n      );\n    } else {\n      emits(\"update-message\", props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nfunction resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage =\n      store.getters.currentChat.threads[props.threadIndex].messages[\n        responseMessage.promptIndex\n      ];\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        responseIndex: responseMessage.index,\n        threadIndex: props.threadIndex,\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage =\n      store.getters.currentChat.messages[responseMessage.promptIndex];\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction messageBotIsSelected() {\n  var favBot = store.getters.currentChat.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn, .hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n    \n.response:hover .hide-btn, .response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert{\n  filter: invert(100%);\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=0eae1bab&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0eae1bab\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(grouped, index) in groupedResponses\" :key=\"index\">\n    <chat-response\n      :columns=\"columns\"\n      :messages=\"grouped\"\n      :isThread=\"props.isThread\"\n      :threadIndex=\"props.threadIndex\"\n      @update-message=\"props.updateMessage\"\n      @update-thread-message=\"props.updateThreadMessage\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\n\nconst props = defineProps({\n  responses: {\n    type: Array,\n    default: () => [],\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  updateMessage: {\n    type: Function,\n  },\n  updateThreadMessage: {\n    type: Function,\n  },\n  threadIndex: {\n    type: Number,\n    required: false,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst groupedResponses = computed(() => {\n  // group by bot class name\n  // group responses' from same bot in an array to populate to v-carousel\n  return props.responses.reduce(function (r, a) {\n    r[a.className] = r[a.className] || [];\n    r[a.className].push(a);\n    return r;\n  }, Object.create(null));\n});\n</script>\n","import script from \"./ChatResponses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in messages\" :key=\"index\">\n        <!-- Check if the current message is a prompt\n          If true, render <chat-prompt> component and set responses array empty -->\n        <chat-prompt\n          v-if=\"checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message)\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <template v-else>\n          <!-- If current message is response, push current message to responses array.\n            Then check if next message.type === 'prompt', if true, render <chat-responses> -->\n          <chat-responses\n            v-if=\"pushResponseAndCheckIsNextMessagePromptType(index, message)\"\n            :columns=\"columns\"\n            :responses=\"responses\"\n            :update-message=\"updateMessage\"\n          ></chat-responses>\n        </template>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponses from \"./ChatResponses.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chatIndex: {\n    type: Number,\n    default: 0,\n  },\n});\n\nconst autoScroll = ref(true);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst messages = computed(() => store.state.chats[props.chatIndex].messages);\n\nconst updateMessage = (index, values) => {\n  store.dispatch(\"updateMessage\", {\n    indexes: { chatIndex: store.state.currentChatIndex, messageIndex: index },\n    message: values,\n  });\n};\n\nconst scrollToBottom = ({ immediately = false }) => {\n  nextTick(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: immediately ? \"instant\" : \"smooth\",\n    });\n  });\n};\n\nconst autoScrollToBottom = () => {\n  if (autoScroll.value) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nwatch(() => store.getters.currentChat.messages.length, autoScrollToBottom);\nwatch(() => store.state.updateCounter, autoScrollToBottom);\n\nconst onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll.value =\n    scrollPosition >= document.documentElement.scrollHeight - 10;\n};\n\nonMounted(() => {\n  store.getters.currentChat.messages.forEach((message) => {\n    message.done = true;\n  });\n  window.addEventListener(\"scroll\", onScroll);\n  scrollToBottom({ immediately: true });\n});\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", onScroll);\n});\n\nlet responses = []; // this array store a prompt responses\nfunction checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message) {\n  if (message.type === \"prompt\") {\n    responses = []; // clear responses for next prompt's responses\n    return true;\n  }\n  return false;\n}\n\nfunction pushResponseAndCheckIsNextMessagePromptType(index, response) {\n  const nextIndex = index + 1;\n  if (!response.hide) responses.push(response);\n  if (nextIndex >= messages.value.length) {\n    return true; // allow last element\n  }\n  return messages.value[nextIndex].type === \"prompt\";\n}\n</script>\n\n<style scoped>\n.messages {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    height: 100%;\n    overflow-y: auto;\n    gap: 16px;\n    padding: 0;\n}\n\n.message-grid {\n    display: grid;\n    grid-gap: 16px;\n    width: 100%;\n    padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=028ef643&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-028ef643\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.PACfile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.PACfile;\n  if (newInputfile.value) {\n    proxySettings.value.PACfile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.PACfile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-btn\n      color=\"primary\"\n      variant=\"outlined\"\n      :text=\"$t('chat.deleteAllChatHistory')\"\n      @click=\"deleteChats\"\n    ></v-btn>\n    <v-btn\n      color=\"primary\"\n      variant=\"outlined\"\n      :text=\"$t('chat.downloadAllChatHistory')\"\n      @click=\"downloadJson\"\n      style=\"margin-left: 10px\"\n    ></v-btn>\n  </v-list-item>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport bots from \"@/bots\";\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst store = useStore();\n\n// This function downloads the chat history as a JSON file.\nconst downloadJson = () => {\n  // Get the chat history from localStorage.\n  const chatallMessages = localStorage.getItem(\"chatall-messages\");\n  if (!chatallMessages) {\n    console.error(\"chatall-messages not found in localStorage\");\n    return;\n  }\n\n  const chats = JSON.parse(chatallMessages)?.chats ?? [];\n\n  // Create an array of messages from the chat history.\n  const messages = chats\n    .filter((d) => !d.hide)\n    .map((chat) => ({\n      // The title of the chat.\n      title: chat.title,\n      // The messages in the chat.\n      messages: chat.messages\n        .filter((d) => !d.hide)\n        .reduce((arr, message) => {\n          const t = message.type;\n          const content = message.content;\n          if (t == \"prompt\") {\n            arr.push({\n              prompt: content,\n              responses: [],\n            });\n          } else {\n            const botClassname = message.className;\n            const bot = bots.getBotByClassName(botClassname);\n            const botName = bot.getFullname();\n            arr.at(-1).responses.push({\n              content,\n              botName,\n              botClassname,\n              botModel: message.model,\n              highlight: message.highlight,\n            });\n          }\n          return arr;\n        }, []),\n    }));\n\n  // Create a blob that contains the JSON data.\n  // The space parameter specifies the indentation of nested objects in the string representation.\n  const blob = new Blob([JSON.stringify({ chats: messages }, null, 2)], {\n    // The type of the blob.\n    type: \"application/json\",\n  });\n\n  const url = URL.createObjectURL(blob);\n\n  // Create a file name for the JSON file.\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // months are 0-based in JavaScript\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hour = String(date.getHours()).padStart(2, \"0\");\n  const minute = String(date.getMinutes()).padStart(2, \"0\");\n  const second = String(date.getSeconds()).padStart(2, \"0\");\n  const fileName = `chatall-history-${year}${month}${day}-${hour}${minute}${second}`;\n\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = `${fileName}.json`;\n  document.body.appendChild(a);\n\n  // Click the anchor element to download the file.\n  a.click();\n\n  // Remove the anchor element from the document body.\n  document.body.removeChild(a);\n\n  // Revoke the URL for the blob.\n  URL.revokeObjectURL(url);\n};\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n</script>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport OpenAssistantBotSettings from \"./BotSettings/OpenAssistantBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"openAssistant\", component: OpenAssistantBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=c2988198&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2988198\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert{\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=0c3e1d98&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in bots.all\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nconst props = defineProps([\"favBots\"]);\n\nlet menu = ref(false);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=f6bb4264&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import en from \"./prompts-en.json\";\nimport zh from \"./prompts-zh.json\";\nimport es from \"./prompts-es.json\";\n\nconst prompts = {\n  en,\n  zh,\n  es,\n  languages: [\n    { name: \"English\", code: \"en\" },\n    { name: \"简体中文\", code: \"zh\" },\n    { name: \"Español\", code: \"es\" },\n  ],\n};\n\nexport default prompts;\n","<template>\n  <div>\n    <v-dialog\n      :model-value=\"props.open\"\n      @update:model-value=\"closeDialog\"\n      @after-leave=\"onDialogCloseTransitionEnded\"\n    >\n      <v-card class=\"justify-center\">\n        <v-card-title>\n          <v-text-field\n            clearable\n            v-model=\"search\"\n            density=\"compact\"\n            append-icon=\"mdi-magnify\"\n            :label=\"$t('find.find')\"\n            single-line\n            hide-details\n            autofocus\n          ></v-text-field>\n          <div class=\"pt-2 d-flex justify-space-between\">\n            <v-btn\n              class=\"mt-1\"\n              prepend-icon=\"mdi-plus\"\n              :text=\"$t('prompt.addPrompt')\"\n              @click=\"add\"\n            ></v-btn>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <v-select\n              color=\"primary\"\n              density=\"compact\"\n              :items=\"prompts.languages\"\n              hide-details\n              item-title=\"name\"\n              item-value=\"code\"\n              :model-value=\"language\"\n              @update:model-value=\"setPromptLanguage($event)\"\n            ></v-select>\n          </div>\n        </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"data\"\n          :search=\"search\"\n          height=\"70vh\"\n          fixed-header\n          hover\n          :no-data-text=\"$t('find.noMatches')\"\n          items-per-page=\"10\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td\n                @click=\"usePrompt(item.raw)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.columns.title }}\n              </td>\n              <td\n                @click=\"usePrompt(item.raw)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.columns.prompt }}\n              </td>\n              <td>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  :icon=\"item.raw.isPin ? 'mdi-star' : 'mdi-star-outline'\"\n                  @click=\"pin(item.raw)\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-pencil\"\n                  @click=\"edit(item.raw)\"\n                  v-if=\"item.raw.index >= 0\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-delete-outline\"\n                  @click=\"deletePrompt(item.raw)\"\n                  v-if=\"item.raw.index >= 0\"\n                ></v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      persistent\n      width=\"50%\"\n      :model-value=\"isOpenAddEditPrompt\"\n      @update:model-value=\"isOpenAddEditPrompt = $event\"\n    >\n      <v-card>\n        <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n          <v-text-field\n            required\n            :placeholder=\"$t('prompt.title')\"\n            v-model=\"title\"\n            :rules=\"requiredRule\"\n          ></v-text-field>\n          <v-textarea\n            required\n            :placeholder=\"$t('prompt.prompt')\"\n            v-model=\"prompt\"\n            :rules=\"requiredRule\"\n          ></v-textarea>\n        </v-form>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            variant=\"outlined\"\n            color=\"primary\"\n            @click=\"isOpenAddEditPrompt = false\"\n            >{{ $t(\"modal.cancel\") }}</v-btn\n          >\n          <!-- color=\"primary\" not working for nested dialog button -->\n          <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditPrompt\">{{\n            $t(\"modal.done\")\n          }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport prompts from \"@/prompts\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"afterLeave\"]);\nconst defaultLanguage = prompts.languages\n  .map((lang) => lang.code)\n  .includes(i18n.global.locale.value)\n  ? i18n.global.locale.value // use user langauge if availble\n  : \"en\"; // else default to 'en'\nconst language = ref(defaultLanguage);\nconst search = ref(\"\");\nconst title = ref(\"\");\nconst prompt = ref(\"\");\nconst isEdit = ref(false);\nconst editIndex = ref(null);\nconst formRef = ref(null);\nconst confirmModal = ref(null);\nconst isOpenAddEditPrompt = ref(false);\nlet selectedPrompt = \"\";\nconst requiredRule = [\n  (value) => (value?.trim() ? true : i18n.global.t(\"prompt.required\")),\n];\n\nconst headers = computed(() => [\n  {\n    key: \"title\",\n    title: i18n.global.t(\"prompt.title\"),\n    width: \"20%\",\n  },\n  { key: \"prompt\", title: i18n.global.t(\"prompt.prompt\"), width: \"70%\" },\n  {\n    key: \"action\",\n    title: i18n.global.t(\"prompt.action\"),\n    width: \"10%\",\n    sortable: false,\n  },\n]);\nconst userPrompts = computed(() => {\n  return store.state.prompts\n    .slice()\n    .filter((p) => !p.hide)\n    .sort((x, y) => {\n      return x.isPin === y.isPin ? 0 : x.isPin ? -1 : 1;\n    });\n});\nconst data = computed(() => {\n  const defaultPrompts = prompts[language.value].map((prompt) => {\n    return { title: prompt.act, prompt: prompt.prompt };\n  });\n\n  return [...userPrompts.value, ...defaultPrompts];\n});\n\nconst closeDialog = (value) => {\n  emit(\"update:open\", value);\n};\n\nfunction pin(row) {\n  if (row.index >= 0) {\n    store.commit(\"editPrompt\", {\n      ...row,\n      isPin: !row.isPin,\n    });\n  } else {\n    store.commit(\"addPrompt\", { ...row, isPin: true });\n  }\n}\n\nfunction usePrompt(row) {\n  selectedPrompt = row.prompt;\n  emit(\"update:open\", false);\n}\n\nasync function addEditPrompt() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit.value) {\n      store.commit(\"editPrompt\", {\n        title: title.value,\n        prompt: prompt.value,\n        index: editIndex.value,\n      });\n    } else {\n      store.commit(\"addPrompt\", { title: title.value, prompt: prompt.value });\n    }\n    isOpenAddEditPrompt.value = false;\n  }\n}\n\nfunction add() {\n  isEdit.value = false;\n  title.value = \"\";\n  prompt.value = \"\";\n  isOpenAddEditPrompt.value = true;\n}\n\nfunction edit(item) {\n  isEdit.value = true;\n  title.value = item.title;\n  prompt.value = item.prompt;\n  editIndex.value = item.index;\n  isOpenAddEditPrompt.value = true;\n}\n\nasync function deletePrompt(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHidePrompt\"),\n  );\n  if (result) {\n    store.commit(\"deletePrompt\", { ...item });\n  }\n}\n\nfunction showFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (parent.querySelector(\".tooltip\")) {\n    return;\n  }\n  for (let i = 0; i < parent.children.length - 1; i++) {\n    const td = parent.children[i];\n    const position = td.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.innerText = td.innerText;\n    td.innerText = \"\";\n    div.classList.add(\"tooltip\");\n    div.style.width = `${position.width}px`;\n    div.addEventListener(\"mouseleave\", hideFullText);\n    td.appendChild(div);\n  }\n}\n\nfunction hideFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (!element.toElement || !parent.contains(element.toElement)) {\n    const toRemove = parent.querySelectorAll(\".tooltip\");\n    for (let i = 0; i < toRemove.length; i++) {\n      toRemove[i].parentElement.innerText = toRemove[i].innerText;\n      toRemove[i].remove();\n    }\n  }\n}\n\nfunction setPromptLanguage(value) {\n  language.value = value;\n}\n\nfunction onDialogCloseTransitionEnded() {\n  emit(\"afterLeave\", selectedPrompt);\n  selectedPrompt = \"\";\n  search.value = \"\";\n}\n</script>\n\n<style scoped>\n:deep() tr {\n  cursor: pointer;\n}\n\n:deep() td:nth-child(1), td:nth-child(2) {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n:deep() table {\n  table-layout: fixed;\n}\n\n:deep() .tooltip {\n  padding-right: 16px;\n  white-space: break-spaces;\n  background-color: transparent;\n}\n</style>\n","import script from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptModal.vue?vue&type=style&index=0&id=0be2fc03&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0be2fc03\"]])\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :id=\"SHORTCUT_PROMPT_MANAGEMENT.elementId\"\n            @click=\"isPromptManagementOpen = !isPromptManagementOpen\"\n            color=\"primary\"\n            variant=\"plain\"\n            class=\"h-100 w-100\"\n            style=\"border-radius: 4px; min-width: unset !important\"\n            icon=\"mdi-creation-outline\"\n          ></v-btn>\n        </template>\n      </v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div class=\"bot-logos\" ref=\"favBotLogosRef\" :key=\"rerenderFavBotLogos\">\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <PromptModal\n      v-shortkey=\"SHORTCUT_PROMPT_MANAGEMENT.key\"\n      @shortkey=\"isPromptManagementOpen = !isPromptManagementOpen\"\n      v-model:open=\"isPromptManagementOpen\"\n      @after-leave=\"usePrompt\"\n    ></PromptModal>\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\nimport PromptModal from \"@/components/PromptModal.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\nconst isPromptManagementOpen = ref(false);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  const _favBots = [];\n  store.getters.currentChat.favBots.forEach((favBot) => {\n    if (_bots.isBotDisabled(favBot.classname)) return;\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots\n    .filter((bot) => bot.instance)\n    .sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  const keyCode = event.keyCode;\n  if (\n    keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n\n  // up or down\n  const isUpOrDown =\n    keyCode == historyKeyCode.pre || keyCode == historyKeyCode.next;\n\n  const isAuxiliaryKey = event.metaKey || event.ctrlKey;\n\n  // macOS: Cmd + up/down, Windows: Ctrl + up/down\n  if (isAuxiliaryKey && isUpOrDown) {\n    event.preventDefault();\n\n    // get new prompt and set it\n    const newPrompt = getHistoryPrompt(keyCode);\n    prompt.value = newPrompt.content;\n  }\n}\n\nfunction sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const isFirstPrompt = store.getters.currentChat.messages.length === 0;\n  store\n    .dispatch(\"sendPrompt\", {\n      prompt: prompt.value,\n      bots: toBots,\n    })\n    .then(() => updateChatTitleWithFirstPrompt(isFirstPrompt));\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  // reset prompt index\n  promptIndex = 0;\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\n// current prompt index\nlet promptIndex = 0;\n\n// up and down key code\nconst historyKeyCode = { pre: 38, next: 40 };\n\n// Listen to the up and down arrow keys to obtain historical records.\nfunction getHistoryPrompt(keyCode) {\n  const historyPrompts = store.getters.getCurrentChatPrompt;\n\n  if (!historyPrompts || !historyPrompts.length) return false;\n\n  if (keyCode === historyKeyCode.pre) {\n    // get previous prompt\n    promptIndex =\n      (promptIndex - 1 + historyPrompts.length) % historyPrompts.length;\n  } else if (keyCode === historyKeyCode.next) {\n    // get next prompt\n    promptIndex = (promptIndex + 1) % historyPrompts.length;\n  }\n\n  return historyPrompts[promptIndex];\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nfunction updateChatTitleWithFirstPrompt(isFirstPrompt) {\n  if (isFirstPrompt) {\n    // if this is first prompt, update chat title to first 30 characters of user prompt\n    store.commit(\"editChatTitle\", {\n      title: store.getters.currentChat.messages[0].content.substring(0, 30),\n    });\n  }\n}\n\nasync function usePrompt(value) {\n  await nextTick();\n  focusPromptTextarea();\n  document.execCommand(\"insertText\", false, value);\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: rgba(var(--v-theme-background), 0.7) !important;\n  height: auto !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: 0.5rem;\n  box-shadow: none !important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n\n:deep() .v-field.v-field--appended{\n  padding-right: 0;\n}\n\n:deep() .v-field__append-inner{\n  padding-top: 0;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=04b5a102&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-04b5a102\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: .2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0!important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: .5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=4054c33d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4054c33d\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n    padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=dd9ca826&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-dd9ca826\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"position: absolute; top: 0; left: 0; width: 100vw; height: 100vh\"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace(\"meta\", \"cmd\");\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font: 11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110,118,129,0.4);\n  border-bottom-color: rgba(110,118,129,0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110,118,129,0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=bbd223ce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bbd223ce\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\">\n        <v-app-bar class=\"header-content\" style=\"padding: 0\">\n          <div class=\"header-content\">\n            <v-app-bar-nav-icon\n              :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n              variant=\"text\"\n              @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n            >\n            </v-app-bar-nav-icon>\n            <img\n              :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n              class=\"logo\"\n              src=\"@/assets/logo-banner.png\"\n              alt=\"ChatALL\"\n            />\n          </div>\n          <div class=\"column-icons header-content\">\n            <img\n              v-for=\"columnCount in 3\"\n              :id=\"`column-${columnCount}`\"\n              :key=\"columnCount\"\n              :src=\"getColumnImage(columnCount)\"\n              @click=\"changeColumns(columnCount)\"\n              @shortkey=\"changeColumns(columnCount)\"\n              v-shortkey=\"[`f${columnCount}`]\"\n              :class=\"{\n                selected: columns === columnCount,\n                'dark-png': store.state.theme === Theme.DARK,\n              }\"\n            />\n          </div>\n          <div class=\"header-content\" style=\"padding-right: 16px\">\n            <v-icon\n              :id=\"SHORTCUT_FIND.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-magnify\"\n              size=\"x-large\"\n              @click=\"openFind()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n              @shortkey=\"clearMessages\"\n              :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-broom\"\n              size=\"x-large\"\n              @click=\"clearMessages()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SETTINGS.key\"\n              @shortkey=\"openSettingsModal\"\n              :id=\"SHORTCUT_SETTINGS.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-cog\"\n              size=\"x-large\"\n              @click=\"openSettingsModal()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n              @shortkey=\"toggleShortcutGuide\"\n              :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-help\"\n              size=\"x-large\"\n              @click=\"toggleShortcutGuide()\"\n            ></v-icon>\n          </div>\n        </v-app-bar>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages\n          :chat-index=\"store.state.currentChatIndex\"\n          :columns=\"columns\"\n        ></ChatMessages>\n        <FooterBar ref=\"footerBarRef\"></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst chatDrawerRef = ref();\n\nconst columns = computed(() => store.state.columns);\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n});\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: \"Arial\", sans-serif;\n}\n\n#app {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\nheader {\n    width: 100%;\n    background-color: rgb(var(--v-theme-header));\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n    padding: 16px;\n    z-index: 999;\n}\n\n.header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n    opacity: 0.5;\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n    background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n    cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between\n}\n\n.vuepress-markdown-body {\n    color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n    padding: 0 !important;\n    background-color: transparent !important;\n}\n.vuepress-markdown-body .arrow {\n    display: inline !important;\n}\n.vuepress-markdown-body\n.arrow.up,\n.arrow.down,\n.arrow.left,\n.arrow.right {\n    display: inline-block !important;\n}\n.vuepress-markdown-body tr:nth-child(2n) {\n  background-color: rgb(var(--v-theme-table-tr-2n))!important;\n}\n.vuepress-markdown-body code {\n  color: rgb(var(--v-theme-code-font))!important;\n  background-color: rgb(var(--v-theme-code-background))!important;\n}\n.vuepress-markdown-body pre[class*=v-md-prism-] code, .vuepress-markdown-body pre code {\n  color: #fff!important;\n  background-color: initial!important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b182c768&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiKey\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiKey\"\n      outlined\n      dense\n      placeholder=\"b40...\"\n      @update:model-value=\"setAzureOpenaiApi({ azureApiKey: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureApiInstanceName\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureApiInstanceNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiInstanceName\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureApiInstanceName: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentName\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiDeploymentName\"\n      outlined\n      dense\n      @update:model-value=\"\n        setAzureOpenaiApi({ azureOpenAIApiDeploymentName: $event })\n      \"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiVersion\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiVersionPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiVersion\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureOpenAIApiVersion: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.temperature\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setAzureOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setAzureOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"azureOpenaiApi.temperature0\"),\n        2: i18n.global.t(\"azureOpenaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setAzureOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"azureOpenaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=5374fd33\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6c0f01d1\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHARACTER-AI-TOKENS message from background.js\n    ipcRenderer.on(\"CHARACTER-AI-TOKENS\", (event, token) => {\n      try {\n        const tokenInfo = JSON.parse(token);\n        this.setCharacterAI({ token: tokenInfo.value, ttl: tokenInfo.ttl });\n      } catch (error) {\n        console.error(\"CHARACTER-AI-TOKENS\", error);\n      }\n    });\n  },\n  methods: {\n    ...mapMutations([\"setCharacterAI\"]),\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=38718633\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=17188e40\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"gradio.url\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{ $t(\"gradio.urlPrompt\") }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.url\"\n      outlined\n      dense\n      :placeholder=\"\n        $t('settings.forExample', {\n          example: 'https://*.hf.space, http://127.0.0.1:7861',\n        })\n      \"\n      @update:model-value=\"setGradio({ url: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"gradio.fnIndex\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"gradio.fnIndexPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.fnIndex\"\n      outlined\n      dense\n      placeholder=\"0\"\n      @update:model-value=\"setGradio({ fnIndex: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\n\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setGradio\"]),\n  },\n  computed: {\n    ...mapState([\"gradio\"]),\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=63ca672b\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"openaiApi.apiKey\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.apiKey\"\n      outlined\n      dense\n      placeholder=\"sk-...\"\n      @update:model-value=\"setOpenaiApi({ apiKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"openaiApi.temperature\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"openaiApi.alterUrl\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.alterUrlPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.alterUrl\"\n      outlined\n      dense\n      placeholder=\"https://your.proxy.com/v1\"\n      @update:model-value=\"setOpenaiApi({ alterUrl: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"openaiApi.temperature0\"),\n        2: i18n.global.t(\"openaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"openaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=458805c5\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/OpenAssistantBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAssistantBotSettings.vue?vue&type=template&id=8f4ba222\"\nimport script from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=547dee66\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>API Key & Secret Key</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"wenxinQianfan.apiKey\"\n      outlined\n      dense\n      hide-details\n      label=\"API Key\"\n      :placeholder=\"'2125NA8mQy7gC52Pq9BK3tvk'\"\n      @update:model-value=\"setWenxinQianfan({ apiKey: $event })\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"wenxinQianfan.secretKey\"\n      outlined\n      dense\n      label=\"Secret Key\"\n      :placeholder=\"'IWf2pyYm26fz8GgNAHdkPkznHgazlffQ'\"\n      @update:model-value=\"setWenxinQianfan({ secretKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"wenxinQianfan.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      hide-details\n      @update:model-value=\"setWenxinQianfan({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setWenxinQianfan\"]),\n  },\n  computed: {\n    ...mapState([\"wenxinQianfan\"]),\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=1b8c7b96\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 32669,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 32669,\n\t\"./BardBotSettings\": 55538,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 28778,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 94647,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./GradioAppBotSettings\": 35928,\n\t\"./GradioAppBotSettings.vue\": 35928,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 35562,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings\": 57272,\n\t\"./OpenAIAPIBotSettings.vue\": 57272,\n\t\"./OpenAssistantBotSettings\": 38570,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 55982,\n\t\"./PoeBotSettings.vue\": 55982,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 31736,\n\t\"./WenxinQianfanBotSettings.vue\": 31736,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 32669,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./GradioAppBotSettings.vue\": 35928,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings.vue\": 57272,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 55982,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 31736,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"747fbba6\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"chatall:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","checkAvailability","context","this","getChatContext","requestParams","atValue","_isAvailable","isAvailable","_sendPrompt","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","content","done","catch","error","createChatContext","get","match","_defineProperty","AsyncLock","getInstance","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","getSettingsComponent","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","confirmBeforeUsing","confirmModal","acquireLock","key","lockedFn","onLockUnavailable","self","_lock","acquire","async","ret","err","timeout","sendPrompt","botName","executeSendPrompt","console","wrapCollapsedSection","createIfNotExists","store","getters","currentChat","contexts","setChatContext","commit","botClassname","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","getLoginHyperlink","status","response","CharacterAIBot","getAuthHeaders","headers","Authorization","state","characterAI","token","Date","getTime","ttl","userInfoResponse","user","username","Accept","payload","history_external_id","character_external_id","_characterId","tgt","onDownloadProgress","progressEvent","onResponseDownloadProgress","responses","currentTarget","filter","n","lastResponse","length","Array","isArray","replies","is_final_chunk","chatContinueResponse","characterInfoResponse","external_id","character","participant__user__username","ClaudeAIBot","claudeAi","org","currentAcountResponse","success","accept","attachments","completion","incremental","conversation_uuid","uuid","organization_uuid","SSE","withCredentials","addEventListener","readyState","CLOSED","stream","uuidv4","createResponse","name","LangChainBot","messages","getPastRounds","shift","map","item","storedMessage","type","HumanMessage","AIMessage","SystemMessage","push","res","_chatModel","callbacks","handleLLMNewToken","handleLLMEnd","call","toDict","undefined","MOSSBot","getAuthHeader","moss","refresh","id","message","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","output","stage","status_code","onError","target","open","OpenAssistantBot","i","prompterResponse","parent_id","assistantResponse","model_config_name","plugins","sampling_parameters","top_k","top_p","typical_p","temperature","repetition_penalty","max_new_tokens","message_id","queryString","event_type","PiBot","generateRandomId","randomStr","QianWenBot","getRequestHeaders","qianWen","xsrfToken","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","chunk","failed","errorCode","errorMsg","stopReason","firstQuery","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","skyWork","inviteToken","code","resp_data","busy_now","invite_token","currentPrompt","messageId","currentMessageId","session_id","result_message","code_msg","setTimeout","dialogue","SparkBot","flag","desc","getGtToken","window","initGeeGuard","appId","https","gee_token","chatId","GtToken","formData","FormData","append","String","slice","partialText","descr","Buffer","from","YouChatBot","q","domain","queryTraceId","chat","chatHistory","youChatToken","question","answer","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","chatModel","ChatBaiduWenxin","modelName","baiduApiKey","baiduSecretKey","streaming","pastRounds","GradioAppBot","GradioBot","gradio","_fnIndexes","fnIndex","makeData","fn_index","parseData","config","path","root","log","_sendFnIndex","session_hash","URL","protocol","msg","event_data","rank","rank_eta","parseError","onClose","substring","HuggingChatBot","conversationId","delete","packRequest","inputs","parameters","truncate","stop","return_full_text","options","is_retry","use_cache","generated_text","LMSYSBot","r","includes","AzureOpenAIAPIBot","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","BingChatBot","conversation","result","value","clientId","conversationSignature","invocationId","makePromptRequest","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","isStartOfSession","timestamp","toISOString","author","inputMethod","messageType","requestId","tone","_tone","participant","seperator","fromCharCode","Boolean","version","events","isAnonymous","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","ChatGPTBot","setRefreshCycle","chatgpt","refreshCycle","accessToken","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","getArkoseToken","arkose_token","content_type","parts","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","test","join","citations","metadata","element","detail","e","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","OpenAIAPIBot","openaiApi","configuration","basePath","alterUrl","openAIApiKey","PoeBot","formkey","buildId","settings","lastMessageId","gqlPost","queryName","variables","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","responseURL","secretCode","secretFunction","eval","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","subscriptions","subscriptionName","query","queryHash","debug","min_seq","m","message_type","messageAdded","bot","withChatBreak","messageEdgeCreate","errors","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","start","now","timer","onUnmounted","lang","navigator","language","userLanguage","substr","en","enMessages","zh","zhMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","ipcRenderer","require","defaultTheme","resolveTheme","mode","applyTheme","vuetify","createVuetify","components","VDataTable","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","fetch","script","document","createElement","head","appendChild","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","messagesPersist","VuexPersist","storage","localStorage","reducer","chats","promptsPersist","prompts","isThrottleMessage","isThrottleThreadMessage","messageBuffer","threadMessageBuffer","vuexPersist","updateCounter","persistedState","createStore","columns","riskConfirmed","favBots","classname","selected","threads","hide","createdTime","currentChatIndex","isChatDrawerOpen","selectedBots","mutations","changeColumns","setUuid","setBotSelected","find","setFavBotOrder","newOrder","order","addFavoriteBot","removeFavoriteBot","index","findIndex","splice","setCurrentLanguage","setChatgpt","setOpenaiApi","values","setAzureOpenaiApi","setMoss","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","setCharacterAI","setClaudeAi","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","threadIndex","setResponseThreadIndex","responseIndex","updateMessage","update","indexes","chatIndex","messageIndex","updateThreadMessage","setMessages","incrementUpdateCounter","clearMessages","init","bots","keys","setTheme","setMode","createChat","selectChat","hideChat","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","newChats","addPrompt","editPrompt","deletePrompt","actions","dispatch","promptMessage","highlight","className","trackEvent","sendPromptInThread","thread","newThreadMessage","threadPromptMessage","threadResponseMessage","getCurrentChatPrompt","modules","plugin","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","invoke","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_PROMPT_PRE_NEXT","left","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","SHORTCUT_PROMPT_MANAGEMENT","SHORTCUT_LIST","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","__exports__","useStore","unsetCursorWait","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","props","setCursorWait","emit","style","cursor","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","onUpdated","chatsReversed","computed","reverse","onAddNewChat","focusTextarea","selectLatestVisibleChat","isAnyChatVisible","setProperty","onMounted","toRefs","checkIsMessagePromptTypeAndEmptyResponsesIfTrue","pushResponseAndCheckIsNextMessagePromptType","nextIndex","ChatGPT35Bot","ChatGPT4Bot","confirmed","reserved","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","OpenAIAPI35Bot","OpenAIAPI4Bot","VicunaBot","ChatGLMBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","Llama2HC70bBot","all","WinxinQianfanTurboBot","disabled","getBotByClassName","isBotDisabled","some","replyModel","replyRef","maxPage","carouselModel","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","isAllDone","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isSomeResponsesHasThread","isShowResendButton","isShowPagingButton","getButtonClass","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","trim","rerenderThread","rerenderThreadWhenChatIndexChanged","copyToClipboard","clipboard","writeText","toggleHighlight","emits","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","favBot","b","toggleReplyButton","groupedResponses","reduce","a","create","autoScroll","gridTemplateColumns","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","onScroll","scrollPosition","pageYOffset","innerHeight","removeEventListener","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","PACfile","reply","onFileChange","file","files","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","add","downloadJson","chatallMessages","getItem","d","arr","botModel","blob","Blob","createObjectURL","date","year","getFullYear","month","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","fileName","download","click","removeChild","revokeObjectURL","confirm","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGPTBotSettings","ClaudeAIBotSettings","GradioAppBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","OpenAssistantBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","newBot","markRaw","onDone","isLogoInverted","menu","favorited","toggleFavorite","toggleMenu","defaultLanguage","search","isEdit","editIndex","formRef","isOpenAddEditPrompt","selectedPrompt","requiredRule","width","sortable","userPrompts","p","sort","x","y","isPin","defaultPrompts","act","pin","row","usePrompt","addEditPrompt","validate","valid","edit","showFullText","parent","closest","children","td","position","getBoundingClientRect","div","innerText","classList","hideFullText","toElement","contains","toRemove","querySelectorAll","remove","setPromptLanguage","onDialogCloseTransitionEnded","promptTextArea","botsMenuRef","favBotLogosRef","isPromptManagementOpen","_bots","activeBots","rerenderFavBotLogos","_favBots","clickedBot","isMakeAvailableOpen","updateActiveBots","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","isUpOrDown","historyKeyCode","pre","next","isAuxiliaryKey","newPrompt","getHistoryPrompt","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","newValue","oldValue","botsToCheck","oldBot","historyPrompts","toggleSelected","availability","initializeSortable","isDropOnFavBotBar","onDragEnd","parentNode","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","toArray","execCommand","onBeforeMount","on","versions","checkVersion","latest","current","compare","skip","removeListener","setItem","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","getElementById","innerHTML","toggleShortcutGuide","openShortcutGuide","onUpdatedSystemTheme","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","openSettingsModal","openFind","getColumnImage","columnCount","_paq","ver","_createBlock","_component_v_list_item","_createVNode","_component_v_list_item_title","_ctx","_component_v_list_item_subtitle","_component_v_text_field","$event","outlined","dense","_component_v_slider","min","max","step","ticks","$data","temperatureLabels","methods","mapMutations","mapState","render","_component_login_setting","LoginSetting","mounted","tokenInfo","_component_v_alert","_component_v_checkbox","$options","autoRefresh","hideDetails","label","AUTO_REFRESH_CYCLE","set","auto","_createElementVNode","$props","onClick","_cache","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","secret","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prop","prototype","inProgress","dataWebpackPrefix","l","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","toStringTag","nmd","paths","installedChunks","installedChunkData","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}