{"version":3,"file":"js/app.37e6532d.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/OpenAssistantBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/messagesPersist.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/ChatGLMBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatResponses.vue","webpack://chatall/./src/components/Messages/ChatResponses.vue?de82","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue?9e83","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const context = await this.getChatContext();\n    if (context.requestParams.atValue) {\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    if (this.getModelName())\n      return `${this.getBrandName()} (${this.getModelName()})`;\n    else return this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(err),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    return false;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = store.getters.currentChat?.contexts?.[this.getClassname()];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  static _characterId = \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\"; // Character Assistant id\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        Authorization: `Token ${store.state.characterAI.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    try {\n      this.constructor._isAvailable = false;\n\n      if (!store.state.characterAI.token) {\n        console.error(\"Error CharacterAIBot check login: token not found\");\n        return this.isAvailable();\n      }\n\n      if (new Date().getTime() >= store.state.characterAI?.ttl) {\n        console.error(\"Error CharacterAIBot check login: token expired\");\n        return this.isAvailable();\n      }\n\n      const userInfoResponse = await axios.get(\n        \"https://beta.character.ai/chat/user/\",\n        this.getAuthHeaders(),\n      );\n\n      if (userInfoResponse.status !== 200) {\n        console.error(\"Error CharacterAIBot check login:\", userInfoResponse);\n        return this.isAvailable();\n      }\n\n      if (userInfoResponse.data.user?.user?.username !== \"ANONYMOUS\") {\n        this.constructor._isAvailable = true;\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return this.isAvailable();\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          ...this.getAuthHeaders().headers,\n        };\n        const payload = {\n          history_external_id: context.history_external_id,\n          character_external_id: this.constructor._characterId,\n          text: prompt,\n          tgt: context.tgt,\n        };\n        axios\n          .post(\"https://beta.character.ai/chat/streaming/\", payload, {\n            headers: headers,\n            onDownloadProgress: (progressEvent) => {\n              this.onResponseDownloadProgress(\n                progressEvent,\n                onUpdateResponse,\n                callbackParam,\n                reject,\n              );\n            },\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              resolve();\n            } else {\n              reject(response);\n            }\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  text = \"\";\n  onResponseDownloadProgress(\n    progressEvent,\n    onUpdateResponse,\n    callbackParam,\n    reject,\n  ) {\n    try {\n      const responses = progressEvent?.event?.currentTarget?.response\n        ?.split(\"\\n\") // split with new line\n        ?.filter((n) => n); //  filter empty string in array\n\n      // take last response item only\n      const lastResponse = JSON.parse(responses[responses.length - 1]);\n      if (Array.isArray(lastResponse.replies) && lastResponse.replies.length) {\n        this.text = lastResponse.replies[0].text;\n        onUpdateResponse(callbackParam, {\n          content: lastResponse.replies[0].text,\n          done: lastResponse.is_final_chunk,\n        });\n      } else {\n        // handle exception\n        // {\"abort\": true, \"error\": \"No eligible candidates\", \"last_user_msg_id\": 123, \"last_user_msg_uuid\": \"1111-uuid\"}\n        onUpdateResponse(callbackParam, {\n          content: `${this.text}\\n${this.wrapCollapsedSection(\n            JSON.stringify(lastResponse),\n          )}`,\n          done: true,\n        });\n      }\n    } catch (error) {\n      reject(error);\n      console.error(\"Error CharacterAIBot onChatDownloadProgress\", error);\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    let characterInfoResponse = await axios.post(\n      \"https://beta.character.ai/chat/character/info/\",\n      { external_id: this.constructor._characterId },\n      this.getAuthHeaders(),\n    );\n\n    if (characterInfoResponse.status !== 200) {\n      console.error(\n        \"CharacterAIBot characterInfoResponse\",\n        characterInfoResponse,\n      );\n      throw new Error(characterInfoResponse);\n    }\n\n    let chatContinueResponse;\n    try {\n      chatContinueResponse = await axios.post(\n        \"https://beta.character.ai/chat/history/continue/\",\n        {\n          character_external_id: this.constructor._characterId,\n          history_external_id: null,\n        },\n        this.getAuthHeaders(),\n      );\n    } catch (error) {\n      if (\n        error.response.status === 404 &&\n        error.response.data === \"there is no history between user and character\"\n      ) {\n        // no history, create\n        chatContinueResponse = await axios\n          .post(\n            \"https://beta.character.ai/chat/history/create/\",\n            {\n              character_external_id: this.constructor._characterId,\n            },\n            this.getAuthHeaders(),\n          )\n          .catch((error) => {\n            console.error(\"CharacterAIBot chatCreateResponse\", error);\n            throw Error(error);\n          });\n      } else {\n        console.error(\"CharacterAIBot chatContinueResponse\", error);\n        throw Error(error);\n      }\n    }\n\n    context = {\n      history_external_id: chatContinueResponse?.data?.external_id,\n      tgt: characterInfoResponse?.data?.character?.participant__user__username,\n    };\n\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    if (!store.state.claudeAi.org) {\n      this.constructor._isAvailable = false;\n      return this.isAvailable();\n    }\n\n    const currentAcountResponse = await axios.get(\n      \"https://claude.ai/api/auth/current_account\",\n    );\n\n    if (currentAcountResponse.data.success) {\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      attachments: [],\n      completion: {\n        incremental: true,\n        model: \"claude-2\",\n        prompt: prompt,\n      },\n      conversation_uuid: context.uuid,\n      organization_uuid: store.state.claudeAi.org,\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://claude.ai/api/append_message\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { HumanMessage, AIMessage, SystemMessage } from \"langchain/schema\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages = messages.map((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (storedMessage.type === \"human\") {\n        return new HumanMessage(storedMessage.data);\n      } else if (storedMessage.type === \"ai\") {\n        return new AIMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        return new SystemMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    messages.push(new HumanMessage(prompt));\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    messages.push(new AIMessage(res));\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n\n    if (!token) {\n      this.constructor._isAvailable = false;\n    } else {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then((res) => {\n          this.constructor._isAvailable = true;\n          return res;\n        })\n        .catch((err) => {\n          this.constructor._isAvailable = false;\n          return err;\n        });\n    }\n\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\n\nexport default class OpenAssistantBot extends Bot {\n  static _brandId = \"openAssistant\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"OpenAssistantBot\"; // Class name of the bot\n  static _logoFilename = \"open-assistant.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://open-assistant.io/auth/signin/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    await axios\n      .get(\"https://open-assistant.io/api/auth/session\")\n      .then((response) => {\n        if (response.data) {\n          this.constructor._isAvailable = false;\n          // eslint-disable-next-line\n          for (var i in response.data) {\n            // if data object not empty, user logged in\n            this.constructor._isAvailable = true;\n            break;\n          }\n        } else {\n          this.constructor._isAvailable = false;\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error OpenAssistantBot check login:\", error);\n        this.constructor._isAvailable = false;\n      });\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    const prompterResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/prompter_message\",\n      { chat_id: context.id, content: prompt, parent_id: context.parent_id },\n    );\n\n    if (prompterResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    const assistantResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/assistant_message\",\n      {\n        chat_id: context.id,\n        model_config_name: \"OA_SFT_Llama_30B_6\",\n        content: prompt,\n        parent_id: prompterResponse.data.id,\n        plugins: [],\n        sampling_parameters: {\n          top_k: 50,\n          top_p: 0.95,\n          typical_p: null,\n          temperature: 0.75,\n          repetition_penalty: 1.2,\n          max_new_tokens: 1024,\n        },\n      },\n    );\n\n    if (assistantResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    this.setChatContext({\n      ...context,\n      parent_id: assistantResponse.data.id, // save assistant response id for next prompt parent_id\n    });\n\n    const headers = {\n      accept: \"*/*\",\n    };\n    const payload = {\n      chat_id: context.id,\n      message_id: assistantResponse.data.id,\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://open-assistant.io/api/chat/events?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let data;\n          try {\n            // handle event data: \": ping - 2023-07-14 13:28:17.735145\"\n            data = JSON.parse(event.data);\n          } catch {\n            console.error(\n              \"Error OpenAssistantBot JSON.parse message:\",\n              event.data,\n            );\n            return;\n          }\n          switch (data.event_type) {\n            case \"pending\":\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"openAssistant.queue\", {\n                  ...data,\n                }),\n                done: false,\n              });\n              break;\n            case \"token\":\n              text += data.text;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n              break;\n            case \"message\":\n              onUpdateResponse(callbackParam, {\n                content: data.message.content, // full message\n                done: true,\n              });\n              resolve();\n              break;\n            case \"error\":\n              onUpdateResponse(callbackParam, {\n                content: `${text}\\n${this.wrapCollapsedSection(event.data)}`,\n                done: true,\n              });\n              resolve();\n              break;\n            default:\n              break;\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    try {\n      await axios\n        .post(\"https://open-assistant.io/api/chat\")\n        .then((response) => {\n          if (response.status === 200) {\n            context = {\n              ...response.data,\n            };\n          }\n        });\n    } catch (error) {\n      console.error(\"Error OpenAssistantBot createChatContext:\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://heypi.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    this.constructor._isAvailable = true;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://heypi.com/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        this.constructor._isAvailable = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n        this.constructor._isAvailable = false;\n      });\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        { firstQuery: \"ChatALL\" }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.cn/\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    await axios\n      .get(\"https://chat.360.cn/backend-api/apiz/user/info\")\n      .then((response) => {\n        this.constructor._isAvailable = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        this.constructor._isAvailable = false;\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.cn/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        this.constructor._isAvailable = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          this.constructor._isAvailable = true;\n        } else {\n          this.constructor._isAvailable = false;\n        }\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      this.constructor._isAvailable = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    this.constructor._isAvailable = true;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"langchain/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      const chatModel = new ChatBaiduWenxin({\n        modelName: this.constructor._model,\n        baiduApiKey: apiKey,\n        baiduSecretKey: secretKey,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super.checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    if (this.constructor._loginUrl === \"\") {\n      this.constructor._isAvailable = false;\n    } else {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        this.constructor._isAvailable = true;\n      } catch (err) {\n        console.log(err);\n        this.constructor._isAvailable = false;\n      }\n    }\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(event.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Create a conversation to test if the bot is available\n    const conversationId = await this.createChatContext();\n    if (conversationId) {\n      this.constructor._isAvailable = true;\n      // Delete the conversation after testing\n      axios.delete(\n        `https://huggingface.co/chat/conversation/${conversationId}`,\n      );\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      parameters: {\n        temperature: 0.9,\n        truncate: 1000,\n        max_new_tokens: 1024,\n        stop: [\"</s>\"],\n        top_p: 0.95,\n        repetition_penalty: 1.2,\n        top_k: 50,\n        return_full_text: false,\n      },\n      stream: true,\n      options: {\n        id: uuidv4(),\n        is_retry: false,\n        use_cache: false,\n      },\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        const source = new SSE(\n          `https://huggingface.co/chat/conversation/${conversationId}`,\n          {\n            headers: { \"Content-Type\": \"application/json\" },\n            payload: JSON.stringify(this.packRequest(prompt)),\n          },\n        );\n\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.generated_text === null) {\n            text += data.token.text;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } else {\n            // the last message\n            onUpdateResponse(callbackParam, {\n              content: data.generated_text,\n              done: true,\n            });\n            source.close();\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n          reject(new Error(error.data.error));\n        });\n\n        source.stream();\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(\"https://huggingface.co/chat/conversation\", {\n        model: \"OpenAssistant/oasst-sft-6-llama-30b-xor\",\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return conversationId;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [9, 10]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (\n      !store.state.azureOpenaiApi.azureApiKey ||\n      !store.state.azureOpenaiApi.azureApiInstanceName ||\n      !store.state.azureOpenaiApi.azureOpenAIApiDeploymentName ||\n      !store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      this.constructor._isAvailable = false;\n    } else {\n      const chatModel = new ChatOpenAI({\n        azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n        azureOpenAIApiInstanceName:\n          store.state.azureOpenaiApi.azureApiInstanceName,\n        azureOpenAIApiDeploymentName:\n          store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n        azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n        temperature: store.state.azureOpenaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://www.bing.com/new\";\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.48\";\n\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.10.0 OS/MacIntel\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://www.bing.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.data && response.data.result.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature: response.data.conversationSignature,\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Bing Chat conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async checkAvailability() {\n    await axios\n      .get(\"https://www.bing.com/turing/conversation/chats\")\n      .then((response) => {\n        this.constructor._isAvailable =\n          response.data?.result?.value == \"Success\";\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        this.constructor._isAvailable = false;\n        console.error(\"Error checking Bing Chat login status:\", error);\n      });\n    return this.isAvailable();\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"winmuid2tf\",\n            \"0522chtsprs0\",\n            \"anssuptkmr1\",\n            \"522convqfs0\",\n            \"osbsdusgreccf\",\n            \"contansperf\",\n            \"mlchatpcth-c\",\n            \"winstmsg2tf\",\n            \"creatgoglc\",\n            \"creatorv2t\",\n            \"sydconfigoptt\",\n            \"norespwtf\",\n            \"0524txt3\",\n            \"517opinion\",\n            \"418dhlth\",\n            \"0518logos\",\n            \"517recansvg\",\n            \"525glv7s0\",\n            \"kcimgatt\",\n            \"427startpms0\",\n            \"515oscfing2s0\",\n          ],\n          isStartOfSession: context.invocationId === 0,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          requestId: uuid,\n          conversationSignature: context.conversationSignature,\n          participant: { id: context.clientId },\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        const wsp = new WebSocketAsPromised(\n          \"wss://sydney.bing.com/sydney/ChatHub\",\n          {\n            packMessage: (data) => {\n              return JSON.stringify(data) + seperator;\n            },\n            unpackMessage: (data) => {\n              return data\n                .toString()\n                .split(seperator)\n                .filter(Boolean)\n                .map((r) => JSON.parse(r));\n            },\n          },\n        );\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Bing Chat:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (await this.isAnonymous(context.clientId)) {\n                      const url = this.getLoginUrl();\n                      onUpdateResponse(callbackParam, {\n                        content: i18n.global.t(\"bingChat.loginToContinue\", {\n                          attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                        }),\n                        format: \"html\",\n                        done: false,\n                      });\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(new Error(event.item.result.message));\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Bing Chat response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (response.data && response.data.accessToken) {\n        this.accessToken = response.data.accessToken;\n        this.constructor._isAvailable = true;\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(this.isAvailable());\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  // Credit: https://github.com/linweiyuan/go-chatgpt-api/issues/175\n  async getArkoseToken() {\n    let token = void 0;\n\n    if (this.constructor._model !== \"text-davinci-002-render-sha\") {\n      await axios.get(\"https://arkose-token.linweiyuan.com/\").then((res) => {\n        token = res.data.token;\n      });\n    }\n\n    return token;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: await this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message.id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (!store.state.openaiApi.apiKey) {\n      this.constructor._isAvailable = false;\n    } else {\n      const chatModel = new ChatOpenAI({\n        configuration: {\n          basePath: store.state.openaiApi.alterUrl ? store.state.openaiApi.alterUrl : \"\",\n        },\n        openAIApiKey: store.state.openaiApi.apiKey,\n        modelName: this.constructor._model ? this.constructor._model : \"\",\n        temperature: store.state.openaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    formkey: \"\",\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { formkey, settings } = this.context;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"WpuLMiXEKKE98j56k\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    let isAvailable = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude+\",\n      capybara: \"Sage\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      await axios.get(url).then((response) => {\n        if (response.request.responseURL !== url) {\n          // A 307 redirect to the login page means the bot is not logged in\n          // Axios always do the redirect, so we have to check the responseURL\n          return;\n        }\n\n        // Parse buildId\n        const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n        this.context.buildId = buildId[1];\n\n        // Parse chatId\n        const chatId = response.data.match(/\"chatId\":(\\d+),/);\n        this.context.chatId = chatId[1];\n\n        // Parse and run the secret code of Poe for formkey\n        const secretCode = response.data.match(\n          /var .=\".*\",.*window\\..*=function\\(\\)\\{return .\\.join\\(\"\"\\)\\};/,\n        );\n\n        const secretFunction = secretCode[0].match(\n          /(window\\..*)=function\\(\\)\\{.*\\};/,\n        );\n\n        this.context.formkey = eval(`${secretCode[0]}${secretFunction[1]}();`);\n\n        isAvailable = true;\n      });\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    this.constructor._isAvailable = isAvailable;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\n// Init storage\nstore.commit(\"init\");\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\n\nconst vuetify = createVuetify({\n  components,\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme: defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","// store/messagesPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst messagesPersist = new VuexPersist({\n  key: \"chatall-messages\",\n  storage: window.localStorage,\n  reducer: (state) => ({ messages: state.messages, chats: state.chats }), // Store only messages and chats\n});\n\nexport default messagesPersist;\n","import { createStore } from \"vuex\";\nimport VuexPersist from \"vuex-persist\";\nimport i18n from \"@/i18n\";\nimport messagesPersist from \"./messagesPersist\";\nimport { getMatomo } from \"@/composables/matomo\";\n\nlet isThrottle = false;\nlet messageBuffer = [];\n// 初始化 VuexPersist 实例\nconst vuexPersist = new VuexPersist({\n  key: \"chatall-app\", // 用于存储的键名，可以根据你的应用更改\n  storage: window.localStorage, // 使用 localStorage，你还可以选择其他存储方式，如 sessionStorage\n  reducer: (state) => {\n    // eslint-disable-next-line\n    const { messages, chats, updateCounter, ...persistedState } = state;\n    return persistedState;\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      token: \"\",\n      ttl: 0,\n    },\n    claudeAi: {\n      org: \"\",\n    },\n    chats: [\n      {\n        title: \"New Chat\",\n        favBots: [\n          // default bots\n          { classname: \"ChatGPT35Bot\", selected: true },\n          { classname: \"BingChatCreativeBot\", selected: true },\n          { classname: \"BingChatBalancedBot\", selected: true },\n          { classname: \"BingChatPreciseBot\", selected: true },\n          { classname: \"PiBot\", selected: true },\n          { classname: \"YouChatBot\", selected: true },\n          { classname: \"ChatGLMBot\", selected: true },\n          { classname: \"VicunaBot\", selected: true },\n          { classname: \"AlpacaBot\", selected: true },\n          { classname: \"ClaudeBot\", selected: true },\n        ],\n        contexts: {},\n        messages: [],\n        threads: [],\n        hide: false,\n        createdTime: new Date().getTime(),\n      },\n    ],\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    // TODO: delete following fields\n    selectedBots: null,\n    messages: [],\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    setBotSelected(state, { botClassname, selected }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const bot = currentChat.favBots.find(\n        (bot) => bot.classname === botClassname,\n      );\n      if (bot) bot.selected = selected;\n      else currentChat.favBots.push({ classname: botClassname, selected });\n    },\n    setFavBotOrder(state, newOrder) {\n      const currentChat = state.chats[state.currentChatIndex];\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n    },\n    addFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      if (favBots.find((bot) => bot.classname === botClassname) == undefined)\n        favBots.push({ classname: botClassname, selected: true });\n    },\n    removeFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      const index = favBots.findIndex((bot) => bot.classname === botClassname);\n      favBots.splice(index, 1);\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.latestPromptIndex = promptIndex;\n    },\n    setLatestThreadPromptIndex(state, { threadIndex, promptIndex }) {\n      const currentChat =\n        state.chats[state.currentChatIndex].threads[threadIndex];\n      currentChat.latestPromptIndex = promptIndex;\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    updateMessage(state) {\n      messageBuffer.forEach((update) => {\n        const { indexes, message } = update;\n        const { chatIndex, messageIndex } = indexes;\n        const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n        const chat = state.chats[i];\n        chat.messages[messageIndex] = {\n          ...chat.messages[messageIndex],\n          ...message,\n        };\n      });\n      messageBuffer = [];\n      isThrottle = false;\n    },\n    updateThreadMessage(state, { indexes, message }) {\n      const { chatIndex, messageIndex, threadIndex } = indexes;\n      const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n      const chat = state.chats[i];\n      chat.threads[threadIndex].messages[messageIndex] = {\n        ...chat.threads[threadIndex].messages[messageIndex],\n        ...message,\n      };\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      if (currentChat.contexts == undefined) currentChat.contexts = {};\n      currentChat.contexts[botClassname] = context;\n    },\n    clearMessages(state) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.contexts = {};\n      currentChat.messages = [];\n      currentChat.threads = [];\n    },\n    init(state) {\n      // Upgrade messages data structure\n      if (state.messages.length > 0) {\n        const chat = {\n          title: i18n.global.t(\"chat.newChat\"),\n          contexts: {},\n          messages: state.messages,\n        };\n        state.chats[0] = chat;\n        state.messages = [];\n      }\n      // Migrate to favorited bots\n      if (state.selectedBots) {\n        const bots = Object.keys(state.selectedBots);\n        state.chats[0].favBots = [];\n        for (const bot of bots) {\n          if (state.selectedBots[bot])\n            state.chats[0].favBots.push({ classname: bot, selected: true });\n        }\n        state.selectedBots = null;\n      }\n      if (state.chats[0].threads === undefined) {\n        state.chats[0].threads = [];\n      }\n      if (state.chats[0].index === undefined) {\n        state.chats[0].index = 0;\n        state.chats[0].createdTime = new Date().getTime();\n        state.isChatDrawerOpen = true;\n      }\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    editChatTitle(state, { title, isEditedByUser = false }) {\n      if (isEditedByUser) {\n        state.chats[state.currentChatIndex].title = title;\n        state.chats[state.currentChatIndex].isTitleUserEdited = true;\n      } else {\n        if (!state.chats[state.currentChatIndex].isTitleUserEdited) {\n          // if user has not edit title before, set title\n          state.chats[state.currentChatIndex].title = title;\n        } // else do not overwrite user title\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    deleteChats(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const newChats = [\n        {\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          index: 0,\n          title: i18n.global.t(\"chat.newChat\"),\n          createdTime: new Date().getTime(),\n        },\n      ];\n      state.chats = newChats;\n      state.currentChatIndex = 0;\n    },\n  },\n  actions: {\n    sendPrompt({ commit, state, dispatch }, { prompt, bots, promptIndex }) {\n      isThrottle = false;\n      const currentChat = state.chats[state.currentChatIndex];\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n          hide: false,\n        };\n        // add message\n        const index = currentChat.messages.push(promptMessage);\n        promptMessage.index = index - 1;\n        promptIndex = promptMessage.index;\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      for (const bot of bots) {\n        const message = {\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          done: false,\n          highlight: false,\n          hide: false,\n          className: bot.getClassname(),\n          promptIndex: promptIndex,\n        };\n\n        // workaround for tracking message position\n        message.index = currentChat.messages.push(message) - 1;\n\n        bot.sendPrompt(\n          prompt,\n          (indexes, values) =>\n            dispatch(\"updateMessage\", { indexes, message: values }),\n          { chatIndex: state.currentChatIndex, messageIndex: message.index },\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          bot.getClassname(),\n          prompt.length,\n        );\n      }\n    },\n    sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, responseIndex, threadIndex, promptIndex },\n    ) {\n      const currentChat = state.chats[state.currentChatIndex];\n      let thread;\n      if (threadIndex !== undefined) {\n        // existing thread\n        thread = currentChat.threads[threadIndex];\n      } else {\n        // new thread\n        const newThreadMessage = {\n          responseIndex: responseIndex,\n          messages: [],\n        };\n        newThreadMessage.index = currentChat.threads.push(newThreadMessage) - 1;\n        thread = newThreadMessage;\n        threadIndex = thread.index;\n        // update threadIndex to response\n        commit(\"setResponseThreadIndex\", {\n          responseIndex,\n          threadIndex: thread.index,\n        });\n      }\n\n      if (promptIndex === undefined) {\n        // index starts at zero, using `if (!promptIndex)` will enter wrong condition for first time.\n        // if promptIndex not found, not resend, push to messages array\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        // add message\n        threadPromptMessage.index =\n          thread.messages.push(threadPromptMessage) - 1;\n        promptIndex = threadPromptMessage.index;\n      }\n      commit(\"setLatestThreadPromptIndex\", {\n        threadIndex: thread.index,\n        promptIndex,\n      }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        done: false,\n        highlight: false,\n        hide: false,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n\n      // workaround for tracking message position\n      threadResponseMessage.index =\n        thread.messages.push(threadResponseMessage) - 1;\n\n      bot.sendPrompt(\n        prompt,\n        (indexes, values) =>\n          dispatch(\"updateThreadMessage\", { indexes, message: values }),\n        {\n          chatIndex: state.currentChatIndex,\n          messageIndex: threadResponseMessage.index,\n          threadIndex: threadIndex,\n        },\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    updateMessage({ commit, state }, { indexes, message: values }) {\n      messageBuffer.push({ indexes, message: values });\n      if (!isThrottle) {\n        isThrottle = true;\n        setTimeout(() => {\n          commit(\"updateMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const i =\n          indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n        const chat = state.chats[i];\n        const message = { ...chat.messages[indexes.messageIndex], ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    updateThreadMessage({ commit, state }, { indexes, message: values }) {\n      commit(\"updateThreadMessage\", { indexes, message: values });\n\n      // workaround for notifing the message window to scroll to bottom\n      commit(\"incrementUpdateCounter\");\n\n      if (values.done) {\n        const i =\n          indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n        const chat = state.chats[i];\n        let message = { ...chat.threads[indexes.threadIndex], ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n  },\n  getters: {\n    currentChat: (state) => {\n      if (state.chats.length === 0) {\n        return null;\n      }\n      return state.chats[state.currentChatIndex];\n    },\n  },\n  modules: {\n    // ...你的模块\n  },\n  plugins: [vuexPersist.plugin, messagesPersist.plugin], // 添加插件到 store\n});\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 10,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"store.getters.currentChat.index === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    style=\"padding: 0.8rem; padding-right: 0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template\n      #append\n      v-if=\"store.getters.currentChat.index === props.chat.index\"\n    >\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding-top: 0.8rem; padding-bottom: 0.8rem\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst emit = defineEmits([\"confirmHideChat\", \"focusTextarea\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\nwatch(() => store.state.currentChatIndex, unsetCursorWait);\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  if (props.chat.index === store.state.currentChatIndex) return;\n  setCursorWait();\n  await new Promise((r) => setTimeout(r, 25));\n  store.commit(\"selectChat\", props.chat.index);\n  emit(\"focusTextarea\");\n}\n\nfunction setCursorWait() {\n  document.body.style.cursor = \"wait\";\n  isCursorWait.value = true;\n}\n\nfunction unsetCursorWait() {\n  document.body.style.cursor = \"\";\n  isCursorWait.value = false;\n}\n\nasync function confirmHideChat() {\n  emit(\"confirmHideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  store.commit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__prepend{\n    margin-left: 0.8rem;\n    margin-right: 0.25rem!important;\n}\n:deep() .v-input__append{\n    margin-left: 0!important;\n}\n\n:deep() .v-list-item__prepend > i {\n    margin-right: 0.5rem!important;\n}\n\n:deep() .v-field__field > input {\n    padding-left: 0.25rem;\n    padding-right: 0.5rem;\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=0f4350df&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0f4350df\"]])\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddNewChat\"\n        @shortkey=\"onAddNewChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in chatsReversed\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :chat=\"chat\"\n        @confirm-hide-chat=\"confirmHideChat\"\n        @focus-textarea=\"focusTextarea\"\n        :key=\"chat.index\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref, computed, onUpdated, nextTick } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\n\nconst store = useStore();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst chatsReversed = computed(() => store.state.chats.slice().reverse());\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction onAddNewChat() {\n  store.commit(\"createChat\");\n  store.commit(\"selectChat\", store.state.chats.length - 1);\n  focusTextarea();\n}\n\nasync function confirmHideChat() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (result) {\n    store.commit(\"hideChat\");\n    selectLatestVisibleChat();\n  }\n}\n\nfunction selectLatestVisibleChat() {\n  let isAnyChatVisible = false;\n  for (let i = 0; i < chatsReversed.value.length; i++) {\n    const chat = chatsReversed.value[i];\n    if (!chat.hide) {\n      isAnyChatVisible = true;\n      store.commit(\"selectChat\", chat.index);\n      focusTextarea();\n      break;\n    }\n  }\n  if (!isAnyChatVisible) {\n    // if there is no visible chat, create a new chat\n    store.commit(\"createChat\");\n    store.commit(\"selectChat\", store.state.chats.length - 1);\n    focusTextarea();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem!important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=b41b7876&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b41b7876\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"props.isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ props.message.content }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4e9f2e3c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e9f2e3c\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(message, index) in messages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message)\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <template v-else>\n      <chat-responses\n        v-if=\"pushResponseAndCheckIsNextMessagePromptType(index, message)\"\n        :columns=\"1\"\n        :responses=\"responses\"\n        :threadIndex=\"props.threadIndex\"\n        :isThread=\"true\"\n        :updateThreadMessage=\"props.updateThreadMessage\"\n      ></chat-responses>\n    </template>\n  </template>\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponses from \"@/components/Messages/ChatResponses.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  threadIndex: {\n    type: Number,\n    required: true,\n  },\n  updateThreadMessage: {\n    type: Function,\n  },\n});\n\nconst thread = ref(store.getters.currentChat.threads[props.threadIndex]);\nconst messages = computed(() => {\n  return (thread.value ? thread.value.messages : []).filter(\n    (message) => !message.hide,\n  );\n});\n\nlet responses = []; // this array store a prompt responses in a thread\nfunction checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message) {\n  if (message.type === \"prompt\") {\n    responses = []; // clear responses for next prompt's responses\n    return true;\n  }\n  return false;\n}\n\nfunction pushResponseAndCheckIsNextMessagePromptType(index, response) {\n  const nextIndex = index + 1;\n  if (!response.hide) responses.push(response);\n  if (nextIndex >= messages.value.length) {\n    return true; // allow last element\n  }\n  return messages.value[nextIndex].type === \"prompt\";\n}\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async confirmBeforeUsing(confirmModal) {\n    if (\n      store.state.chatgpt.riskConfirmed ||\n      (this.constructor._model !== \"gpt-4\" &&\n        this.constructor._model !== \"gpt-4-browsing\" &&\n        this.constructor._model !== \"gpt-4-mobile\")\n    )\n      return true;\n\n    const confirmed = await confirmModal.showModal(\n      i18n.global.t(\"chatGpt.riskWarningTitle\"),\n      i18n.global.t(\"chatGpt.riskWarningText\"),\n    );\n\n    store.state.chatgpt.riskConfirmed = confirmed;\n    return confirmed;\n  }\n\n  async checkAvailability() {\n    const reserved = this.constructor._isAvailable; // To supress the availablity changing\n    const isAvailable = await super.checkAvailability();\n    this.constructor._isAvailable = reserved;\n\n    if (isAvailable) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        this.constructor._isAvailable = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        this.constructor._isAvailable = false;\n      }\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"h3precise\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"clgalileo\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"galileo\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"glpromptv6\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"h3imaginative\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.png\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-logo.jpeg\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLMBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.svg\"; // Place it in public/bots/\n  static _model = \"chatglm-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-v1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Check:\n    // 1. Whether the bot is logged in as needed\n    // 2. Whether the bot settings are correct (e.g. API key is valid)\n    // If yes:\n    //   this.constructor._isAvailable = true;\n    // else:\n    //   this.constructor._isAvailable = false;\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/lmsys/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WinxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport OpenAssistantBot from \"./OpenAssistantBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\n\nconst all = [\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  MOSSBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  OpenAssistantBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SageBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  VicunaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WinxinQianfanTurboBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    const bot = disabled.find((bot) => bot.getClassname() === className);\n    if (bot) {\n      return bot;\n    } else {\n      return all.find((bot) => bot.getClassname() === className);\n    }\n  },\n  isBotDisabled(className) {\n    return disabled.some((bot) => bot.getClassname() === className);\n  },\n};\n\nexport default bots;\n","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn flat size=\"x-small\" icon @click=\"hide\" :class=\"getButtonClass\">\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"props.messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!props.isThread && messages[0].threadIndex !== undefined\">\n        <!-- if the repsonse is not a thread and there is value in message.threadIndex, means thread existed for this response\n            we pass in threadIndex into <chat-thread> to render based on the threadIndex -->\n        <chat-thread\n          :key=\"rerenderThread\"\n          :threadIndex=\"messages[0].threadIndex\"\n          :updateThreadMessage=\"updateThreadMessage\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!props.isThread && message.threadIndex !== undefined\">\n          <!-- if the repsonse is not a thread and there is value in message.threadIndex, means thread existed for this response\n          we pass in threadIndex into <chat-thread> to render based on the threadIndex -->\n          <chat-thread\n            :key=\"rerenderThread\"\n            :threadIndex=\"message.threadIndex\"\n            :updateThreadMessage=\"updateThreadMessage\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowPagingButton\"\n          @click=\"carouselModel = Math.max(carouselModel - 1, 0)\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowPagingButton\"\n          @click=\"carouselModel = Math.min(carouselModel + 1, maxPage)\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { onMounted, ref, watch, computed, nextTick } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatThread from \"./ChatThread.vue\";\nimport bots from \"@/bots\";\nimport { Theme } from \"@/theme\";\n\nconst props = defineProps({\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  threadIndex: {\n    type: Number,\n    required: false,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emits = defineEmits([\"update-message\", \"update-thread-message\"]);\n\nconst matomo = useMatomo();\nconst store = useStore();\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst botInstance = computed(() => {\n  return bots.getBotByClassName(props.messages[0].className);\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() => props.messages[maxPage.value].highlight); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messages array is in correct order\n  () =>\n    props.messages[0].promptIndex !== undefined &&\n    store.getters.currentChat.latestPromptIndex !== undefined &&\n    store.getters.currentChat.latestPromptIndex ===\n      props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messages array is in correct order\n    const responseIndex =\n      store.getters.currentChat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex =\n      store.getters.currentChat.messages[responseIndex].promptIndex; // using responseIndex to get response from messages, and in the repsonse we can retrieve promptIndex\n    return (\n      threadPromptIndex !== undefined &&\n      store.getters.currentChat.latestPromptIndex !== undefined &&\n      store.getters.currentChat.latestPromptIndex === threadPromptIndex\n    );\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected() && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.threadIndex !== undefined),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      isAllDone.value && // if all response done\n      messageBotIsSelected() && // if responding bot selected\n      props.messages[0].promptIndex !== undefined && // if current threads is a response to latest prompt\n      store.getters.currentChat.threads[props.threadIndex].latestPromptIndex !==\n        undefined &&\n      store.getters.currentChat.threads[props.threadIndex].latestPromptIndex ===\n        props.messages[0].promptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected() && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    responseIndex: props.messages[maxPage.value].index, // always send prompt in thread to last page\n    threadIndex: props.messages[carouselModel.value].threadIndex,\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nconst rerenderThread = ref(0);\nconst rerenderThreadWhenChatIndexChanged = () => {\n  rerenderThread.value = Math.random();\n};\nwatch(() => store.state.currentChatIndex, rerenderThreadWhenChatIndexChanged);\n\nconst updateThreadMessage = (threadIndex, messageIndex, values) => {\n  store.dispatch(\"updateThreadMessage\", {\n    indexes: {\n      chatIndex: store.state.currentChatIndex,\n      messageIndex,\n      threadIndex,\n    },\n    message: values,\n  });\n};\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    emits(\n      \"update-thread-message\",\n      props.threadIndex,\n      props.messages[maxPage.value].index,\n      {\n        highlight: !props.messages[maxPage.value].highlight, // only update last response highlight\n      },\n    );\n  } else {\n    emits(\"update-message\", props.messages[maxPage.value].index, {\n      highlight: !props.messages[maxPage.value].highlight,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[carouselModel.value].className,\n    props.messages[carouselModel.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      emits(\n        \"update-thread-message\",\n        props.threadIndex,\n        props.messages[carouselModel.value].index,\n        { hide: true },\n      );\n    } else {\n      emits(\"update-message\", props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nfunction resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage =\n      store.getters.currentChat.threads[props.threadIndex].messages[\n        responseMessage.promptIndex\n      ];\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        responseIndex: responseMessage.index,\n        threadIndex: props.threadIndex,\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage =\n      store.getters.currentChat.messages[responseMessage.promptIndex];\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction messageBotIsSelected() {\n  var favBot = store.getters.currentChat.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn, .hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n    \n.response:hover .hide-btn, .response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert{\n  filter: invert(100%);\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=0eae1bab&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0eae1bab\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(grouped, index) in groupedResponses\" :key=\"index\">\n    <chat-response\n      :columns=\"columns\"\n      :messages=\"grouped\"\n      :isThread=\"props.isThread\"\n      :threadIndex=\"props.threadIndex\"\n      @update-message=\"props.updateMessage\"\n      @update-thread-message=\"props.updateThreadMessage\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\n\nconst props = defineProps({\n  responses: {\n    type: Array,\n    default: () => [],\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  updateMessage: {\n    type: Function,\n  },\n  updateThreadMessage: {\n    type: Function,\n  },\n  threadIndex: {\n    type: Number,\n    required: false,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst groupedResponses = computed(() => {\n  // group by bot class name\n  // group responses' from same bot in an array to populate to v-carousel\n  return props.responses.reduce(function (r, a) {\n    r[a.className] = r[a.className] || [];\n    r[a.className].push(a);\n    return r;\n  }, Object.create(null));\n});\n</script>\n","import script from \"./ChatResponses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in messages\" :key=\"index\">\n        <!-- Check if the current message is a prompt\n          If true, render <chat-prompt> component and set responses array empty -->\n        <chat-prompt\n          v-if=\"checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message)\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <template v-else>\n          <!-- If current message is response, push current message to responses array.\n            Then check if next message.type === 'prompt', if true, render <chat-responses> -->\n          <chat-responses\n            v-if=\"pushResponseAndCheckIsNextMessagePromptType(index, message)\"\n            :columns=\"columns\"\n            :responses=\"responses\"\n            :update-message=\"updateMessage\"\n          ></chat-responses>\n        </template>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponses from \"./ChatResponses.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chatIndex: {\n    type: Number,\n    default: 0,\n  },\n});\n\nconst autoScroll = ref(true);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst messages = computed(() => store.state.chats[props.chatIndex].messages);\n\nconst updateMessage = (index, values) => {\n  store.dispatch(\"updateMessage\", {\n    indexes: { chatIndex: store.state.currentChatIndex, messageIndex: index },\n    message: values,\n  });\n};\n\nconst scrollToBottom = ({ immediately = false }) => {\n  nextTick(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: immediately ? \"instant\" : \"smooth\",\n    });\n  });\n};\n\nconst autoScrollToBottom = () => {\n  if (autoScroll.value) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nwatch(() => store.getters.currentChat.messages.length, autoScrollToBottom);\nwatch(() => store.state.updateCounter, autoScrollToBottom);\n\nconst onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll.value =\n    scrollPosition >= document.documentElement.scrollHeight - 10;\n};\n\nonMounted(() => {\n  store.getters.currentChat.messages.forEach((message) => {\n    message.done = true;\n  });\n  window.addEventListener(\"scroll\", onScroll);\n  scrollToBottom({ immediately: true });\n});\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", onScroll);\n});\n\nlet responses = []; // this array store a prompt responses\nfunction checkIsMessagePromptTypeAndEmptyResponsesIfTrue(message) {\n  if (message.type === \"prompt\") {\n    responses = []; // clear responses for next prompt's responses\n    return true;\n  }\n  return false;\n}\n\nfunction pushResponseAndCheckIsNextMessagePromptType(index, response) {\n  const nextIndex = index + 1;\n  if (!response.hide) responses.push(response);\n  if (nextIndex >= messages.value.length) {\n    return true; // allow last element\n  }\n  return messages.value[nextIndex].type === \"prompt\";\n}\n</script>\n\n<style scoped>\n.messages {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    height: 100%;\n    overflow-y: auto;\n    gap: 16px;\n    padding: 0;\n}\n\n.message-grid {\n    display: grid;\n    grid-gap: 16px;\n    width: 100%;\n    padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=028ef643&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-028ef643\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.PACfile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.PACfile;\n  if (newInputfile.value) {\n    proxySettings.value.PACfile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.PACfile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-btn\n      color=\"primary\"\n      variant=\"outlined\"\n      :text=\"$t('chat.deleteAllChatHistory')\"\n      @click=\"deleteChats\"\n    ></v-btn>\n  </v-list-item>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst store = useStore();\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n</script>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport OpenAssistantBotSettings from \"./BotSettings/OpenAssistantBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"openAssistant\", component: OpenAssistantBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=c2988198&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2988198\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert{\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=0c3e1d98&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in bots.all\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nconst props = defineProps([\"favBots\"]);\n\nlet menu = ref(false);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=f6bb4264&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      ></v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div class=\"bot-logos\" ref=\"favBotLogosRef\" :key=\"rerenderFavBotLogos\">\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  const _favBots = [];\n  store.getters.currentChat.favBots.forEach((favBot) => {\n    if (_bots.isBotDisabled(favBot.classname)) return;\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots.sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n}\n\nfunction sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const isFirstPrompt = store.getters.currentChat.messages.length === 0;\n  store\n    .dispatch(\"sendPrompt\", {\n      prompt: prompt.value,\n      bots: toBots,\n    })\n    .then(() => updateChatTitleWithFirstPrompt(isFirstPrompt));\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nfunction updateChatTitleWithFirstPrompt(isFirstPrompt) {\n  if (isFirstPrompt) {\n    // if this is first prompt, update chat title to first 30 characters of user prompt\n    store.commit(\"editChatTitle\", {\n      title: store.getters.currentChat.messages[0].content.substring(0, 30),\n    });\n  }\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: transparent!important;\n  height: auto!important;\n  display: flex;\n  align-items: center!important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: .5rem;\n  box-shadow: none!important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px!important;\n  margin: 0.4rem!important;\n  text-transform: uppercase!important;\n  font-size: small!important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px!important;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=db2a90e0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-db2a90e0\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: .2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0!important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: .5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=4054c33d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4054c33d\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n    padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=dd9ca826&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-dd9ca826\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n      \"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace('meta', 'cmd');\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font: 11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110,118,129,0.4);\n  border-bottom-color: rgba(110,118,129,0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110,118,129,0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=61f39100&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-61f39100\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\">\n        <v-app-bar class=\"header-content\" style=\"padding: 0\">\n          <div class=\"header-content\">\n            <v-app-bar-nav-icon\n              :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n              variant=\"text\"\n              @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n            >\n            </v-app-bar-nav-icon>\n            <img\n              :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n              class=\"logo\"\n              src=\"@/assets/logo-banner.png\"\n              alt=\"ChatALL\"\n            />\n          </div>\n          <div class=\"column-icons header-content\">\n            <img\n              v-for=\"columnCount in 3\"\n              :id=\"`column-${columnCount}`\"\n              :key=\"columnCount\"\n              :src=\"getColumnImage(columnCount)\"\n              @click=\"changeColumns(columnCount)\"\n              @shortkey=\"changeColumns(columnCount)\"\n              v-shortkey=\"[`f${columnCount}`]\"\n              :class=\"{\n                selected: columns === columnCount,\n                'dark-png': store.state.theme === Theme.DARK,\n              }\"\n            />\n          </div>\n          <div class=\"header-content\" style=\"padding-right: 16px\">\n            <v-icon\n              :id=\"SHORTCUT_FIND.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-magnify\"\n              size=\"x-large\"\n              @click=\"openFind()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n              @shortkey=\"clearMessages\"\n              :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-broom\"\n              size=\"x-large\"\n              @click=\"clearMessages()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SETTINGS.key\"\n              @shortkey=\"openSettingsModal\"\n              :id=\"SHORTCUT_SETTINGS.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-cog\"\n              size=\"x-large\"\n              @click=\"openSettingsModal()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n              @shortkey=\"toggleShortcutGuide\"\n              :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-help\"\n              size=\"x-large\"\n              @click=\"toggleShortcutGuide()\"\n            ></v-icon>\n          </div>\n        </v-app-bar>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages\n          :chat-index=\"store.state.currentChatIndex\"\n          :columns=\"columns\"\n        ></ChatMessages>\n        <FooterBar ref=\"footerBarRef\"></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst chatDrawerRef = ref();\n\nconst columns = computed(() => store.state.columns);\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n});\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: \"Arial\", sans-serif;\n}\n\n#app {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\nheader {\n    width: 100%;\n    background-color: rgb(var(--v-theme-header));\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n    padding: 16px;\n    z-index: 999;\n}\n\n.header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n    opacity: 0.5;\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n    background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n    cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between\n}\n\n.vuepress-markdown-body {\n    color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n    padding: 0 !important;\n    background-color: transparent !important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6ebb1541&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiKey\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiKey\"\n      outlined\n      dense\n      placeholder=\"b40...\"\n      @update:model-value=\"setAzureOpenaiApi({ azureApiKey: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureApiInstanceName\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureApiInstanceNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiInstanceName\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureApiInstanceName: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentName\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiDeploymentName\"\n      outlined\n      dense\n      @update:model-value=\"\n        setAzureOpenaiApi({ azureOpenAIApiDeploymentName: $event })\n      \"\n    ></v-text-field>\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiVersion\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiVersionPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiVersion\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureOpenAIApiVersion: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{\n      $t(\"azureOpenaiApi.temperature\")\n    }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setAzureOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setAzureOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"azureOpenaiApi.temperature0\"),\n        2: i18n.global.t(\"azureOpenaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setAzureOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"azureOpenaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=5374fd33\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6c0f01d1\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHARACTER-AI-TOKENS message from background.js\n    ipcRenderer.on(\"CHARACTER-AI-TOKENS\", (event, token) => {\n      try {\n        const tokenInfo = JSON.parse(token);\n        this.setCharacterAI({ token: tokenInfo.value, ttl: tokenInfo.ttl });\n      } catch (error) {\n        console.error(\"CHARACTER-AI-TOKENS\", error);\n      }\n    });\n  },\n  methods: {\n    ...mapMutations([\"setCharacterAI\"]),\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=38718633\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=17188e40\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"gradio.url\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{ $t(\"gradio.urlPrompt\") }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.url\"\n      outlined\n      dense\n      :placeholder=\"\n        $t('settings.forExample', {\n          example: 'https://*.hf.space, http://127.0.0.1:7861',\n        })\n      \"\n      @update:model-value=\"setGradio({ url: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"gradio.fnIndex\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"gradio.fnIndexPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.fnIndex\"\n      outlined\n      dense\n      placeholder=\"0\"\n      @update:model-value=\"setGradio({ fnIndex: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\n\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setGradio\"]),\n  },\n  computed: {\n    ...mapState([\"gradio\"]),\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=63ca672b\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"openaiApi.apiKey\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.apiKey\"\n      outlined\n      dense\n      placeholder=\"sk-...\"\n      @update:model-value=\"setOpenaiApi({ apiKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"openaiApi.temperature\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"openaiApi.alterUrl\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.alterUrlPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.alterUrl\"\n      outlined\n      dense\n      placeholder=\"https://your.proxy.com/v1\"\n      @update:model-value=\"setOpenaiApi({ alterUrl: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"openaiApi.temperature0\"),\n        2: i18n.global.t(\"openaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"openaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=458805c5\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/OpenAssistantBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAssistantBotSettings.vue?vue&type=template&id=8f4ba222\"\nimport script from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=547dee66\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>API Key & Secret Key</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"wenxinQianfan.apiKey\"\n      outlined\n      dense\n      hide-details\n      label=\"API Key\"\n      :placeholder=\"'2125NA8mQy7gC52Pq9BK3tvk'\"\n      @update:model-value=\"setWenxinQianfan({ apiKey: $event })\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"wenxinQianfan.secretKey\"\n      outlined\n      dense\n      label=\"Secret Key\"\n      :placeholder=\"'IWf2pyYm26fz8GgNAHdkPkznHgazlffQ'\"\n      @update:model-value=\"setWenxinQianfan({ secretKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"wenxinQianfan.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      hide-details\n      @update:model-value=\"setWenxinQianfan({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setWenxinQianfan\"]),\n  },\n  computed: {\n    ...mapState([\"wenxinQianfan\"]),\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=1b8c7b96\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 32669,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 32669,\n\t\"./BardBotSettings\": 55538,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 28778,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 94647,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./GradioAppBotSettings\": 35928,\n\t\"./GradioAppBotSettings.vue\": 35928,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 35562,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings\": 57272,\n\t\"./OpenAIAPIBotSettings.vue\": 57272,\n\t\"./OpenAssistantBotSettings\": 38570,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 55982,\n\t\"./PoeBotSettings.vue\": 55982,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 31736,\n\t\"./WenxinQianfanBotSettings.vue\": 31736,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 32669,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./GradioAppBotSettings.vue\": 35928,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings.vue\": 57272,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 55982,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 31736,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = function() { return Promise.resolve(); };","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","async","context","this","getChatContext","requestParams","atValue","_isAvailable","isAvailable","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","content","done","catch","error","get","match","_defineProperty","AsyncLock","static","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","confirmModal","key","lockedFn","onLockUnavailable","self","_lock","acquire","ret","err","timeout","botName","executeSendPrompt","_sendPrompt","acquireLock","console","wrapCollapsedSection","createIfNotExists","store","getters","currentChat","contexts","createChatContext","setChatContext","commit","botClassname","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","getLoginHyperlink","status","response","CharacterAIBot","getAuthHeaders","headers","Authorization","state","characterAI","token","Date","getTime","ttl","userInfoResponse","user","username","Accept","payload","history_external_id","character_external_id","_characterId","tgt","onDownloadProgress","progressEvent","onResponseDownloadProgress","responses","currentTarget","filter","n","lastResponse","length","Array","isArray","replies","is_final_chunk","chatContinueResponse","characterInfoResponse","external_id","character","participant__user__username","ClaudeAIBot","claudeAi","org","currentAcountResponse","success","accept","attachments","completion","incremental","conversation_uuid","uuid","organization_uuid","SSE","withCredentials","addEventListener","readyState","CLOSED","stream","uuidv4","createResponse","name","LangChainBot","messages","getPastRounds","shift","map","item","storedMessage","type","HumanMessage","AIMessage","SystemMessage","push","res","_chatModel","callbacks","handleLLMNewToken","handleLLMEnd","call","toDict","undefined","MOSSBot","getAuthHeader","moss","refresh","id","message","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","output","stage","status_code","onError","target","open","OpenAssistantBot","i","prompterResponse","parent_id","assistantResponse","model_config_name","plugins","sampling_parameters","top_k","top_p","typical_p","temperature","repetition_penalty","max_new_tokens","message_id","queryString","event_type","PiBot","generateRandomId","randomStr","QianWenBot","getRequestHeaders","qianWen","xsrfToken","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","chunk","failed","errorCode","errorMsg","stopReason","firstQuery","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","skyWork","inviteToken","code","resp_data","busy_now","invite_token","checkAvailability","currentPrompt","messageId","currentMessageId","session_id","result_message","code_msg","setTimeout","dialogue","SparkBot","flag","desc","window","initGeeGuard","appId","https","gee_token","chatId","GtToken","getGtToken","formData","FormData","append","String","slice","partialText","descr","Buffer","from","YouChatBot","q","domain","queryTraceId","chat","chatHistory","youChatToken","question","answer","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","chatModel","ChatBaiduWenxin","modelName","baiduApiKey","baiduSecretKey","streaming","pastRounds","GradioAppBot","GradioBot","gradio","_fnIndexes","fnIndex","makeData","fn_index","parseData","config","path","root","log","_sendFnIndex","session_hash","URL","protocol","msg","event_data","rank","rank_eta","parseError","onClose","substring","HuggingChatBot","conversationId","delete","packRequest","inputs","parameters","truncate","stop","return_full_text","options","is_retry","use_cache","generated_text","LMSYSBot","r","includes","AzureOpenAIAPIBot","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","BingChatBot","conversation","result","value","clientId","conversationSignature","invocationId","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","isStartOfSession","timestamp","toISOString","author","inputMethod","messageType","requestId","tone","_tone","participant","seperator","fromCharCode","Boolean","version","events","makePromptRequest","isAnonymous","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","ChatGPTBot","setRefreshCycle","chatgpt","refreshCycle","accessToken","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","arkose_token","getArkoseToken","content_type","parts","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","test","join","citations","metadata","element","detail","e","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","OpenAIAPIBot","openaiApi","configuration","basePath","alterUrl","openAIApiKey","PoeBot","formkey","buildId","settings","lastMessageId","queryName","variables","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","responseURL","secretCode","secretFunction","eval","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","gqlPost","subscriptions","subscriptionName","query","queryHash","debug","min_seq","m","message_type","messageAdded","bot","withChatBreak","messageEdgeCreate","errors","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","start","now","timer","onUnmounted","lang","navigator","language","userLanguage","substr","en","enMessages","zh","zhMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","ipcRenderer","require","defaultTheme","resolveTheme","mode","applyTheme","vuetify","createVuetify","components","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","fetch","script","document","createElement","head","appendChild","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","messagesPersist","VuexPersist","storage","localStorage","reducer","chats","isThrottle","messageBuffer","vuexPersist","updateCounter","persistedState","createStore","columns","riskConfirmed","favBots","classname","selected","threads","hide","createdTime","currentChatIndex","isChatDrawerOpen","selectedBots","mutations","changeColumns","setUuid","setBotSelected","find","setFavBotOrder","newOrder","order","addFavoriteBot","removeFavoriteBot","index","findIndex","splice","setCurrentLanguage","setChatgpt","setOpenaiApi","values","setAzureOpenaiApi","setMoss","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","setCharacterAI","setClaudeAi","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","threadIndex","setResponseThreadIndex","responseIndex","updateMessage","update","indexes","chatIndex","messageIndex","updateThreadMessage","setMessages","incrementUpdateCounter","clearMessages","init","bots","keys","setTheme","setMode","createChat","selectChat","hideChat","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","newChats","actions","sendPrompt","dispatch","promptMessage","highlight","className","trackEvent","sendPromptInThread","thread","newThreadMessage","threadPromptMessage","threadResponseMessage","modules","plugin","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","invoke","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","left","SHORTCUT_LIST","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","__exports__","useStore","unsetCursorWait","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","props","setCursorWait","emit","style","cursor","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","onUpdated","chatsReversed","computed","reverse","onAddNewChat","focusTextarea","selectLatestVisibleChat","isAnyChatVisible","setProperty","onMounted","checkIsMessagePromptTypeAndEmptyResponsesIfTrue","pushResponseAndCheckIsNextMessagePromptType","nextIndex","ChatGPT35Bot","ChatGPT4Bot","confirmed","reserved","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","OpenAIAPI35Bot","OpenAIAPI4Bot","VicunaBot","ChatGLMBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","all","getInstance","WinxinQianfanTurboBot","disabled","getBotByClassName","isBotDisabled","some","replyModel","replyRef","maxPage","carouselModel","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","isAllDone","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isSomeResponsesHasThread","isShowResendButton","isShowPagingButton","getButtonClass","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","trim","rerenderThread","rerenderThreadWhenChatIndexChanged","copyToClipboard","clipboard","writeText","toggleHighlight","emits","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","favBot","b","toggleReplyButton","groupedResponses","reduce","a","create","autoScroll","gridTemplateColumns","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","onScroll","scrollPosition","pageYOffset","innerHeight","removeEventListener","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","PACfile","reply","onFileChange","file","files","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","add","confirm","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGPTBotSettings","ClaudeAIBotSettings","GradioAppBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","OpenAssistantBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","newBot","markRaw","getSettingsComponent","onDone","isLogoInverted","menu","favorited","toggleFavorite","toggleMenu","promptTextArea","botsMenuRef","favBotLogosRef","_bots","activeBots","rerenderFavBotLogos","_favBots","sort","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmBeforeUsing","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","toggleSelected","availability","sortable","initializeSortable","isDropOnFavBotBar","onDragEnd","parentNode","removeChild","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","toArray","newValue","oldValue","botsToCheck","oldBot","onBeforeMount","on","versions","checkVersion","getItem","latest","current","compare","skip","removeListener","setItem","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","formRef","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","validate","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","getElementById","position","getBoundingClientRect","div","classList","width","innerHTML","toggleShortcutGuide","openShortcutGuide","onUpdatedSystemTheme","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","openSettingsModal","openFind","getColumnImage","columnCount","_paq","ver","_createBlock","_component_v_list_item","_createVNode","_component_v_list_item_title","_ctx","_component_v_list_item_subtitle","_component_v_text_field","$event","outlined","dense","_component_v_slider","min","max","step","ticks","$data","temperatureLabels","methods","mapMutations","mapState","render","_component_login_setting","LoginSetting","mounted","tokenInfo","_component_v_alert","_component_v_checkbox","$options","autoRefresh","hideDetails","label","AUTO_REFRESH_CYCLE","set","auto","_createElementVNode","$props","onClick","_cache","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","secret","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","d","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}