{"version":3,"file":"js/app.f01cbdbd.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ChatGLMBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/OpenAssistantBot.js","webpack://chatall/./src/bots/PhindBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/Falcon180bBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/components/BotSettings/settings.const.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/chats.js","webpack://chatall/./src/store/db.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/store/messages.js","webpack://chatall/./src/store/migration.js","webpack://chatall/./src/store/threads.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT432kPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/huggingface/Llama2HC70bBot.js","webpack://chatall/./src/bots/lmsys/Llama213bBot.js","webpack://chatall/./src/bots/lmsys/Llama27bBot.js","webpack://chatall/./src/bots/lmsys/Llama270bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM6bBot.js","webpack://chatall/./src/bots/lmsys/CodeLlamaBot.js","webpack://chatall/./src/bots/lmsys/Vicuna7bBot.js","webpack://chatall/./src/bots/lmsys/Vicuna13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm70bBot.js","webpack://chatall/./src/bots/huggingface/FalconHC180bBot.js","webpack://chatall/./src/bots/huggingface/CodeLlamaHCBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfan4Bot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/helpers/template-helper.js","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/prompts/index.js","webpack://chatall/./src/components/PromptModal.vue","webpack://chatall/./src/components/PromptModal.vue?7dc0","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/components/ChatAction.vue","webpack://chatall/./src/components/ChatAction.vue?8a01","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue?c779","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue?a367","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue?f1d7","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue?9e83","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue?8114","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/get javascript chunk filename","webpack://chatall/webpack/runtime/get mini-css chunk filename","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/load script","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    const context = await this.getChatContext();\n    let available = false;\n\n    if (context.requestParams.atValue) {\n      available = true;\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          this.setChatContext(context);\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\nimport Chats from \"@/store/chats\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  disabled = false; // True if the bot is permanently disabled\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    const prefix = this.isDisabled()\n      ? `(${i18n.global.t(\"bot.disabled\")}) `\n      : \"\";\n    if (this.getModelName())\n      return prefix + `${this.getModelName()}@${this.getBrandName()}`;\n    else return prefix + this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  isDisabled() {\n    return this.disabled;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      let message;\n      if (err instanceof LoginError) {\n        message = `${err.message}\\n${i18n.global.t(\"error.requireLogin\", {\n          link: this.getLoginHyperlink(),\n        })}`;\n      } else {\n        message = err;\n      }\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(message),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  async checkAvailability() {\n    if (this.isDisabled()) return false;\n    this.constructor._isAvailable = await this._checkAvailability();\n    return this.isAvailable();\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return false;\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = (await Chats.getCurrentChat())?.contexts?.[\n      this.getClassname()\n    ];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n\nexport class LoginError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"LoginError\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  static _characterId = \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\"; // Character Assistant id\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        Authorization: `Token ${store.state.characterAI.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    try {\n      if (!store.state.characterAI.token) {\n        console.error(\"Error CharacterAIBot check login: token not found\");\n        return false;\n      }\n\n      if (new Date().getTime() >= store.state.characterAI?.ttl) {\n        console.error(\"Error CharacterAIBot check login: token expired\");\n        return false;\n      }\n\n      const userInfoResponse = await axios.get(\n        \"https://beta.character.ai/chat/user/\",\n        this.getAuthHeaders(),\n      );\n\n      if (userInfoResponse.status !== 200) {\n        console.error(\"Error CharacterAIBot check login:\", userInfoResponse);\n        return false;\n      }\n\n      if (userInfoResponse.data.user?.user?.username !== \"ANONYMOUS\") {\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          ...this.getAuthHeaders().headers,\n        };\n        const payload = {\n          history_external_id: context.history_external_id,\n          character_external_id: this.constructor._characterId,\n          text: prompt,\n          tgt: context.tgt,\n        };\n        axios\n          .post(\"https://beta.character.ai/chat/streaming/\", payload, {\n            headers: headers,\n            onDownloadProgress: (progressEvent) => {\n              this.onResponseDownloadProgress(\n                progressEvent,\n                onUpdateResponse,\n                callbackParam,\n                reject,\n              );\n            },\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              resolve();\n            } else {\n              reject(response);\n            }\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  text = \"\";\n  onResponseDownloadProgress(\n    progressEvent,\n    onUpdateResponse,\n    callbackParam,\n    reject,\n  ) {\n    try {\n      const responses = progressEvent?.event?.currentTarget?.response\n        ?.split(\"\\n\") // split with new line\n        ?.filter((n) => n); //  filter empty string in array\n\n      // take last response item only\n      const lastResponse = JSON.parse(responses[responses.length - 1]);\n      if (Array.isArray(lastResponse.replies) && lastResponse.replies.length) {\n        this.text = lastResponse.replies[0].text;\n        onUpdateResponse(callbackParam, {\n          content: lastResponse.replies[0].text,\n          done: lastResponse.is_final_chunk,\n        });\n      } else {\n        // handle exception\n        // {\"abort\": true, \"error\": \"No eligible candidates\", \"last_user_msg_id\": 123, \"last_user_msg_uuid\": \"1111-uuid\"}\n        onUpdateResponse(callbackParam, {\n          content: `${this.text}\\n${this.wrapCollapsedSection(\n            JSON.stringify(lastResponse),\n          )}`,\n          done: true,\n        });\n      }\n    } catch (error) {\n      reject(error);\n      console.error(\"Error CharacterAIBot onChatDownloadProgress\", error);\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    let characterInfoResponse = await axios.post(\n      \"https://beta.character.ai/chat/character/info/\",\n      { external_id: this.constructor._characterId },\n      this.getAuthHeaders(),\n    );\n\n    if (characterInfoResponse.status !== 200) {\n      console.error(\n        \"CharacterAIBot characterInfoResponse\",\n        characterInfoResponse,\n      );\n      throw new Error(characterInfoResponse);\n    }\n\n    let chatContinueResponse;\n    try {\n      chatContinueResponse = await axios.post(\n        \"https://beta.character.ai/chat/history/continue/\",\n        {\n          character_external_id: this.constructor._characterId,\n          history_external_id: null,\n        },\n        this.getAuthHeaders(),\n      );\n    } catch (error) {\n      if (\n        error.response.status === 404 &&\n        error.response.data === \"there is no history between user and character\"\n      ) {\n        // no history, create\n        chatContinueResponse = await axios\n          .post(\n            \"https://beta.character.ai/chat/history/create/\",\n            {\n              character_external_id: this.constructor._characterId,\n            },\n            this.getAuthHeaders(),\n          )\n          .catch((error) => {\n            console.error(\"CharacterAIBot chatCreateResponse\", error);\n            throw Error(error);\n          });\n      } else {\n        console.error(\"CharacterAIBot chatContinueResponse\", error);\n        throw Error(error);\n      }\n    }\n\n    context = {\n      history_external_id: chatContinueResponse?.data?.external_id,\n      tgt: characterInfoResponse?.data?.character?.participant__user__username,\n    };\n\n    return context;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ChatGLMBot extends Bot {\n  static _brandId = \"chatGlm\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chatglm.cn/detail\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${store.state.chatGlm?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    let userInfoUrl = \"https://chatglm.cn/chatglm/backend-api/v3/user/info\";\n    const context = await this.getChatContext();\n    await axios\n      .get(userInfoUrl, this.getAuthHeader())\n      .then((response) => {\n        available = response.data?.message == \"success\";\n        this.setChatContext({\n          ...context,\n          user_id: response.data?.result._id,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error checking ChatGLM login status:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    if (context.user_id == null || context.user_id == undefined) {\n      await this._checkAvailability();\n      context = await this.getChatContext();\n    }\n    const uuid = uuidv4();\n    const streamContext = await axios.post(\n      `https://chatglm.cn/chatglm/backend-api/v1/stream_context?__requestid=${uuid}`,\n      {\n        prompt: prompt,\n        seed: Math.floor(Math.random() * 100000),\n        max_tokens: 512,\n        conversation_task_id: context.conversation_task_id,\n        retry: false,\n        retry_history_task_id: null,\n        institution: \"\",\n        __userid: context.user_id,\n      },\n      this.getAuthHeader(),\n    );\n\n    if (streamContext.status !== 200) {\n      throw new Error(streamContext);\n    }\n\n    const context_id = streamContext.data.result.context_id;\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://chatglm.cn/chatglm/backend-api/v1/stream?App-Name=chatglm&context_id=${context_id}&institution=`,\n          this.getAuthHeader(),\n        );\n        let text = \"\";\n        source.addEventListener(\"add\", (event) => {\n          try {\n            text = event.data;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } catch {\n            console.error(\"Error ChatGLM JSON.parse message:\", event.data);\n            return;\n          }\n        });\n        source.addEventListener(\"finish\", () => {\n          // after stream closed, done\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"sse_error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        `https://chatglm.cn/chatglm/backend-api/v1/conversation`,\n        {},\n        this.getAuthHeader(),\n      )\n      .then((response) => {\n        context = {\n          conversation_task_id: response.data?.result.task_id,\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error ChatGLM createChatContext \", error);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.claudeAi.org) {\n      const currentAcountResponse = await axios.get(\n        \"https://claude.ai/api/auth/current_account\",\n      );\n\n      if (currentAcountResponse.data.success) {\n        available = true;\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      attachments: [],\n      completion: {\n        incremental: true,\n        model: \"claude-2\",\n        prompt: prompt,\n      },\n      conversation_uuid: context.uuid,\n      organization_uuid: store.state.claudeAi.org,\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://claude.ai/api/append_message\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { BufferMemory } from \"langchain/memory\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    let bufferMemory = new BufferMemory();\n\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages.forEach((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (\n        storedMessage.type.toLowerCase() ===\n        bufferMemory.humanPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addUserMessage(storedMessage.data);\n      } else if (\n        storedMessage.type.toLowerCase() === bufferMemory.aiPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addAIChatMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        bufferMemory.chatHistory.addMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    await bufferMemory.chatHistory.addUserMessage(prompt);\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    messages = await bufferMemory.chatHistory.getMessages();\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    await bufferMemory.chatHistory.addAIChatMessage(res);\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async _checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n    let available = false;\n\n    if (token) {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then(() => {\n          available = true;\n        });\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\n\nexport default class OpenAssistantBot extends Bot {\n  static _brandId = \"openAssistant\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"OpenAssistantBot\"; // Class name of the bot\n  static _logoFilename = \"open-assistant.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://open-assistant.io/auth/signin/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .get(\"https://open-assistant.io/api/auth/session\")\n      .then((response) => {\n        if (response.data) {\n          // eslint-disable-next-line\n          for (var i in response.data) {\n            // if data object not empty, user logged in\n            available = true;\n            break;\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error OpenAssistantBot check login:\", error);\n      });\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    const prompterResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/prompter_message\",\n      { chat_id: context.id, content: prompt, parent_id: context.parent_id },\n    );\n\n    if (prompterResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    const assistantResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/assistant_message\",\n      {\n        chat_id: context.id,\n        model_config_name: \"OA_SFT_Llama_30B_6\",\n        content: prompt,\n        parent_id: prompterResponse.data.id,\n        plugins: [],\n        sampling_parameters: {\n          top_k: 50,\n          top_p: 0.95,\n          typical_p: null,\n          temperature: 0.75,\n          repetition_penalty: 1.2,\n          max_new_tokens: 1024,\n        },\n      },\n    );\n\n    if (assistantResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    this.setChatContext({\n      ...context,\n      parent_id: assistantResponse.data.id, // save assistant response id for next prompt parent_id\n    });\n\n    const headers = {\n      accept: \"*/*\",\n    };\n    const payload = {\n      chat_id: context.id,\n      message_id: assistantResponse.data.id,\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://open-assistant.io/api/chat/events?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let data;\n          try {\n            // handle event data: \": ping - 2023-07-14 13:28:17.735145\"\n            data = JSON.parse(event.data);\n          } catch {\n            console.error(\n              \"Error OpenAssistantBot JSON.parse message:\",\n              event.data,\n            );\n            return;\n          }\n          switch (data.event_type) {\n            case \"pending\":\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"openAssistant.queue\", {\n                  ...data,\n                }),\n                done: false,\n              });\n              break;\n            case \"token\":\n              text += data.text;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n              break;\n            case \"message\":\n              onUpdateResponse(callbackParam, {\n                content: data.message.content, // full message\n                done: true,\n              });\n              resolve();\n              break;\n            case \"error\":\n              onUpdateResponse(callbackParam, {\n                content: `${text}\\n${this.wrapCollapsedSection(event.data)}`,\n                done: true,\n              });\n              resolve();\n              break;\n            default:\n              break;\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    try {\n      await axios\n        .post(\"https://open-assistant.io/api/chat\")\n        .then((response) => {\n          if (response.status === 200) {\n            context = {\n              ...response.data,\n            };\n          }\n        });\n    } catch (error) {\n      console.error(\"Error OpenAssistantBot createChatContext:\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default class PhindBot extends Bot {\n  static _brandId = \"phind\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PhindBot\"; // Class name of the bot\n  static _logoFilename = \"phind-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://www.phind.com\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const context = await this.getChatContext();\n      const rewrite = await axios.post(\n        \"https://www.phind.com/api/infer/followup/rewrite\",\n        {\n          questionToRewrite: prompt,\n          questionHistory: context.questionHistory,\n          answerHistory: context.answerHistory,\n        },\n      );\n      const search = await axios.post(\"https://www.phind.com/api/web/search\", {\n        q: rewrite.data.query,\n        browserLanguage: \"en-GB\",\n        userSearchRules: {},\n      });\n\n      const date = new Date();\n      const formatDate = this.getFormattedDate(date);\n      const payload = JSON.stringify({\n        questionHistory: context.questionHistory,\n        answerHistory: context.answerHistory,\n        question: prompt,\n        webResults: search.data,\n        options: {\n          date: formatDate,\n          language: \"en-GB\",\n          detailed: true,\n          anonUserId: await this.getUUID(),\n          answerModel: store.state.phind.model,\n          customLinks: [],\n        },\n        context: \"\",\n      });\n\n      return new Promise((resolve, reject) => {\n        try {\n          const source = new SSE(\"https://www.phind.com/api/infer/answer\", {\n            start: false,\n            payload,\n          });\n          let text = \"\";\n          let isSuccess = false;\n          source.addEventListener(\"message\", (event) => {\n            if (event.data) {\n              if (event.data.startsWith(\"<PHIND_METADATA>\")) {\n                isSuccess = true;\n              } else {\n                text += event.data;\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            }\n          });\n\n          source.addEventListener(\"readystatechange\", (event) => {\n            if (event.readyState === source.CLOSED) {\n              // after stream closed, done\n              if (isSuccess) {\n                // save answerHistory and questionHistory to context\n                this.setChatContext({\n                  answerHistory: [...context.answerHistory, text],\n                  questionHistory: [...context.questionHistory, prompt],\n                });\n\n                // replace link with hostname\n                if (search.data && search.data.length) {\n                  for (let i = 0; i < search.data.length; i++) {\n                    const hostname = new URL(search.data[i].url).hostname;\n                    text = text.replaceAll(`[Source${i}]`, `[${hostname}]`);\n                    text = text.replaceAll(\n                      `[^${i}^]`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                    text = text.replaceAll(\n                      `^${i}^`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                  }\n                }\n              }\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: true,\n              });\n              resolve();\n            }\n          });\n          source.addEventListener(\"error\", (event) => {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          });\n\n          // override default _onStreamProgress to fix missing new line in response due to trimming\n          source._onStreamProgress = function (e) {\n            if (!source.xhr) {\n              return;\n            }\n\n            if (source.xhr.status !== 200) {\n              source._onStreamFailure(e);\n              return;\n            }\n\n            if (source.readyState == source.CONNECTING) {\n              source.dispatchEvent(new CustomEvent(\"open\"));\n              source._setReadyState(source.OPEN);\n            }\n\n            var data = source.xhr.responseText.substring(source.progress);\n\n            source.progress += data.length;\n            var parts = (source.chunk + data).split(/\\r\\n\\r\\n/);\n            var lastPart = parts.pop();\n            for (let part of parts) {\n              // skip if data is empty\n              if (part === \"data: \") {\n                continue;\n              }\n\n              // newline\n              if (part === \"data: \\r\\ndata: \") {\n                let event = new CustomEvent(\"message\");\n                event.data = \"\\n\";\n                source.dispatchEvent(event);\n                continue;\n              }\n\n              const event = source._parseEventChunk(part);\n              source.dispatchEvent(event);\n            }\n            source.chunk = lastPart;\n          };\n          source.stream();\n        } catch (err) {\n          reject(err);\n        }\n      });\n    } catch (error) {\n      if (error.request.status === 403) {\n        throw new Error(\n          `${error.request.status} ${error.request.responseText}`,\n        );\n      } else {\n        console.error(\"Error PhindBot _sendPrompt:\", error);\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { answerHistory: [], questionHistory: [] };\n  }\n\n  getFormattedDate(date) {\n    let year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n    let day = date.getDate().toString().padStart(2, \"0\");\n    return month + \"/\" + day + \"/\" + year;\n  }\n\n  async getUUID() {\n    const cookies = await ipcRenderer.invoke(\"get-cookies\", {\n      domain: \"www.phind.com\",\n    });\n    const uuidCookie = cookies.find((cookie) => cookie.name === \"uuid\");\n    return uuidCookie ? uuidCookie.value : \"\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://pi.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://pi.ai/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        available = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        { firstQuery: \"ChatALL\" }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.cn/\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://chat.360.cn/backend-api/apiz/user/info\")\n      .then((response) => {\n        available = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.cn/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        available = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          available = true;\n        }\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      available = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n    }\n    return available;\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt-chat/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"langchain/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      const chatModel = new ChatBaiduWenxin({\n        modelName: this.constructor._model,\n        baiduApiKey: apiKey,\n        baiduSecretKey: secretKey,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import GradioBot from \"@/bots/huggingface/GradioBot\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport store from \"@/store\";\n\nexport default class Falcon180bBot extends GradioBot {\n  static _brandId = \"falcon\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Falcon180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-logo.jpeg\"; // Place it in public/bots/\n  static _loginUrl = \"https://tiiuae-falcon-180b-demo.hf.space/\"; // Any Gradio URL\n  static _settingsComponent = \"Falcon180bBotSettings\"; // Vue component filename for settings\n  static _model = \"falcon-180b\";\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n  static _fnIndexes = [3]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  static _predictUrl = Falcon180bBot._loginUrl + \"run/predict\";\n\n  constructor() {\n    super();\n  }\n\n  sendPredict(fn_index, session_hash, payload) {\n    return axios.post(Falcon180bBot._predictUrl, {\n      fn_index,\n      data: [],\n      event_data: null,\n      session_hash: session_hash,\n      ...payload,\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const session_hash = await this.getChatContext();\n      await axios.all([\n        this.sendPredict(4, session_hash),\n        this.sendPredict(1, session_hash, {\n          data: [prompt],\n        }),\n      ]);\n      await this.sendPredict(2, session_hash, { data: [null, null] });\n      await super._sendPrompt(prompt, onUpdateResponse, callbackParam);\n      await this.sendPredict(5, session_hash);\n    } catch (error) {\n      throw Error(error);\n    }\n  }\n\n  /* eslint-disable no-unused-vars */\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [\n        null,\n        null,\n        \"\",\n        store.state.falcon.temperature,\n        store.state.falcon.maxNewTokens,\n        store.state.falcon.topP,\n        store.state.falcon.repetitionPenalty,\n      ];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = data[0][data[0].length - 1][1];\n    }\n    return r;\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  _checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super._checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    if (this.constructor._loginUrl !== \"\") {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        available = true;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(event.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot, { LoginError } from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _model = \"OpenAssistant/oasst-sft-6-llama-30b-xor\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true; // Support anonymous chat\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      id: uuidv4(),\n      is_retry: false,\n      response_id: uuidv4(),\n      web_search: false,\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        try {\n          const response = await fetch(\n            `https://huggingface.co/chat/conversation/${conversationId}`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(this.packRequest(prompt)),\n            },\n          );\n\n          if (!response.ok) {\n            const errorData = await response.json();\n            if (\n              errorData.message === \"Exceeded number of messages before login\"\n            ) {\n              reject(new LoginError(errorData.message));\n            } else {\n              reject(new Error(errorData.message || \"Unknown error\"));\n            }\n            return;\n          }\n\n          const reader = response.body.getReader();\n          let text = \"\";\n\n          const processStream = async () => {\n            const { done, value } = await reader.read();\n            if (done) {\n              return;\n            }\n\n            const dataChunk = new TextDecoder().decode(value);\n            // Split the chunk into individual JSON strings\n            const jsonDataArray = dataChunk.split(\"\\n\").filter(Boolean); // filter(Boolean) removes any empty strings\n\n            for (let i = 0; i < jsonDataArray.length; i++) {\n              const jsonData = jsonDataArray[i];\n              const data = JSON.parse(jsonData);\n\n              if (data.type === \"stream\") {\n                text += data.token;\n                onUpdateResponse(callbackParam, { content: text, done: false });\n              } else if (data.type === \"finalAnswer\") {\n                onUpdateResponse(callbackParam, {\n                  content: data.text,\n                  done: true,\n                });\n                return;\n              }\n            }\n            await processStream(); // Continue processing stream\n          };\n\n          await processStream(); // Start processing stream\n          resolve();\n        } catch (error) {\n          if (error.message === \"network error\") {\n            // ignore network error\n          } else {\n            reject(new Error(error.message));\n          }\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(\"https://huggingface.co/chat/conversation\", {\n        model: this.constructor._model,\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return conversationId;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [39, 40]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n    if (available) {\n      this._sendFnIndex(43, \"\", () => {}, 0); // Refresh the session\n    }\n    return available;\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    } else if (fn_index === 43) {\n      r = [{}];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n\n      // Refresh the session too\n      const context = this.createChatContext();\n      this.setChatContext(context);\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    if (\n      store.state.azureOpenaiApi.azureApiKey &&\n      store.state.azureOpenaiApi.azureApiInstanceName &&\n      store.state.azureOpenaiApi.azureOpenAIApiDeploymentName &&\n      store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      const chatModel = new ChatOpenAI({\n        azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n        azureOpenAIApiInstanceName:\n          store.state.azureOpenaiApi.azureApiInstanceName,\n        azureOpenAIApiDeploymentName:\n          store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n        azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n        temperature: store.state.azureOpenaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot, { LoginError } from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://www.bing.com/new\";\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.48\";\n\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.10.3 OS/macOS\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://www.bing.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.status == 200 && response.data?.result?.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature:\n          response.data.conversationSignature ??\n          response.headers[\"x-sydney-conversationsignature\"],\n        secAccessToken:\n          response.headers[\"x-sydney-encryptedconversationsignature\"],\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Bing Chat conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://www.bing.com/turing/conversation/chats\")\n      .then((response) => {\n        available =\n          response.data?.result?.value == \"Success\" &&\n          !this.isAnonymous(response.data?.clientId); // Anonymous user is not supported any more\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking Bing Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"629adsredir\",\n            \"gbaa\",\n            \"gba\",\n            \"divkorbl2p\",\n            \"emovoicecf\",\n            \"tts3cf\",\n            \"crtrgxnew\",\n            \"wrapuxslimt\",\n            \"norbingchrome\",\n            \"sydconfigoptt\",\n            \"803iyjbexps0\",\n            \"178gentechs0\",\n            \"824fluxhi52s0\",\n            \"0825agicert\",\n            \"821iypapyrust\",\n          ],\n          verbosity: \"verbose\",\n          scenario: \"SERP\",\n          plugins: [],\n          isStartOfSession: context.invocationId === 0,\n          requestId: uuid,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          conversationSignature: context.conversationSignature, // TODO: test if this is needed when secAccessToken is set\n          participant: { id: context.clientId },\n          spokenTextMode: \"None\",\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        // If secAccessToken is not set, use the old way to pass conversationSignature\n        const url = context.secAccessToken\n          ? `wss://sydney.bing.com/sydney/ChatHub?sec_access_token=${encodeURIComponent(\n              context.secAccessToken,\n            )}`\n          : \"wss://sydney.bing.com/sydney/ChatHub\";\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data) + seperator;\n          },\n          unpackMessage: (data) => {\n            return data\n              .toString()\n              .split(seperator)\n              .filter(Boolean)\n              .map((r) => JSON.parse(r));\n          },\n        });\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n                this.setChatContext(context);\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Bing Chat:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (this.isAnonymous(context.clientId)) {\n                      reject(new LoginError(event.item.result.message));\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(\n                      new Error(\n                        `${event.item.result.message} (${event.item.result.value})`,\n                      ),\n                    );\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Bing Chat response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  static _arkoseScriptLoaded = false;\n  static _myEnforcement = null;\n  static _arkosePromise = null;\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (!response.data?.error && response.data?.accessToken) {\n        this.accessToken = response.data.accessToken;\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n    }\n\n    if (available) {\n      this.loadArkoseScript();\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(available);\n\n    return available;\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  loadArkoseScript() {\n    // Append the Arkose JS tag to the Document Body. Reference https://github.com/ArkoseLabs/arkose-examples/blob/main/vue-example/src/components/Arkose.vue\n    if (!ChatGPTBot._arkoseScriptLoaded) {\n      ChatGPTBot._arkoseScriptLoaded = true;\n      console.log(\"Loading Arkose API Script\", this.getFullname());\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src =\n        \"https://tcr9i.chat.openai.com/v2/35536E1E-65B4-4D96-9D97-6ADB7EFF8147/api.js\";\n      script.setAttribute(\"data-callback\", \"setupEnforcement\");\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        console.log(\"Arkose API Script loaded\");\n        window.setupEnforcement = this.setupEnforcement.bind(this);\n      };\n      script.onerror = () => {\n        console.log(\"Could not load the Arkose API Script!\");\n      };\n    }\n  }\n\n  setupEnforcement(myEnforcement) {\n    ChatGPTBot._myEnforcement = myEnforcement;\n    ChatGPTBot._myEnforcement.setConfig({\n      onReady: () => {},\n      onShown: () => {},\n      onShow: () => {},\n      onSuppress: () => {},\n      onCompleted: (response) => {\n        ChatGPTBot._arkosePromise.resolve(response.token);\n      },\n      onReset: () => {},\n      onHide: () => {},\n      onError: (response) => {\n        console.log(\"Arkose error:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n      onFailed: (response) => {\n        console.log(\"Arkose failed:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n    });\n  }\n\n  async getArkoseToken() {\n    if (ChatGPTBot._myEnforcement) {\n      return new Promise((resolve, reject) => {\n        ChatGPTBot._arkosePromise = { resolve, reject };\n        ChatGPTBot._myEnforcement.run();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: await this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data.trim() === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n\n              // Ignore messages which includes repeated content\n              if (data.message?.metadata?.is_complete) return;\n\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message_id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.openaiApi.apiKey) {\n      const chatModel = new ChatOpenAI({\n        configuration: {\n          basePath: store.state.openaiApi.alterUrl\n            ? store.state.openaiApi.alterUrl\n            : \"\",\n        },\n        openAIApiKey: store.state.openaiApi.apiKey,\n        modelName: this.constructor._model ? this.constructor._model : \"\",\n        temperature: store.state.openaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { settings } = this.context;\n    const formkey = store.state.poe.formkey;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"4LxgHM6KpFqokX0Ox\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude-2-100k\",\n      capybara: \"Assistant\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n      vizcacha: \"GPT-4-32k\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      const response = await axios.get(url);\n\n      // Parse buildId\n      const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n      this.context.buildId = buildId[1];\n\n      // Parse chatId\n      const chatId = response.data.match(/\"chatId\":(\\d+),/);\n      this.context.chatId = chatId[1];\n\n      available = true;\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","export const Type = {\n  Text: 0,\n  Slider: 1,\n  Select: 2,\n};\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport Chats from \"@/store/chats\";\nimport { migrateChatsMessagesThreads } from \"@/store/migration\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\nimport { VDataTable } from \"vuetify/labs/VDataTable\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nawait store.restored; // wait for state to be restore\nstore.commit(\"migrateSettingsPrompts\");\nawait migrateChatsMessagesThreads();\nawait Chats.addFirstChatIfEmpty();\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\n\nconst vuetify = createVuetify({\n  components: { ...components, VDataTable },\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n          \"table-tr-2n\": \"#F6F8FA\",\n          \"code-font\": \"#476582\",\n          \"code-background\": \"#F3F4F4\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n          \"table-tr-2n\": \"#1d1e20\",\n          \"code-font\": \"#cbdae6\",\n          \"code-background\": \"#292a2d\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","import db from \"@/store/db\";\nimport store from \"@/store/index\";\nimport i18n from \"@/i18n\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Chats {\n  static get table() {\n    return db.table(\"chats\");\n  }\n\n  static async addFirstChatIfEmpty() {\n    const count = await Chats.table.count();\n    if (count === 0) {\n      store.commit(\n        \"selectChat\",\n        await Chats.add({\n          favBots: [\n            // default bots\n            { classname: \"ChatGPT35Bot\", selected: true },\n            { classname: \"ChatGPT4Bot\", selected: true },\n            { classname: \"BingChatCreativeBot\", selected: true },\n            { classname: \"BingChatBalancedBot\", selected: true },\n            { classname: \"BingChatPreciseBot\", selected: true },\n            { classname: \"BardBot\", selected: true },\n            { classname: \"ClaudeInstantPoeBot\", selected: true },\n            { classname: \"FalconHC180bBot\", selected: true },\n            { classname: \"Llama270bBot\", selected: true },\n            { classname: \"VicunaBot\", selected: true },\n          ],\n        }),\n      );\n    }\n  }\n\n  static async getCurrentChat() {\n    return await Chats.table.get(store.state.currentChatIndex);\n  }\n\n  static async add(payload) {\n    const currentChat = await Chats.getCurrentChat();\n    const count = await Chats.table.count();\n    const newKey = await Chats.table.add({\n      index: uuidv4(),\n      contexts: {},\n      favBots: currentChat ? currentChat.favBots : [],\n      createdTime: new Date().getTime(),\n      modifiedTime: new Date().getTime(),\n      title: `${i18n.global.t(\"chat.newChat\")} ${count + 1}`,\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Chats.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Chats;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"ChatALL\");\ndb.version(1).stores({\n  chats: \"index, title, modifiedTime, selectedTime\",\n  messages: \"index, chatIndex, createdTime, modifiedTime\",\n  threads: \"index, chatIndex, messageIndex, createdTime, modifiedTime\",\n});\n\nexport default db;\n","import { getMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport localForage from \"localforage\";\nimport { isProxy, isReactive, isRef, toRaw } from \"vue\";\nimport { createStore } from \"vuex\";\nimport VuexPersistence from \"vuex-persist\";\nimport Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Threads from \"./threads\";\n\nlet isThrottleMessage = false;\nlet isThrottleThreadMessage = false;\nlet messageBuffer = [];\nlet threadMessageBuffer = [];\nconst vuexPersist = new VuexPersistence({\n  key: \"chatall-app\",\n  storage: localForage,\n  asyncStorage: true,\n  reducer: (state) => {\n    /* eslint-disable no-unused-vars */\n    const { updateCounter, selectedResponses, ...persistedState } = state;\n    /* eslint-enable no-unused-vars */\n    return deepToRaw(persistedState);\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    chatGlm: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      token: \"\",\n      ttl: 0,\n    },\n    claudeAi: {\n      org: \"\",\n    },\n    poe: {\n      formkey: \"\",\n    },\n    falcon: {\n      temperature: 0.9,\n      maxNewTokens: 256,\n      topP: 0.9,\n      repetitionPenalty: 1.2,\n    },\n    phind: {\n      model: \"Phind Model\",\n    },\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    prompts: [],\n    actions: [\n      {\n        name: \"Summarize 1\",\n        prefix:\n          \"Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\\nDo not include the response' value column in your table.\\nSimplify the data and identify the differences.\\nEach response is delimited by the `resp` tag.\\nInside every response, the bot's name is delimited by the `name` tag, and the bot's response is delimited by the `value` tag.\",\n        template:\n          \"<resp>\\n  <name>{botName}</name>\\n  <value>{botResponse}</value>\\n</resp>\",\n        suffix: \"Give me the best response.\",\n        index: 0,\n      },\n    ],\n    selectedResponses: [],\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    async setBotSelected(state, { botClassname, selected }) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          bot.selected = selected;\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    async setFavBotOrder(state, newOrder) {\n      const currentChat = await Chats.getCurrentChat();\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n      Chats.table.update(currentChat.index, { favBots: currentChat.favBots });\n    },\n    async addFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      const favBots = currentChat.favBots;\n      currentChat.favBots.push({ classname: botClassname, selected: true });\n      Chats.table.update(currentChat.index, {\n        favBots,\n      });\n    },\n    async removeFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          currentChat.favBots.splice(i, 1);\n\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setChatGLM(state, token) {\n      state.chatGlm = { ...state.chatGlm, ...token };\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setPoe(state, values) {\n      state.poe = { ...state.poe, ...values };\n    },\n    setPhind(state, values) {\n      state.phind = { ...state.phind, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      Chats.table.update(state.currentChatIndex, {\n        latestPromptIndex: promptIndex,\n      });\n    },\n    setLatestThreadPromptIndex(state, { promptIndex, messageIndex }) {\n      Chats.table.update(state.currentChatIndex, {\n        latestThreadPromptIndex: promptIndex,\n      });\n      Messages.table.update(messageIndex, {\n        hasThread: true,\n      });\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    async updateMessage(state) {\n      for (const update of messageBuffer) {\n        const { index, message } = update;\n        await Messages.table.update(index, message);\n      }\n      state.updateCounter += 1;\n      messageBuffer = [];\n      isThrottleMessage = false;\n    },\n    async updateThreadMessage(state) {\n      for (const update of threadMessageBuffer) {\n        const { index, message } = update;\n        await Threads.table.update(index, message);\n      }\n      state.updateCounter += 1;\n      threadMessageBuffer = [];\n      isThrottleThreadMessage = false;\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      Chats.table.update(state.currentChatIndex, {\n        [`contexts.${botClassname}`]: context,\n      });\n    },\n    clearMessages(state) {\n      Chats.table.where(\"index\").equals(state.currentChatIndex).modify({\n        contexts: {},\n      });\n      Messages.table.where(\"chatIndex\").equals(state.currentChatIndex).delete();\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n      Chats.table.update(index, { selectedTime: new Date().getTime() });\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    async editChatTitle(state, { index, payload }) {\n      const currentChat = await Chats.table.get(index);\n      if (currentChat) {\n        if (\n          payload.isEditedByUser ||\n          (!currentChat.isTitleUserEdited && !payload.isEditedByUser)\n        ) {\n          Chats.update(index, {\n            ...payload,\n            isTitleUserEdited: payload.isEditedByUser\n              ? true\n              : currentChat.isTitleUserEdited,\n          });\n        }\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    async deleteChats(state) {\n      const currentChat = await Chats.getCurrentChat();\n      await Chats.table.clear();\n      await Messages.table.clear();\n      await Threads.table.clear();\n      state.currentChatIndex = await Chats.add({\n        favBots: currentChat ? currentChat.favBots : [],\n      });\n      Chats.table.update(state.currentChatIndex, {\n        selectedTime: new Date().getTime(),\n      });\n    },\n    addPrompt(state, values) {\n      const addPrompt = { ...values };\n      addPrompt.index = state.prompts.push(addPrompt) - 1;\n    },\n    editPrompt(state, values) {\n      const { index } = values;\n      state.prompts[index] = { ...state.prompts[index], ...values };\n    },\n    deletePrompt(state, values) {\n      state.prompts[values.index].hide = true;\n    },\n    addAction(state, values) {\n      const addAction = { ...values };\n      addAction.index = state.actions.push(addAction) - 1;\n    },\n    editAction(state, values) {\n      const { index } = values;\n      state.actions[index] = { ...state.actions[index], ...values };\n    },\n    deleteAction(state, values) {\n      state.actions[values.index].hide = true;\n    },\n    addSelectedResponses(state, value) {\n      value.selectedIndex = state.selectedResponses.push(value) - 1;\n    },\n    deleteSelectedResponses(state, value) {\n      const index = state.selectedResponses.findIndex(\n        (r) => r.selectedIndex === value,\n      );\n      state.selectedResponses.splice(index, 1);\n    },\n    deleteAllSelectedResponses(state) {\n      state.selectedResponses = [];\n    },\n    migrateSettingsPrompts(state) {\n      if (localStorage.getItem(\"isMigratedSettingsPrompts\") === \"true\") {\n        return;\n      }\n      const app = JSON.parse(localStorage.getItem(\"chatall-app\"));\n      const promptsData = JSON.parse(localStorage.getItem(\"chatall-prompts\"));\n      for (const key in app) {\n        state[key] = app[key];\n      }\n      state.prompts = promptsData ? promptsData.prompts : [];\n      localStorage.setItem(\"isMigratedSettingsPrompts\", true);\n    },\n  },\n  actions: {\n    async sendPrompt({ commit, dispatch }, { prompt, bots, promptIndex }) {\n      isThrottleMessage = false;\n      const currentChat = await Chats.getCurrentChat();\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n        };\n        // add message\n        promptIndex = await Messages.add(currentChat.index, promptMessage);\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const msgs = [];\n      for (const bot of bots) {\n        const msg = {\n          index: uuidv4(),\n          promptIndex: promptIndex,\n          chatIndex: currentChat.index,\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          className: bot.getClassname(),\n          createdTime: new Date().getTime(),\n        };\n        await Messages.table.add(msg);\n        msgs.push(msg);\n      }\n      for (let i = 0; i < bots.length; i++) {\n        const bot = bots[i];\n        const message = msgs[i];\n        bot.sendPrompt(\n          prompt,\n          (index, values) =>\n            dispatch(\"updateMessage\", { index, message: values }),\n          message.index,\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          message.className,\n          prompt.length,\n        );\n      }\n    },\n    async sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, messageIndex, promptIndex },\n    ) {\n      isThrottleThreadMessage = false;\n\n      if (!promptIndex) {\n        // not resend\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        promptIndex = await Threads.add(\n          state.currentChatIndex,\n          messageIndex,\n          threadPromptMessage,\n        );\n      }\n      commit(\"setLatestThreadPromptIndex\", { promptIndex, messageIndex }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n      threadResponseMessage.index = await Threads.add(\n        state.currentChatIndex,\n        messageIndex,\n        threadResponseMessage,\n      );\n\n      bot.sendPrompt(\n        prompt,\n        (index, values) =>\n          dispatch(\"updateThreadMessage\", { index, message: values }),\n        threadResponseMessage.index,\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    async updateMessage({ commit }, { index, message: values }) {\n      messageBuffer.push({ index, message: values });\n      if (!isThrottleMessage) {\n        isThrottleMessage = true;\n        setTimeout(() => {\n          commit(\"updateMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const chat = await Messages.table.get(index);\n        const message = { ...chat, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    async updateThreadMessage({ commit }, { index, message: values }) {\n      threadMessageBuffer.push({ index, message: values });\n      if (!isThrottleThreadMessage) {\n        isThrottleThreadMessage = true;\n        setTimeout(() => {\n          commit(\"updateThreadMessage\");\n          commit(\"incrementUpdateCounter\");\n        }, 200); // save every 0.2 seconds\n      }\n      if (values.done) {\n        const thread = await Threads.table.get(index);\n        let message = { ...thread, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    addSelectedResponses({ commit, state }, value) {\n      commit(\"addSelectedResponses\", value);\n      return state.selectedResponses.length - 1;\n    },\n  },\n  getters: {\n    currentChat: async (state) => {\n      const currentChat = await Chats.table.get(state.currentChatIndex);\n      return currentChat;\n    },\n    // get current chat prompt\n    getCurrentChatPrompt: (state, getters) => {\n      const messages = getters.currentChat.messages;\n      return messages.filter((message) => message?.type === \"prompt\");\n    },\n  },\n  modules: {},\n  plugins: [vuexPersist.plugin],\n});\n\n// call toRaw to nested array before storing with localForage\nfunction deepToRaw(sourceObj) {\n  const objectIterator = (input) => {\n    if (Array.isArray(input)) {\n      const result = [];\n      for (const item of input) {\n        result.push(objectIterator(item));\n      }\n      return result;\n    }\n    if (isRef(input) || isReactive(input) || isProxy(input)) {\n      return objectIterator(toRaw(input));\n    }\n    if (input && typeof input === \"object\") {\n      return Object.keys(input).reduce((acc, key) => {\n        acc[key] = objectIterator(input[key]);\n        return acc;\n      }, {});\n    }\n    return input;\n  };\n\n  return objectIterator(sourceObj);\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Messages {\n  static get table() {\n    return db.table(\"messages\");\n  }\n\n  static async add(chatIndex, payload) {\n    const newKey = await Messages.table.add({\n      chatIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Messages.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n\n  static async getMessages(index) {\n    return await Messages.table\n      .where({ chatIndex: index })\n      .sortBy(\"createdTime\");\n  }\n\n  static async getMessagesCount(index) {\n    return await Messages.table.where({ chatIndex: index }).count();\n  }\n}\n\nexport default Messages;\n","import Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst migrateChatsMessagesThreads = async () => {\n  const chatIndexMap = {};\n  let messageIndexMap = {};\n  let threadIndexMap = {};\n  const chatsMigrateData = [];\n  const messagesMigrateData = [];\n  const threadsMigrateData = [];\n  try {\n    if (localStorage.getItem(\"isMigratedChatsMessagesThreads\") === \"true\") {\n      if (localStorage.getItem(\"isMigratedHasThread\") !== \"true\") {\n        migrateHasThread();\n      }\n      return;\n    }\n    const data = JSON.parse(localStorage.getItem(\"chatall-messages\"));\n    if (data === null) {\n      localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n      return;\n    }\n    const chats = data.chats;\n    for (let i = 0; i < chats.length; i++) {\n      const chat = chats[i];\n      if (!chat) {\n        continue;\n      }\n      chat.index = getIndex(chatIndexMap, chat.index);\n      chat.index = getAndGenerateUuidIfNotExist(chatIndexMap, chat.index);\n      chat.modifiedTime = chat.createdTime;\n      let createdTime = chat.createdTime || 0;\n      for (let j = 0; j < chat.messages.length; j++) {\n        const message = chat.messages[j];\n        if (!message) {\n          continue;\n        }\n        message.index = getIndex(messageIndexMap, message.index);\n        message.index = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          message.index,\n        );\n        message.chatIndex = chat.index;\n        message.createdTime = createdTime + j;\n        if (chat.threads && chat.threads.length) {\n          message.hasThread = true;\n        }\n        messagesMigrateData.push(message);\n      }\n      if (!chat.threads) {\n        // skip for old version do not have threads array\n        continue;\n      }\n      for (let q = 0; q < chat.threads.length; q++) {\n        const thread = chat.threads[q];\n        if (!thread) {\n          continue;\n        }\n        const messageIndex = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          thread.responseIndex,\n        );\n        let createdTime = chat.createdTime || 0;\n        for (let p = 0; p < thread.messages.length; p++) {\n          const threadMessage = thread.messages[p];\n          if (!threadMessage) {\n            continue;\n          }\n          threadMessage.index = getIndex(threadIndexMap, threadMessage.index);\n          threadMessage.index = getAndGenerateUuidIfNotExist(\n            threadIndexMap,\n            threadMessage.index,\n          );\n          threadMessage.messageIndex = messageIndex;\n          threadMessage.chatIndex = chat.index;\n          threadMessage.createdTime = createdTime + p;\n          if (threadMessage.type === \"response\") {\n            threadMessage.promptIndex = getAndGenerateUuidIfNotExist(\n              threadIndexMap,\n              threadMessage.promptIndex,\n            );\n          }\n          threadsMigrateData.push(threadMessage);\n        }\n      }\n      messageIndexMap = {};\n      threadIndexMap = {};\n      delete chat.messages;\n      chatsMigrateData.push(chat);\n    }\n    console.log(chatsMigrateData);\n    console.log(messagesMigrateData);\n    console.log(threadsMigrateData);\n    try {\n      await Chats.table.bulkAdd(chatsMigrateData);\n    } catch (error) {\n      console.error(\"Chats Migration error:\", error);\n    }\n    try {\n      await Messages.table.bulkAdd(messagesMigrateData);\n    } catch (error) {\n      console.error(\"Messages Migration error:\", error);\n    }\n    try {\n      await Threads.table.bulkAdd(threadsMigrateData);\n    } catch (error) {\n      console.error(\"Threads Migration error:\", error);\n    }\n    localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n    localStorage.setItem(\"isMigratedHasThread\", true);\n    console.log(\"Migration done\");\n  } catch (error) {\n    console.error(\"Migration error:\", error);\n  }\n};\n\nfunction getAndGenerateUuidIfNotExist(map, key) {\n  if (map[key] === undefined) {\n    map[key] = uuidv4();\n  }\n  return map[key];\n}\n\nfunction getIndex(map, key) {\n  if (map[key] !== undefined) {\n    // duplicate key not allowed\n    return uuidv4();\n  }\n  return key;\n}\n\nasync function migrateHasThread() {\n  // update Message hasThread property to `true` if messageIndex existed in Thread\n  const messageIndexes = await Threads.table\n    .orderBy(\"messageIndex\")\n    .distinct()\n    .uniqueKeys();\n  for (const index of messageIndexes) {\n    try {\n      await Messages.table.update(index, { hasThread: true });\n    } catch (error) {\n      console.error(\"migrateHasThread error:\", error);\n    }\n  }\n  localStorage.setItem(\"isMigratedHasThread\", true);\n}\n\nexport { migrateChatsMessagesThreads };\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Threads {\n  static get table() {\n    return db.table(\"threads\");\n  }\n\n  static async add(chatIndex, messageIndex, payload) {\n    const newKey = await Threads.table.add({\n      chatIndex,\n      messageIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Threads.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Threads;\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 15,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_PRE_NEXT = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"up/down\"],\n  offset: {\n    top: 15,\n    left: 100,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_MANAGEMENT = {\n  elementId: \"prompt-btn\",\n  key: [modifier, \"p\"],\n  offset: {\n    top: -65,\n    left: 5,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_PROMPT_PRE_NEXT,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"props.currentChatIndex === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    class=\"pa-3 pr-0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\" class=\"mr-4\"> mdi-message-outline </v-icon>\n    </template>\n    <template #append v-if=\"props.currentChatIndex === props.chat.index\">\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding: 6px\"\n    class=\"pl-3 pr-0\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nconst emit = defineEmits([\n  \"hideChat\",\n  \"editChatTitle\",\n  \"selectChat\",\n  \"focusTextarea\",\n]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n  currentChatIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  emit(\"selectChat\", props.chat.index);\n}\n\nasync function confirmHideChat() {\n  emit(\"hideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  emit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__append {\n  margin-left: 0 !important;\n}\n\n:deep() .v-input__prepend {\n  margin-right: 0.25rem !important;\n}\n\n:deep() .v-field__input {\n  padding-left: 12px;\n  padding-right: 0;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() div.v-list-item__prepend {\n  display: block;\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=d78952d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d78952d6\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          class=\"bg-primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddChat\"\n        @shortkey=\"onAddChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in drawerItems\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :key=\"chat.index\"\n        :chat=\"chat\"\n        :current-chat-index=\"store.state.currentChatIndex\"\n        @hide-chat=\"hideChat\"\n        @select-chat=\"selectChat\"\n        @edit-chat-title=\"editChatTitle\"\n        @focus-textarea=\"focusTextarea\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick, onUpdated, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst drawerItems = useObservable(\n  liveQuery(() => Chats.table.orderBy(\"modifiedTime\").reverse().toArray()),\n);\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction selectChat(index) {\n  store.commit(\"selectChat\", index);\n  focusTextarea();\n}\n\nasync function onAddChat() {\n  store.commit(\"selectChat\", await Chats.add());\n  focusTextarea();\n}\n\nasync function hideChat() {\n  const confirm = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (confirm) {\n    await Chats.update(store.state.currentChatIndex, { hide: true });\n    selectLatestVisibleChat();\n  }\n}\n\nasync function editChatTitle(payload) {\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload,\n  });\n}\n\nasync function selectLatestVisibleChat() {\n  const latestChat = await Chats.table\n    .orderBy(\"modifiedTime\")\n    .reverse()\n    .filter((chat) => !chat.hide)\n    .first();\n  if (latestChat) {\n    store.commit(\"selectChat\", latestChat.index);\n    focusTextarea();\n  } else {\n    // if there is no visible chat, create a new chat\n    onAddChat();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem !important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=55649f6e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-55649f6e\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ message ? message.content : \"\" }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4ce9f836&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ce9f836\"]])\n\nexport default __exports__","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n\n    if (available) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        available = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        available = false;\n      }\n    }\n\n    return available;\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"machine_affinity\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3precise\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"adsredirecturl\",\n    \"agicert\",\n    \"iypapyrus\",\n    \"eredirecturl\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"machine_affinity\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"galileo\",\n    \"saharagenconv5\",\n    \"fluxhint\",\n    \"glfluxv13\",\n    \"adsredirecturl\",\n    \"agicert\",\n    \"iypapyrus\",\n    \"eredirecturl\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"machine_affinity\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3imaginative\",\n    \"adsredirecturl\",\n    \"agicert\",\n    \"iypapyrus\",\n    \"eredirecturl\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.webp\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-33b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-33b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT432kPoeBot extends PoeBot {\n  static _className = \"ChatGPT432kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"gpt-4-32k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"vizcacha\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Llama2HC70bBot extends HuggingChatBot {\n  static _className = \"Llama2HC70bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-huggingchat-logo.png\"; // Place it in public/bots/\n  static _model = \"meta-llama/Llama-2-70b-chat-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama213bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama213bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-13b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama27bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama27bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-7b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama270bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama270bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-70b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM6bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM6bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.svg\"; // Place it in public/bots/\n  static _model = \"chatglm2-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class CodeLlamaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CodeLlamaBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama-34b-instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna7bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna7bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-7b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna13bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm13bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm70bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm70bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-70b\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class FalconHC180bBot extends HuggingChatBot {\n  static _className = \"FalconHC180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"tiiuae/falcon-180B-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class CodeLlamaHCBot extends HuggingChatBot {\n  static _className = \"CodeLlamaHCBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama/CodeLlama-34b-Instruct-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfan4Bot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfan4Bot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-4-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-4\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport ChatGPT432kPoeBot from \"./poe/ChatGPT432kPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WenxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PhindBot from \"./PhindBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport OpenAssistantBot from \"./OpenAssistantBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\nimport Llama2HC70bBot from \"./huggingface/Llama2HC70bBot\";\nimport Llama213bBot from \"./lmsys/Llama213bBot\";\nimport Llama27bBot from \"./lmsys/Llama27bBot\";\nimport Llama270bBot from \"./lmsys/Llama270bBot\";\nimport Falcon180bBot from \"./huggingface/Falcon180bBot\";\nimport ChatGLM6bBot from \"./lmsys/ChatGLM6bBot\";\nimport CodeLlamaBot from \"./lmsys/CodeLlamaBot\";\nimport Vicuna7bBot from \"./lmsys/Vicuna7bBot\";\nimport Vicuna13bBot from \"./lmsys/Vicuna13bBot\";\nimport Wizardlm13bBot from \"./lmsys/Wizardlm13bBot\";\nimport Wizardlm70bBot from \"./lmsys/Wizardlm70bBot\";\nimport FalconHC180bBot from \"./huggingface/FalconHC180bBot\";\nimport CodeLlamaHCBot from \"./huggingface/CodeLlamaHCBot\";\nimport WenxinQianfan4Bot from \"./baidu/WenxinQianfan4Bot\";\n\nconst all = [\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  SageBot.getInstance(), // Assistant@Poe\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGLM6bBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  CodeLlamaHCBot.getInstance(),\n  CodeLlamaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WenxinQianfanTurboBot.getInstance(),\n  WenxinQianfan4Bot.getInstance(),\n  Falcon180bBot.getInstance(),\n  FalconHC180bBot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  ChatGPT432kPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  Llama27bBot.getInstance(),\n  Llama213bBot.getInstance(),\n  Llama270bBot.getInstance(),\n  Llama2HC70bBot.getInstance(),\n  MOSSBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  OpenAssistantBot.getInstance(),\n  PhindBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  Vicuna7bBot.getInstance(),\n  Vicuna13bBot.getInstance(),\n  VicunaBot.getInstance(),\n  Wizardlm13bBot.getInstance(),\n  Wizardlm70bBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [\"ClaudeBot\", \"AlpacaBot\", \"HuggingChatBot\", \"Falcon180bBot\"];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    return all.find((bot) => bot.getClassname() === className);\n  },\n};\n\ndisabled.forEach((className) => {\n  const bot = bots.getBotByClassName(className);\n  bot?.disable();\n});\n\nexport const botTags = {\n  free: [\n    bots.getBotByClassName(\"BardBot\"),\n    bots.getBotByClassName(\"BingChatBalancedBot\"),\n    bots.getBotByClassName(\"BingChatCreativeBot\"),\n    bots.getBotByClassName(\"BingChatPreciseBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGPT35Bot\"),\n    bots.getBotByClassName(\"ChatGPT35PoeBot\"),\n    bots.getBotByClassName(\"ClaudeBot\"),\n    bots.getBotByClassName(\"ClaudeInstantPoeBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"YouChatBot\"),\n    bots.getBotByClassName(\"GradioAppBot\"),\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"CharacterAIBot\"),\n    bots.getBotByClassName(\"ClaudeAIBot\"),\n    bots.getBotByClassName(\"PhindBot\"),\n    bots.getBotByClassName(\"PiBot\"),\n    bots.getBotByClassName(\"SageBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n  ],\n  paid: [\n    bots.getBotByClassName(\"ChatGPT4Bot\"),\n    bots.getBotByClassName(\"ChatGPT4MobileBot\"),\n    bots.getBotByClassName(\"ChatGPT4PoeBot\"),\n    bots.getBotByClassName(\"ChatGPTBrowsingBot\"),\n    bots.getBotByClassName(\"ClaudeInstant100kPoeBot\"),\n    bots.getBotByClassName(\"ClaudePlusPoeBot\"),\n    bots.getBotByClassName(\"ChatGPT432kPoeBot\"),\n  ],\n  openSource: [\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n  ],\n  api: [\n    bots.getBotByClassName(\"AzureOpenAIAPIBot\"),\n    bots.getBotByClassName(\"OpenAIAPI35Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI3516KBot\"),\n    bots.getBotByClassName(\"OpenAIAPI4Bot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n  ],\n  madeInChina: [\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n  ],\n};\nexport default bots;\n","<template>\n  <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"message.type === 'prompt'\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <chat-response\n      v-else\n      :chat=\"chat\"\n      :columns=\"1\"\n      :messages=\"message\"\n      :messagePromptIndex=\"messagePromptIndex\"\n      :isThread=\"true\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponse from \"@/components/Messages/ChatResponse.vue\";\nimport Threads from \"@/store/threads\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messageIndex: {\n    type: String,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst currentChatMessages = useObservable(\n  liveQuery(async () => {\n    const keys = await Threads.table\n      .where(\"messageIndex\")\n      .equals(props.messageIndex)\n      .primaryKeys();\n    console.log(\"thread key count: \", keys.length);\n    const messages = await Threads.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n\n    currentChatMessages.value = groupedMessage;\n    console.log(\"groupedMessage threads: \", groupedMessage);\n    return groupedMessage;\n  }),\n);\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted && isSelectedResponsesEmpty ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n      isSelectedResponsesEmpty ? 'cursor-auto' : 'cursor-pointer',\n      isSelected ? 'highlight-border' : '',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n    :ripple=\"!isSelectedResponsesEmpty\"\n    @click=\"!isSelectedResponsesEmpty && select($event)\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n        v-show=\"isSelectedResponsesEmpty\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        v-show=\"isSelectedResponsesEmpty\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        v-show=\"isSelectedResponsesEmpty\"\n        icon\n        @click=\"hide\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        :class=\"getSelectButtonClass\"\n        @click=\"select($event)\"\n      >\n        <v-icon>{{\n          isSelected ? \"mdi-check-circle\" : \"mdi-check-circle-outline\"\n        }}</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"messages && messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!isThread && messages.length && messages[0].hasThread\">\n        <chat-thread\n          :chat=\"chat\"\n          :messageIndex=\"messages[0].index\"\n          :messagePromptIndex=\"messages[0].promptIndex\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!isThread && message && message.hasThread\">\n          <chat-thread\n            :chat=\"chat\"\n            :messageIndex=\"message.index\"\n            :messagePromptIndex=\"messages[0].promptIndex\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageLeftButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageLeft\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageRightButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageRight\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowReplyButtonInDOM\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { Theme } from \"@/theme\";\nimport { computed, nextTick, onMounted, ref, toRaw, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatThread from \"./ChatThread.vue\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst matomo = useMatomo();\nconst store = useStore();\nconst messages = computed(() => props.messages);\nconst chat = computed(() => props.chat);\nwatch(\n  messages,\n  async () => {\n    carouselModel.value = maxPage.value;\n  },\n  { deep: true },\n);\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst pageLeftButton = ref();\nconst pageRightButton = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst isSelected = ref(false);\nconst isSelectedList = ref([]);\nconst isSelectedResponsesEmpty = ref(\n  store.state.selectedResponses.length === 0,\n);\nconst botInstance = computed(() => {\n  return messages.value && messages.value.length\n    ? bots.getBotByClassName(messages.value[0].className)\n    : undefined;\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() =>\n  props.messages.length ? props.messages[maxPage.value].highlight : false,\n); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messagesRef array is in correct order\n  () =>\n    props.messages.length &&\n    props.chat?.latestPromptIndex === props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messagesRef array is in correct order\n    // const responseIndex = props.chat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex = messages.value?.length\n      ? messages.value[0].promptIndex\n      : undefined; // using responseIndex to get response from messagesRef, and in the repsonse we can retrieve promptIndex\n    return props.chat?.latestThreadPromptIndex === threadPromptIndex;\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected.value && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isShowReplyButtonInDOM = computed(() => {\n  if (props.isThread) {\n    return false;\n  } else {\n    return !(!isShowResendButton.value && !isShowReplyButton.value);\n  }\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.hasThread),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      props.chat &&\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      props.messages[0].promptIndex && // if current threads is a response to latest prompt\n      props.chat.latestPromptIndex &&\n      props.chat.latestPromptIndex === props.messagePromptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\nconst getSelectButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread && isSelectedResponsesEmpty.value,\n  \"hide-thread-btn\": props.isThread && isSelectedResponsesEmpty.value,\n}));\nconst messageBotIsSelected = computed(() => {\n  if (!messages.value.length) {\n    return false;\n  }\n  var favBot = chat.value?.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n});\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    messageIndex: messages.value[messages.value.length - 1].index, // always send prompt in thread to last page\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nwatch(\n  () => store.state.selectedResponses.length,\n  updateIsSelectedResponsesEmpty,\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    Threads.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  } else {\n    Messages.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[maxPage.value].className,\n    props.messages[maxPage.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      Threads.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    } else {\n      Messages.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nasync function resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage = await Threads.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        messageIndex: messages.value[maxPage.value].messageIndex, // always send prompt in thread to last page\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage = await Messages.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n\nlet selectedIndex = undefined;\nasync function select(event) {\n  event.stopPropagation();\n  if (\n    pageLeftButton.value?.$el.contains(event.target) ||\n    pageRightButton.value?.$el.contains(event.target)\n  ) {\n    // return when click on page left, right button\n    return;\n  }\n\n  if (isSelected.value) {\n    store.commit(\"deleteSelectedResponses\", selectedIndex);\n    isSelected.value = false;\n    const index = isSelectedList.value.indexOf(carouselModel.value);\n    isSelectedList.value.splice(index, 1);\n  } else {\n    selectedIndex = await store.dispatch(\"addSelectedResponses\", {\n      ...toRaw(props.messages[carouselModel.value]),\n    });\n    isSelected.value = true;\n    isSelectedList.value.push(carouselModel.value);\n  }\n}\n\nfunction updateIsSelectedResponsesEmpty() {\n  isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  if (isSelectedResponsesEmpty.value) {\n    isSelected.value = false;\n    isSelectedList.value = [];\n  }\n}\n\nfunction pageLeft() {\n  carouselModel.value = Math.max(carouselModel.value - 1, 0);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n\nfunction pageRight() {\n  carouselModel.value = Math.min(carouselModel.value + 1, maxPage.value);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn,\n.hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n\n.response:hover .hide-btn,\n.response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert {\n  filter: invert(100%);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=4a895324&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a895324\"]])\n\nexport default __exports__","<template>\n  <v-container v-if=\"loading\" class=\"ma-0 position-fixed\" style=\"z-index: 1\">\n    <v-label class=\"bg-background\" style=\"opacity: 1\">{{\n      $t(\"chat.loading\")\n    }}</v-label>\n  </v-container>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n        <chat-prompt\n          v-if=\"message.type === 'prompt'\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <chat-response\n          v-else\n          :chat=\"chat\"\n          :columns=\"columns\"\n          :messages=\"message\"\n        ></chat-response>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Messages from \"@/store/messages\";\nimport { liveQuery } from \"dexie\";\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chat: {\n    type: Object,\n  },\n});\n\nconst autoScroll = ref(true);\nconst loading = ref(false);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst currentChatMessages = ref([]);\nlet createChatMessageLiveQuery = (index) => {\n  return liveQuery(async () => {\n    const keys = await Messages.table\n      .where(\"chatIndex\")\n      .equals(index)\n      .primaryKeys();\n    const messages = await Messages.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          // group responses with same bot for carousel\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n    currentChatMessages.value = groupedMessage;\n  });\n};\n\nconst scrollToBottom = ({ immediately = false }) => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: immediately ? \"instant\" : \"smooth\",\n  });\n};\n\nconst autoScrollToBottom = () => {\n  if (autoScroll.value) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nconst currentChatIndex = computed(() => store.state.currentChatIndex);\nlet currentMessageSub;\nlet scrollToBottomFirst;\nwatch(\n  currentChatIndex,\n  (newChat, oldChat) => {\n    if (newChat !== oldChat) {\n      loading.value = true;\n      scrollToBottomFirst = true;\n      if (currentMessageSub) {\n        currentMessageSub.unsubscribe();\n      }\n      currentMessageSub = createChatMessageLiveQuery(\n        store.state.currentChatIndex,\n      ).subscribe(() => {\n        loading.value = false;\n        if (scrollToBottomFirst) {\n          scrollToBottomFirst = false;\n          nextTick(() => scrollToBottom({ immediately: true }));\n        }\n      });\n    }\n  },\n  { immediate: true },\n);\n\nwatch(() => store.state.updateCounter, autoScrollToBottom);\n\nconst onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll.value =\n    scrollPosition >= document.documentElement.scrollHeight - 40;\n};\n\nonMounted(async () => {\n  await Messages.table\n    .filter((message) => message.done !== true)\n    .modify({ done: true });\n  window.addEventListener(\"scroll\", onScroll);\n});\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", onScroll);\n});\n</script>\n\n<style scoped>\n.messages {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: 100%;\n  overflow-y: auto;\n  gap: 16px;\n  padding: 0;\n}\n\n.message-grid {\n  display: grid;\n  grid-gap: 16px;\n  width: 100%;\n  padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=4797e564&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4797e564\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacFile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.pacFile;\n  if (newInputfile.value) {\n    proxySettings.value.pacFile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.pacFile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {\n  PromptTemplate,\n  FewShotPromptTemplate,\n  LengthBasedExampleSelector,\n} from \"langchain/prompts\";\n\nconst prefixPlaceholder = `Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\nDo not include the response' value column in your table.\nSimplify the data and identify the differences.\nEach response is delimited by the \\`resp\\` tag.\nInside every response, the bot's name is delimited by the \\`name\\` tag, and the bot's response is delimited by the \\`value\\` tag.`;\nconst templatePlaceholder = `<resp>\n    <name>{botName}</name>\n    <value>{botResponse}</value>\n</resp>`;\nconst suffixPlaceholder = \"Give me the best response.\";\n\nasync function preview(prefix, exampleTemplate, suffix, data) {\n  const examplePrompt = new PromptTemplate({\n    template: exampleTemplate,\n    inputVariables: [\"botName\", \"botResponse\"],\n  });\n\n  const exampleSelector = await LengthBasedExampleSelector.fromExamples(data, {\n    examplePrompt,\n    maxLength: Number.MAX_VALUE,\n  });\n\n  const dynamicPrompt = new FewShotPromptTemplate({\n    exampleSelector,\n    examplePrompt,\n    prefix: prefix,\n    suffix: suffix,\n    inputVariables: [],\n  });\n  return await dynamicPrompt.format();\n}\n\nexport { prefixPlaceholder, templatePlaceholder, suffixPlaceholder, preview };\n","<template>\n  <v-list>\n    <v-list-item>\n      <v-btn\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.deleteAllChatHistory')\"\n        @click=\"deleteChats\"\n      ></v-btn>\n      <v-btn\n        disabled\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.downloadAllChatHistory')\"\n        @click=\"downloadJson\"\n        style=\"margin-left: 10px\"\n      ></v-btn>\n    </v-list-item>\n    <v-list-item>\n      <v-row>\n        <v-col class=\"align-baseline d-flex\" style=\"font-size: 1.5rem\">\n          <label class=\"pr-3\">{{ $t(\"chat.actions\") }}</label>\n          <v-btn\n            class=\"mt-1\"\n            color=\"primary\"\n            variant=\"outlined\"\n            prepend-icon=\"mdi-plus\"\n            :text=\"$t('chat.addAction')\"\n            @click=\"add\"\n          ></v-btn>\n        </v-col>\n      </v-row>\n    </v-list-item>\n    <v-list-item\n      v-for=\"action in userActions\"\n      density=\"comfortable\"\n      :key=\"action.index\"\n      :value=\"action.index\"\n      :ripple=\"false\"\n    >\n      <div class=\"align-center d-flex\">\n        <v-list-item-title class=\"pr-5\">{{ action.name }}</v-list-item-title>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-pencil-outline\"\n          @click=\"edit(action)\"\n          style=\"background-color: transparent\"\n        ></v-btn>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-delete-outline\"\n          @click=\"deleteAction(action)\"\n          style=\"margin: 0; background-color: transparent\"\n        ></v-btn>\n      </div>\n    </v-list-item>\n  </v-list>\n  <v-dialog\n    persistent\n    width=\"90%\"\n    height=\"90%\"\n    :model-value=\"isOpenAddEditAction\"\n    @update:model-value=\"isOpenAddEditAction = $event\"\n  >\n    <v-card>\n      <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n        <v-text-field\n          required\n          autofocus\n          v-model=\"actionName\"\n          placeholder=\"Summarize\"\n          :label=\"$t('chat.actionName')\"\n          :rules=\"[required]\"\n        ></v-text-field>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"prefix\"\n          :placeholder=\"prefixPlaceholder\"\n          :label=\"$t('chat.prefix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"4\"\n          v-model=\"template\"\n          :placeholder=\"templatePlaceholder\"\n          :label=\"$t('chat.actionTemplate')\"\n          :rules=\"[required]\"\n          @input=\"onInputTemplate\"\n        >\n          <template v-slot:append-inner>\n            <v-btn\n              flat\n              size=\"x-small\"\n              icon=\"mdi-help\"\n              style=\"background-color: inherit\"\n              @click=\"\n                isShowTemplateParametersDialog = !isShowTemplateGuideTooltip\n              \"\n            >\n            </v-btn>\n          </template>\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"suffix\"\n          :placeholder=\"suffixPlaceholder\"\n          :label=\"$t('chat.suffix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <label class=\"pl-4\" style=\"font-size: 1.2rem\">{{\n          $t(\"chat.preview\")\n        }}</label>\n        <chat-prompt\n          class=\"w-100\"\n          :message=\"{ content: previewRef }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-form>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          variant=\"outlined\"\n          color=\"primary\"\n          @click=\"isOpenAddEditAction = false\"\n          >{{ $t(\"modal.cancel\") }}</v-btn\n        >\n        <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditAction\">{{\n          $t(\"modal.done\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n  <v-dialog\n    width=\"auto\"\n    :model-value=\"isShowTemplateParametersDialog\"\n    v-on:after-leave=\"isShowTemplateParametersDialog = false\"\n  >\n    <v-card>\n      <v-md-preview class=\"pa-4\" :text=\"templateParametersInfo\" />\n    </v-card>\n  </v-dialog>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport i18n from \"@/i18n\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport bots from \"@/bots\";\nimport {\n  preview,\n  prefixPlaceholder,\n  templatePlaceholder,\n  suffixPlaceholder,\n} from \"../helpers/template-helper\";\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst formRef = ref(null);\nconst isOpenAddEditAction = ref(false);\nconst actionName = ref(\"\");\nconst prefix = ref(\"\");\nconst template = ref(\"\");\nconst suffix = ref(\"\");\nconst previewRef = ref(\"\");\nconst templateParametersInfo = `\n#### ${i18n.global.t(\"chat.templateParameters\")}:\n| ${i18n.global.t(\"chat.parameter\")}|${i18n.global.t(\"chat.description\")}|\n|-|-|\n|{botName}|${i18n.global.t(\"chat.botNameDesc\")}|\n|{botResponse}|${i18n.global.t(\"chat.botResponseDesc\")}|`;\nconst isShowTemplateParametersDialog = ref(false);\nconst store = useStore();\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\nconst previewSampleData = [\n  {\n    botName: \"Bing Chat (Creative)\",\n    botResponse: \"Hello, this is Bing. How are you today? 😊\",\n  },\n  {\n    botName: \"ChatGPT (GPT-3.5)\",\n    botResponse: \"Hello! How can I assist you today?\",\n  },\n  {\n    botName: \"Bard\",\n    botResponse: \"Hi there! How can I help you today?\",\n  },\n  {\n    botName: \"YouChat\",\n    botResponse: \"Hi there! How can I assist you today?\",\n  },\n];\nlet editIndex = undefined;\nlet isEdit = false;\nconst required = (value) =>\n  value?.trim() ? true : i18n.global.t(\"prompt.required\");\n\n// This function downloads the chat history as a JSON file.\nconst downloadJson = () => {\n  // Get the chat history from localStorage.\n  const chatallMessages = localStorage.getItem(\"chatall-messages\");\n  if (!chatallMessages) {\n    console.error(\"chatall-messages not found in localStorage\");\n    return;\n  }\n\n  const chats = JSON.parse(chatallMessages)?.chats ?? [];\n\n  // Create an array of messages from the chat history.\n  const messages = chats\n    .filter((d) => !d.hide)\n    .map((chat) => ({\n      // The title of the chat.\n      title: chat.title,\n      // The messages in the chat.\n      messages: chat.messages\n        .filter((d) => !d.hide)\n        .reduce((arr, message) => {\n          const t = message.type;\n          const content = message.content;\n          if (t == \"prompt\") {\n            arr.push({\n              prompt: content,\n              responses: [],\n            });\n          } else {\n            const botClassname = message.className;\n            const bot = bots.getBotByClassName(botClassname);\n            const botName = bot.getFullname();\n            arr.at(-1).responses.push({\n              content,\n              botName,\n              botClassname,\n              botModel: message.model,\n              highlight: message.highlight,\n            });\n          }\n          return arr;\n        }, []),\n    }));\n\n  // Create a blob that contains the JSON data.\n  // The space parameter specifies the indentation of nested objects in the string representation.\n  const blob = new Blob([JSON.stringify({ chats: messages }, null, 2)], {\n    // The type of the blob.\n    type: \"application/json\",\n  });\n\n  const url = URL.createObjectURL(blob);\n\n  // Create a file name for the JSON file.\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // months are 0-based in JavaScript\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hour = String(date.getHours()).padStart(2, \"0\");\n  const minute = String(date.getMinutes()).padStart(2, \"0\");\n  const second = String(date.getSeconds()).padStart(2, \"0\");\n  const fileName = `chatall-history-${year}${month}${day}-${hour}${minute}${second}`;\n\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = `${fileName}.json`;\n  document.body.appendChild(a);\n\n  // Click the anchor element to download the file.\n  a.click();\n\n  // Remove the anchor element from the document body.\n  document.body.removeChild(a);\n\n  // Revoke the URL for the blob.\n  URL.revokeObjectURL(url);\n};\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n\nfunction add() {\n  isEdit = false;\n  actionName.value = \"\";\n  prefix.value = prefixPlaceholder;\n  template.value = templatePlaceholder;\n  suffix.value = suffixPlaceholder;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nfunction edit(item) {\n  isEdit = true;\n  actionName.value = item.name;\n  prefix.value = item.prefix;\n  template.value = item.template;\n  suffix.value = item.suffix;\n  editIndex = item.index;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nasync function onInputTemplate() {\n  try {\n    previewRef.value = await preview(\n      prefix.value,\n      template.value,\n      suffix.value,\n      previewSampleData,\n    );\n  } catch (error) {\n    previewRef.value = `Error:\\n${error.message}`;\n  }\n}\n\nasync function addEditAction() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit) {\n      store.commit(\"editAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n        index: editIndex,\n      });\n    } else {\n      store.commit(\"addAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n      });\n    }\n    isOpenAddEditAction.value = false;\n  }\n}\n\nasync function deleteAction(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideAction\"),\n  );\n  if (result) {\n    store.commit(\"deleteAction\", { ...item });\n  }\n}\n</script>\n<style scoped>\n.no-text-transform {\n  text-transform: none !important;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() .v-textarea .v-field {\n  padding: 0;\n}\n</style>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatSetting.vue?vue&type=style&index=0&id=1022d8ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1022d8ae\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport Falcon180bBotSettings from \"@/components/BotSettings/Falcon180bBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PhindBotSettings from \"@/components/BotSettings/PhindBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport OpenAssistantBotSettings from \"./BotSettings/OpenAssistantBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\nimport ChatGLMBotSettings from \"./BotSettings/ChatGLMBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"chatGlm\", component: ChatGLMBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"falcon\", component: Falcon180bBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"openAssistant\", component: OpenAssistantBotSettings },\n  { brand: \"phind\", component: PhindBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=2d9172c2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2d9172c2\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert {\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=5e9ca404&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in shownBots\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n            <template v-slot:append>\n              <v-btn-toggle\n                v-model=\"selectedTags\"\n                divided\n                color=\"primary\"\n                group\n                variant=\"outlined\"\n                rounded=\"xl\"\n                @update:model-value=\"filterBots($event)\"\n              >\n                <v-btn v-for=\"(tag, index) in tags\" :key=\"index\" :value=\"tag\">\n                  {{ $t(`footer.${tag}`) }}\n                </v-btn>\n              </v-btn-toggle>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport { botTags } from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nlet menu = ref(false);\n\nconst props = defineProps([\"favBots\"]);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst tags = Object.keys(botTags);\nconst selectedTags = ref([]);\n\nconst notDisabledBots = bots.all.filter((bot) => !bot.isDisabled());\nconst shownBots = ref(notDisabledBots);\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\nfunction filterBots(selectedTags) {\n  let filteredIn = notDisabledBots;\n\n  // If the toggle is not multi-select, the selectedTags will be a string\n  if (typeof selectedTags === \"string\") {\n    selectedTags = [selectedTags];\n  }\n\n  if (selectedTags?.length) {\n    const tagBots = selectedTags.map((tag) => botTags[tag]);\n    filteredIn = filteredIn.filter((bot) => {\n      return tagBots.every((tagBot) => tagBot.includes(bot));\n    });\n  }\n  shownBots.value = filteredIn;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3;\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=4ea8786e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import en from \"./prompts-en.json\";\nimport zh from \"./prompts-zh.json\";\nimport es from \"./prompts-es.json\";\n\nconst prompts = {\n  en,\n  zh,\n  es,\n  languages: [\n    { name: \"English\", code: \"en\" },\n    { name: \"简体中文\", code: \"zh\" },\n    { name: \"Español\", code: \"es\" },\n  ],\n};\n\nexport default prompts;\n","<template>\n  <div>\n    <v-dialog\n      :model-value=\"props.open\"\n      @update:model-value=\"closeDialog\"\n      @after-leave=\"onDialogCloseTransitionEnded\"\n    >\n      <v-card class=\"justify-center\">\n        <v-card-title>\n          <v-text-field\n            clearable\n            v-model=\"search\"\n            density=\"compact\"\n            append-icon=\"mdi-magnify\"\n            :label=\"$t('find.find')\"\n            single-line\n            hide-details\n            autofocus\n          ></v-text-field>\n          <div class=\"pt-2 d-flex justify-space-between\">\n            <v-btn\n              class=\"mt-1\"\n              prepend-icon=\"mdi-plus\"\n              :text=\"$t('prompt.addPrompt')\"\n              @click=\"add\"\n            ></v-btn>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <v-select\n              color=\"primary\"\n              density=\"compact\"\n              :items=\"prompts.languages\"\n              hide-details\n              item-title=\"name\"\n              item-value=\"code\"\n              :model-value=\"language\"\n              @update:model-value=\"setPromptLanguage($event)\"\n            ></v-select>\n          </div>\n        </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"data\"\n          :search=\"search\"\n          height=\"70vh\"\n          fixed-header\n          hover\n          :no-data-text=\"$t('find.noMatches')\"\n          items-per-page=\"10\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.title }}\n              </td>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.prompt }}\n              </td>\n              <td>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  :icon=\"item.isPin ? 'mdi-star' : 'mdi-star-outline'\"\n                  @click=\"pin(item)\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-pencil\"\n                  @click=\"edit(item)\"\n                  v-if=\"item.index >= 0\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-delete-outline\"\n                  @click=\"deletePrompt(item)\"\n                  v-if=\"item.index >= 0\"\n                ></v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      persistent\n      width=\"50%\"\n      :model-value=\"isOpenAddEditPrompt\"\n      @update:model-value=\"isOpenAddEditPrompt = $event\"\n    >\n      <v-card>\n        <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n          <v-text-field\n            required\n            :placeholder=\"$t('prompt.title')\"\n            v-model=\"title\"\n            :rules=\"requiredRule\"\n          ></v-text-field>\n          <v-textarea\n            required\n            :placeholder=\"$t('prompt.prompt')\"\n            v-model=\"prompt\"\n            :rules=\"requiredRule\"\n          ></v-textarea>\n        </v-form>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            variant=\"outlined\"\n            color=\"primary\"\n            @click=\"isOpenAddEditPrompt = false\"\n            >{{ $t(\"modal.cancel\") }}</v-btn\n          >\n          <!-- color=\"primary\" not working for nested dialog button -->\n          <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditPrompt\">{{\n            $t(\"modal.done\")\n          }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport prompts from \"@/prompts\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"afterLeave\"]);\nconst defaultLanguage = prompts.languages\n  .map((lang) => lang.code)\n  .includes(i18n.global.locale.value)\n  ? i18n.global.locale.value // use user langauge if availble\n  : \"en\"; // else default to 'en'\nconst language = ref(defaultLanguage);\nconst search = ref(\"\");\nconst title = ref(\"\");\nconst prompt = ref(\"\");\nconst isEdit = ref(false);\nconst editIndex = ref(null);\nconst formRef = ref(null);\nconst confirmModal = ref(null);\nconst isOpenAddEditPrompt = ref(false);\nlet selectedPrompt = \"\";\nconst requiredRule = [\n  (value) => (value?.trim() ? true : i18n.global.t(\"prompt.required\")),\n];\n\nconst headers = computed(() => [\n  {\n    key: \"title\",\n    title: i18n.global.t(\"prompt.title\"),\n    width: \"20%\",\n  },\n  { key: \"prompt\", title: i18n.global.t(\"prompt.prompt\"), width: \"70%\" },\n  {\n    key: \"action\",\n    title: i18n.global.t(\"prompt.action\"),\n    width: \"10%\",\n    sortable: false,\n  },\n]);\nconst userPrompts = computed(() => {\n  return store.state.prompts\n    .slice()\n    .filter((p) => !p.hide)\n    .sort((x, y) => {\n      return x.isPin === y.isPin ? 0 : x.isPin ? -1 : 1;\n    });\n});\nconst data = computed(() => {\n  const defaultPrompts = prompts[language.value].map((prompt) => {\n    return { title: prompt.act, prompt: prompt.prompt };\n  });\n\n  return [...userPrompts.value, ...defaultPrompts];\n});\n\nconst closeDialog = (value) => {\n  emit(\"update:open\", value);\n};\n\nfunction pin(row) {\n  if (row.index >= 0) {\n    store.commit(\"editPrompt\", {\n      ...row,\n      isPin: !row.isPin,\n    });\n  } else {\n    store.commit(\"addPrompt\", { ...row, isPin: true });\n  }\n}\n\nfunction usePrompt(row) {\n  selectedPrompt = row.prompt;\n  emit(\"update:open\", false);\n}\n\nasync function addEditPrompt() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit.value) {\n      store.commit(\"editPrompt\", {\n        title: title.value,\n        prompt: prompt.value,\n        index: editIndex.value,\n      });\n    } else {\n      store.commit(\"addPrompt\", { title: title.value, prompt: prompt.value });\n    }\n    isOpenAddEditPrompt.value = false;\n  }\n}\n\nfunction add() {\n  isEdit.value = false;\n  title.value = \"\";\n  prompt.value = \"\";\n  isOpenAddEditPrompt.value = true;\n}\n\nfunction edit(item) {\n  isEdit.value = true;\n  title.value = item.title;\n  prompt.value = item.prompt;\n  editIndex.value = item.index;\n  isOpenAddEditPrompt.value = true;\n}\n\nasync function deletePrompt(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHidePrompt\"),\n  );\n  if (result) {\n    store.commit(\"deletePrompt\", { ...item });\n  }\n}\n\nfunction showFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (parent.querySelector(\".tooltip\")) {\n    return;\n  }\n  for (let i = 0; i < parent.children.length - 1; i++) {\n    const td = parent.children[i];\n    const position = td.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.innerText = td.innerText;\n    td.innerText = \"\";\n    div.classList.add(\"tooltip\");\n    div.style.width = `${position.width}px`;\n    div.addEventListener(\"mouseleave\", hideFullText);\n    td.appendChild(div);\n  }\n}\n\nfunction hideFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (!element.toElement || !parent.contains(element.toElement)) {\n    const toRemove = parent.querySelectorAll(\".tooltip\");\n    for (let i = 0; i < toRemove.length; i++) {\n      toRemove[i].parentElement.innerText = toRemove[i].innerText;\n      toRemove[i].remove();\n    }\n  }\n}\n\nfunction setPromptLanguage(value) {\n  language.value = value;\n}\n\nfunction onDialogCloseTransitionEnded() {\n  emit(\"afterLeave\", selectedPrompt);\n  selectedPrompt = \"\";\n  search.value = \"\";\n}\n</script>\n\n<style scoped>\n:deep() tr {\n  cursor: pointer;\n}\n\n:deep() td:nth-child(1),\ntd:nth-child(2) {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n:deep() table {\n  table-layout: fixed;\n}\n\n:deep() .tooltip {\n  padding-right: 16px;\n  white-space: break-spaces;\n  background-color: transparent;\n}\n</style>\n","import script from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptModal.vue?vue&type=style&index=0&id=43a1d1fe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-43a1d1fe\"]])\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :id=\"SHORTCUT_PROMPT_MANAGEMENT.elementId\"\n            @click=\"isPromptManagementOpen = !isPromptManagementOpen\"\n            color=\"primary\"\n            variant=\"plain\"\n            class=\"h-100 w-100\"\n            style=\"border-radius: 4px; min-width: unset !important\"\n            icon=\"mdi-creation-outline\"\n          ></v-btn>\n        </template>\n      </v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div class=\"bot-logos\" ref=\"favBotLogosRef\" :key=\"rerenderFavBotLogos\">\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <PromptModal\n      v-shortkey=\"SHORTCUT_PROMPT_MANAGEMENT.key\"\n      @shortkey=\"isPromptManagementOpen = !isPromptManagementOpen\"\n      v-model:open=\"isPromptManagementOpen\"\n      @after-leave=\"usePrompt\"\n    ></PromptModal>\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\nimport PromptModal from \"@/components/PromptModal.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\nimport Messages from \"@/store/messages\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\nconst emit = defineEmits([\"updateActiveBots\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\nconst isPromptManagementOpen = ref(false);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  if (!props.chat || !props.chat.favBots) {\n    return [];\n  }\n  const _favBots = [];\n  props.chat.favBots.forEach((favBot) => {\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots\n    .filter((bot) => bot.instance)\n    .sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n  emit(\"updateActiveBots\", activeBots);\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  const keyCode = event.keyCode;\n  if (\n    keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n\n  // up or down\n  const isUpOrDown =\n    keyCode == historyKeyCode.pre || keyCode == historyKeyCode.next;\n\n  const isAuxiliaryKey = event.metaKey || event.ctrlKey;\n\n  // macOS: Cmd + up/down, Windows: Ctrl + up/down\n  if (isAuxiliaryKey && isUpOrDown) {\n    event.preventDefault();\n\n    // get new prompt and set it\n    const newPrompt = getHistoryPrompt(keyCode);\n    prompt.value = newPrompt.content;\n  }\n}\n\nasync function sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const count = await Messages.getMessagesCount(store.state.currentChatIndex);\n  const isFirstPrompt = count === 0;\n  await store.dispatch(\"sendPrompt\", {\n    prompt: prompt.value,\n    bots: toBots,\n  });\n  if (isFirstPrompt) {\n    updateChatTitleWithFirstPrompt();\n  }\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  // reset prompt index\n  promptIndex = 0;\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\n// current prompt index\nlet promptIndex = 0;\n\n// up and down key code\nconst historyKeyCode = { pre: 38, next: 40 };\n\n// Listen to the up and down arrow keys to obtain historical records.\nfunction getHistoryPrompt(keyCode) {\n  const historyPrompts = store.getters.getCurrentChatPrompt;\n\n  if (!historyPrompts || !historyPrompts.length) return false;\n\n  if (keyCode === historyKeyCode.pre) {\n    // get previous prompt\n    promptIndex =\n      (promptIndex - 1 + historyPrompts.length) % historyPrompts.length;\n  } else if (keyCode === historyKeyCode.next) {\n    // get next prompt\n    promptIndex = (promptIndex + 1) % historyPrompts.length;\n  }\n\n  return historyPrompts[promptIndex];\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nasync function updateChatTitleWithFirstPrompt() {\n  // if this is first prompt, update chat title to first 30 characters of user prompt\n  const messages = await Messages.getMessages(store.state.currentChatIndex);\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload: {\n      title: messages[0].content.substring(0, 30),\n    },\n  });\n}\n\nasync function usePrompt(value) {\n  await nextTick();\n  focusPromptTextarea();\n  document.execCommand(\"insertText\", false, value);\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: rgba(var(--v-theme-background), 0.7) !important;\n  height: auto !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: 0.5rem;\n  box-shadow: none !important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n\n:deep() .v-field.v-field--appended {\n  padding-right: 0;\n}\n\n:deep() .v-field__append-inner {\n  padding-top: 0;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=283581ed&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-283581ed\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: 0.2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0 !important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: 0.5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=6015a817&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6015a817\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n  padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=4c4cde2d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c4cde2d\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"position: absolute; top: 0; left: 0; width: 100vw; height: 100vh\"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace(\"meta\", \"cmd\");\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font:\n    11px ui-monospace,\n    SFMono-Regular,\n    SF Mono,\n    Menlo,\n    Consolas,\n    Liberation Mono,\n    monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110, 118, 129, 0.4);\n  border-bottom-color: rgba(110, 118, 129, 0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110, 118, 129, 0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=28fc2763&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-28fc2763\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    height=\"75%\"\n    width=\"80%\"\n    :model-value=\"props.open\"\n    @update:model-value=\"closeDialog\"\n  >\n    <v-card height=\"100%\">\n      <v-card-title>\n        <v-row>\n          <v-col class=\"d-flex align-center\">\n            {{ props.action.name }}\n            <v-btn\n              flat\n              @click=\"isEdit = !isEdit\"\n              :icon=\"isEdit ? 'mdi-eye' : 'mdi-pencil-outline'\"\n            ></v-btn>\n          </v-col>\n          <v-col class=\"d-flex align-center justify-end\">\n            <v-label>{{ previewTextarea.length }}</v-label>\n          </v-col>\n        </v-row>\n      </v-card-title>\n      <v-card-text class=\"pt-0 overflow-auto\">\n        <v-textarea\n          hide-details\n          rows=\"20\"\n          v-show=\"isEdit\"\n          v-model=\"previewTextarea\"\n          @input=\"previewText = previewTextarea\"\n        >\n        </v-textarea>\n        <chat-prompt\n          v-show=\"!isEdit\"\n          :message=\"{ content: previewText }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-card-text>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          class=\"send-prompt-btn\"\n          elevation=\"2\"\n          :disabled=\"\n            previewTextarea.trim() === '' ||\n            selectedBots.length === 0 ||\n            !chatRef\n          \"\n          @click=\"send\"\n        >\n          {{ $t(\"footer.sendPrompt\") }}\n        </v-btn>\n        <div class=\"bot-logos\">\n          <BotLogo\n            v-for=\"(bot, index) in favBots\"\n            :id=\"`fav-bot-${index + 1}`\"\n            :key=\"index\"\n            :bot=\"bot.instance\"\n            :active=\"bot.selected\"\n            :data-id=\"bot.classname\"\n            size=\"36\"\n            @click=\"bot.selected = !bot.selected\"\n          />\n        </div>\n        <v-form class=\"d-flex\">\n          <v-radio-group v-model=\"chatRef\" density=\"compact\" hide-details>\n            <v-radio :label=\"$t('chat.inNewChat')\" value=\"new\"></v-radio>\n            <v-radio\n              :label=\"$t('chat.inCurrentChat')\"\n              value=\"current\"\n            ></v-radio>\n          </v-radio-group>\n        </v-form>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, toRaw, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { preview } from \"../helpers/template-helper\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport BotLogo from \"@/components/Footer/BotLogo.vue\";\nimport _bots from \"@/bots\";\nimport Chats from \"@/store/chats\";\n\nconst store = useStore();\nconst isEdit = ref(false);\nconst previewText = ref(\"\");\nconst previewTextarea = ref(\"\");\nconst chatRef = ref(undefined);\nconst emit = defineEmits([\"update:open\"]);\nconst props = defineProps([\"open\", \"action\", \"responses\", \"activeBots\"]);\nwatch(() => props.open, onChangeOpenProp);\n\nconst selectedResponses = computed(() =>\n  store.state.selectedResponses.map((res) => {\n    return { botName: res.className, botResponse: res.content };\n  }),\n);\nconst favBots = ref([]);\nconst selectedBots = computed(() =>\n  favBots.value.filter((bot) => bot.selected),\n);\n\nfunction onChangeOpenProp() {\n  if (props.open) {\n    updatePreview();\n    updateFavBots();\n  } else {\n    isEdit.value = false;\n  }\n}\n\nasync function updatePreview() {\n  previewTextarea.value = await preview(\n    props.action.prefix,\n    props.action.template,\n    props.action.suffix,\n    selectedResponses.value,\n  );\n  previewText.value = previewTextarea.value;\n}\n\nfunction updateFavBots() {\n  favBots.value = [];\n  for (const key in props.activeBots) {\n    if (props.activeBots[key]) {\n      favBots.value.push({\n        classname: key,\n        selected: false,\n        instance: _bots.getBotByClassName(key),\n      });\n    }\n  }\n}\n\nfunction closeDialog(value) {\n  emit(\"update:open\", value);\n}\n\nasync function send() {\n  let newChatIndex;\n  if (chatRef.value === \"new\") {\n    newChatIndex = await Chats.add();\n    store.commit(\"selectChat\", newChatIndex);\n  }\n  await store\n    .dispatch(\"sendPrompt\", {\n      prompt: previewTextarea.value,\n      bots: selectedBots.value.map((bot) => toRaw(bot).instance),\n    })\n    .then(() => {\n      if (chatRef.value === \"new\") {\n        store.commit(\"editChatTitle\", {\n          index: newChatIndex,\n          payload: {\n            title: previewTextarea.value.substring(0, 30),\n          },\n        });\n      }\n    });\n  closeDialog(false);\n  deselectAllResponses();\n}\n\nfunction deselectAllResponses() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n</script>\n\n<style scoped>\n:deep() .v-textarea textarea {\n    height: 100%;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n.bot-logos {\n  gap: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n</style>\n","import script from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatAction.vue?vue&type=style&index=0&id=66e42126&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66e42126\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\">\n        <v-app-bar class=\"header-content pa-0\">\n          <!-- Start Header  -->\n          <div class=\"header-content\" v-show=\"isSelectedResponsesEmpty\">\n            <v-app-bar-nav-icon\n              :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n              variant=\"text\"\n              @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n            >\n            </v-app-bar-nav-icon>\n            <img\n              :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n              class=\"logo\"\n              src=\"@/assets/logo-banner.png\"\n              alt=\"ChatALL\"\n            />\n          </div>\n          <div\n            class=\"column-icons header-content\"\n            v-show=\"isSelectedResponsesEmpty\"\n          >\n            <img\n              v-for=\"columnCount in 3\"\n              :id=\"`column-${columnCount}`\"\n              :key=\"columnCount\"\n              :src=\"getColumnImage(columnCount)\"\n              @click=\"changeColumns(columnCount)\"\n              @shortkey=\"changeColumns(columnCount)\"\n              v-shortkey=\"[`f${columnCount}`]\"\n              :class=\"{\n                selected: columns === columnCount,\n                'dark-png': store.state.theme === Theme.DARK,\n              }\"\n            />\n          </div>\n          <div\n            class=\"header-content\"\n            style=\"padding-right: 16px\"\n            v-show=\"isSelectedResponsesEmpty\"\n          >\n            <v-icon\n              :id=\"SHORTCUT_FIND.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-magnify\"\n              size=\"x-large\"\n              @click=\"openFind()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n              @shortkey=\"clearMessages\"\n              :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-broom\"\n              size=\"x-large\"\n              @click=\"clearMessages()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SETTINGS.key\"\n              @shortkey=\"openSettingsModal\"\n              :id=\"SHORTCUT_SETTINGS.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-cog\"\n              size=\"x-large\"\n              @click=\"openSettingsModal()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n              @shortkey=\"toggleShortcutGuide\"\n              :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-help\"\n              size=\"x-large\"\n              @click=\"toggleShortcutGuide()\"\n            ></v-icon>\n          </div>\n          <!-- End Header  -->\n          <!-- Start Selected Responses  -->\n          <div\n            class=\"header-content pr-3\"\n            style=\"text-wrap: nowrap\"\n            v-show=\"!isSelectedResponsesEmpty\"\n          >\n            <v-btn icon color=\"primary\" @click=\"deselectAll\">\n              <v-icon>mdi-arrow-left</v-icon>\n            </v-btn>\n            {{\n              $t(\"header.selectedResponsesCount\", {\n                selectedCount: store.state.selectedResponses.length,\n              })\n            }}\n          </div>\n          <div\n            class=\"header-content overflow-auto\"\n            v-show=\"!isSelectedResponsesEmpty\"\n          >\n            <v-btn\n              v-for=\"action in userActions\"\n              color=\"primary\"\n              class=\"no-text-transform\"\n              :text=\"action.name\"\n              :key=\"action.index\"\n              @click=\"callAction(action)\"\n            ></v-btn>\n          </div>\n          <!-- End Selected Responses  -->\n        </v-app-bar>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages :chat=\"currentChat\" :columns=\"columns\"></ChatMessages>\n        <FooterBar\n          ref=\"footerBarRef\"\n          :chat=\"currentChat\"\n          @update-active-bots=\"(bots) => (activeBots = bots)\"\n        ></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n      <ChatAction\n        v-model:open=\"isChatActionOpen\"\n        :action=\"action\"\n        :responses=\"store.state.selectedResponses\"\n        :activeBots=\"activeBots\"\n      ></ChatAction>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, watch } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\nimport Chats from \"@/store/chats\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\nimport ChatAction from \"@/components/ChatAction.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nconst currentChat = useObservable(\n  liveQuery(() => {\n    const chat = Chats.table.orderBy(\"selectedTime\").last();\n    console.log(\"chat changed\");\n    return chat;\n  }),\n  { initialValue: {} },\n);\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst chatDrawerRef = ref();\nconst isSelectedResponsesEmpty = ref(true);\nconst isChatActionOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\nlet action;\nlet activeBots;\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n});\n\nwatch(\n  () => store.state.selectedResponses.length,\n  () => {\n    isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  },\n);\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n\nfunction deselectAll() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n\nfunction callAction(value) {\n  action = value;\n  isChatActionOpen.value = true;\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Arial\", sans-serif;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\nheader {\n  width: 100%;\n  background-color: rgb(var(--v-theme-header));\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  padding: 16px;\n  z-index: 999;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n  opacity: 0.5;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n  background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between;\n}\n\n.vuepress-markdown-body {\n  color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n  padding: 0 !important;\n  background-color: transparent !important;\n}\n.vuepress-markdown-body .arrow {\n  display: inline !important;\n}\n.vuepress-markdown-body .arrow.up,\n.arrow.down,\n.arrow.left,\n.arrow.right {\n  display: inline-block !important;\n}\n.vuepress-markdown-body tr:nth-child(2n) {\n  background-color: rgb(var(--v-theme-table-tr-2n)) !important;\n}\n.vuepress-markdown-body code {\n  color: rgb(var(--v-theme-code-font)) !important;\n  background-color: rgb(var(--v-theme-code-background)) !important;\n}\n.vuepress-markdown-body pre[class*=\"v-md-prism-\"] code,\n.vuepress-markdown-body pre code {\n  color: #fff !important;\n  background-color: initial !important;\n}\n.no-text-transform {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3fb26120&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setAzureOpenaiApi\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"azureApiKey\",\n    title: i18n.global.t(\"azureOpenaiApi.azureOpenAIApiKey\"),\n    description: i18n.global.t(\"settings.secretPrompt\"),\n    placeholder: \"b40...\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureApiInstanceName\",\n    title: i18n.global.t(\"azureOpenaiApi.azureApiInstanceName\"),\n    description: i18n.global.t(\"azureOpenaiApi.azureApiInstanceNamePrompt\"),\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiDeploymentName\",\n    title: i18n.global.t(\"azureOpenaiApi.azureOpenAIApiDeploymentName\"),\n    description: i18n.global.t(\n      \"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\",\n    ),\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiVersion\",\n    title: i18n.global.t(\"azureOpenaiApi.azureOpenAIApiVersion\"),\n    description: i18n.global.t(\"azureOpenaiApi.azureOpenAIApiVersionPrompt\"),\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: i18n.global.t(\"azureOpenaiApi.temperature\"),\n    description: i18n.global.t(\"azureOpenaiApi.temperaturePrompt\"),\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: i18n.global.t(\"azureOpenaiApi.temperature0\"),\n      2: i18n.global.t(\"azureOpenaiApi.temperature2\"),\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: i18n.global.t(\"bot.pastRounds\"),\n    description: i18n.global.t(\"bot.pastRoundsPrompt\"),\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=30da8f74\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6c0f01d1\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHARACTER-AI-TOKENS message from background.js\n    ipcRenderer.on(\"CHARACTER-AI-TOKENS\", (event, token) => {\n      try {\n        const tokenInfo = JSON.parse(token);\n        this.setCharacterAI({ token: tokenInfo.value, ttl: tokenInfo.ttl });\n      } catch (error) {\n        console.error(\"CHARACTER-AI-TOKENS\", error);\n      }\n    });\n  },\n  methods: {\n    ...mapMutations([\"setCharacterAI\"]),\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=38718633\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ChatGLMBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHATGLM-TOKEN message from background.js\n    ipcRenderer.on(\"CHATGLM-TOKENS\", (event, token) => {\n      this.setChatGLM(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setChatGLM\"]),\n  },\n};\n</script>\n","import { render } from \"./ChatGLMBotSettings.vue?vue&type=template&id=5f213291\"\nimport script from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=17188e40\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <template v-for=\"setting in settings\" :key=\"setting.name\">\n      <v-list-item-title v-if=\"setting.title\">\n        <!-- falcon.temperature -->\n        {{ setting.title }}</v-list-item-title\n      >\n      <v-list-item-subtitle v-if=\"setting.description\">\n        <!-- falcon.temperaturePrompt -->\n        {{ setting.description }}</v-list-item-subtitle\n      >\n\n      <v-text-field\n        v-if=\"setting.type === Type.Text\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-text-field>\n      <v-select\n        v-if=\"setting.type === Type.Select\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-select>\n      <v-slider\n        v-else-if=\"setting.type === Type.Slider\"\n        v-model=\"settingState[setting.name] /* falcon.temperature */\"\n        color=\"primary\"\n        :min=\"setting.min\"\n        :max=\"setting.max\"\n        :step=\"setting.step\"\n        :ticks=\"setting.ticks\"\n        :show-ticks=\"\n          /* 'show-ticks' cause lag issue when the possible value to slide is large */\n          setting.ticks ? 'always' : false\n        \"\n        thumb-label\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"settingState[setting.name] /* falcon.temperature */\"\n            :ref=\"\n              (el) => {\n                refs[setting.name] = el;\n              }\n            \"\n            type=\"number\"\n            style=\"width: 100px\"\n            density=\"compact\"\n            hide-details\n            variant=\"outlined\"\n            @update:model-value=\"\n              /* setFalcon({ temperature: validateInput(temperature, $event) }) */\n              store.commit(mutationType, {\n                [setting.name]: validateSliderInput(setting, $event),\n              })\n            \"\n          ></v-text-field>\n        </template>\n      </v-slider>\n    </template>\n  </v-list-item>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Type } from \"./settings.const\";\nconst store = useStore();\nconst settingState = computed(() => store.state[props.brandId]);\nconst refs = ref([]);\nconst props = defineProps({\n  brandId: {\n    type: String,\n    required: true,\n  },\n  settings: {\n    type: Object,\n    required: true,\n  },\n  mutationType: {\n    type: String,\n    required: true,\n  },\n});\n\nonMounted(() => {\n  for (const setting of props.settings) {\n    if (setting.type !== Type.Slider) {\n      continue;\n    }\n    // Set the 'min', 'max' and 'step' attributes for the input type 'number' spin button\n    const inputElement = getInputElement(refs.value[setting.name]);\n    inputElement.min = setting.min;\n    inputElement.max = setting.max;\n    inputElement.step = setting.step;\n  }\n});\n\nfunction validateSliderInput(setting, value) {\n  // validate input via keyboard within setting min and max\n  value = value || 0; // set zero if empty string\n  const input = getInputElement(refs.value[setting.name]);\n  const valuefloat = parseFloat(value);\n  const inputMaxFloat = parseFloat(input.max);\n  const inputMinFloat = parseFloat(input.min);\n  if (valuefloat > inputMaxFloat) {\n    return inputMaxFloat;\n  } else if (valuefloat < inputMinFloat) {\n    return inputMinFloat;\n  } else {\n    return valuefloat;\n  }\n}\n\nfunction getInputElement(ref) {\n  return ref.$el.querySelector(\"input\");\n}\n</script>\n","import script from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setFalcon\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/Falcon180bBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: i18n.global.t(\"falcon.temperature\"),\n    description: i18n.global.t(\"falcon.temperaturePrompt\"),\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"maxNewTokens\",\n    title: i18n.global.t(\"falcon.maxNewTokens\"),\n    description: i18n.global.t(\"falcon.maxNewTokensPrompt\"),\n    min: 0,\n    max: 8192,\n    step: 64,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: i18n.global.t(\"falcon.topP\"),\n    description: i18n.global.t(\"falcon.topPPrompt\"),\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"repetitionPenalty\",\n    title: i18n.global.t(\"falcon.repetitionPenalty\"),\n    description: i18n.global.t(\"falcon.repetitionPenaltyPrompt\"),\n    min: 1,\n    max: 2,\n    step: 0.05,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./Falcon180bBotSettings.vue?vue&type=template&id=4ea77b9f\"\nimport script from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGradio\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"url\",\n    title: i18n.global.t(\"gradio.url\"),\n    description: i18n.global.t(\"gradio.urlPrompt\"),\n    placeholder: i18n.global.t(\"settings.forExample\", {\n      example: \"https://*.hf.space, http://127.0.0.1:7861\",\n    }),\n  },\n  {\n    type: Type.Text,\n    name: \"fnIndex\",\n    title: i18n.global.t(\"gradio.fnIndex\"),\n    description: i18n.global.t(\"gradio.fnIndexPrompt\"),\n    placeholder: \"0\",\n  },\n];\n\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=10028b64\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setOpenaiApi\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: i18n.global.t(\"openaiApi.apiKey\"),\n    description: i18n.global.t(\"settings.secretPrompt\"),\n    placeholder: \"sk-...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: i18n.global.t(\"openaiApi.temperature\"),\n    description: i18n.global.t(\"openaiApi.temperaturePrompt\"),\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: i18n.global.t(\"openaiApi.temperature0\"),\n      2: i18n.global.t(\"openaiApi.temperature2\"),\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: i18n.global.t(\"bot.pastRounds\"),\n    description: i18n.global.t(\"bot.pastRoundsPrompt\"),\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n  {\n    type: Type.Text,\n    name: \"alterUrl\",\n    title: i18n.global.t(\"openaiApi.alterUrl\"),\n    description: i18n.global.t(\"openaiApi.alterUrlPrompt\"),\n    placeholder: \"https://your.proxy.com/v1\",\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=db07b68e\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/OpenAssistantBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAssistantBotSettings.vue?vue&type=template&id=8f4ba222\"\nimport script from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setPhind\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/PhindBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Select,\n    name: \"model\",\n    title: \"Model\",\n    items: [\"Phind Model\", \"GPT-3.5-Turbo\", \"GPT-4\"],\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./PhindBotSettings.vue?vue&type=template&id=f7d51668\"\nimport script from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the POE-FORMKEY message from background.js\n    ipcRenderer.on(\"POE-FORMKEY\", (event, formkey) => {\n      this.setPoe({ formkey });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setPoe\"]),\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=276b8eed\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setWenxinQianfan\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"API Key & Secret Key\",\n    description: i18n.global.t(\"settings.secretPrompt\"),\n    label: \"API Key\",\n    placeholder: \"2125NA8mQy7gC52Pq9BK3tvk\",\n    hideDetails: true,\n  },\n  {\n    type: Type.Text,\n    name: \"secretKey\",\n    label: \"Secret Key\",\n    placeholder: \"IWf2pyYm26fz8GgNAHdkPkznHgazlffQ\",\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: i18n.global.t(\"bot.pastRounds\"),\n    description: i18n.global.t(\"bot.pastRoundsPrompt\"),\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=f5a417aa\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 77308,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 77308,\n\t\"./BardBotSettings\": 55538,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 28778,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGLMBotSettings\": 69594,\n\t\"./ChatGLMBotSettings.vue\": 69594,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 94647,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./CommonBotSettings\": 23610,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings\": 36753,\n\t\"./Falcon180bBotSettings.vue\": 36753,\n\t\"./GradioAppBotSettings\": 99609,\n\t\"./GradioAppBotSettings.vue\": 99609,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 35562,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings\": 93407,\n\t\"./OpenAIAPIBotSettings.vue\": 93407,\n\t\"./OpenAssistantBotSettings\": 38570,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PhindBotSettings\": 24317,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 41084,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 98333,\n\t\"./WenxinQianfanBotSettings.vue\": 98333,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633,\n\t\"./settings.const\": 62128,\n\t\"./settings.const.js\": 62128\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 77308,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGLMBotSettings.vue\": 69594,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings.vue\": 36753,\n\t\"./GradioAppBotSettings.vue\": 99609,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings.vue\": 93407,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 98333,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"90\":\"7361f5ba\",\"277\":\"4e655e9b\",\"599\":\"cbdd0b08\",\"857\":\"c2a990a7\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"chatall:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","_checkAvailability","context","this","getChatContext","available","requestParams","atValue","_sendPrompt","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","setChatContext","content","done","catch","error","createChatContext","get","match","_defineProperty","AsyncLock","getInstance","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","prefix","isDisabled","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","getSettingsComponent","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","isAvailable","_isAvailable","disabled","confirmBeforeUsing","confirmModal","acquireLock","key","lockedFn","onLockUnavailable","self","_lock","acquire","async","ret","err","timeout","sendPrompt","botName","executeSendPrompt","message","console","LoginError","getLoginHyperlink","wrapCollapsedSection","checkAvailability","disable","createIfNotExists","Chats","getCurrentChat","contexts","store","commit","botClassname","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","status","response","name","CharacterAIBot","getAuthHeaders","headers","Authorization","state","characterAI","token","Date","getTime","ttl","userInfoResponse","user","username","Accept","payload","history_external_id","character_external_id","_characterId","tgt","onDownloadProgress","progressEvent","onResponseDownloadProgress","responses","currentTarget","filter","n","lastResponse","length","Array","isArray","replies","is_final_chunk","chatContinueResponse","characterInfoResponse","external_id","character","participant__user__username","ChatGLMBot","getAuthHeader","chatGlm","userInfoUrl","user_id","result","_id","undefined","uuid","uuidv4","streamContext","seed","max_tokens","conversation_task_id","retry","retry_history_task_id","institution","__userid","context_id","SSE","addEventListener","stream","task_id","ClaudeAIBot","claudeAi","org","currentAcountResponse","success","accept","attachments","completion","incremental","conversation_uuid","organization_uuid","withCredentials","readyState","CLOSED","createResponse","LangChainBot","messages","bufferMemory","BufferMemory","getPastRounds","shift","item","storedMessage","type","toLowerCase","humanPrefix","chatHistory","addUserMessage","aiPrefix","addAIChatMessage","addMessage","res","_chatModel","getMessages","callbacks","handleLLMNewToken","handleLLMEnd","call","map","toDict","MOSSBot","moss","refresh","id","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","output","stage","status_code","onError","target","open","OpenAssistantBot","i","prompterResponse","parent_id","assistantResponse","model_config_name","plugins","sampling_parameters","top_k","top_p","typical_p","temperature","repetition_penalty","max_new_tokens","message_id","queryString","event_type","ipcRenderer","window","require","PhindBot","rewrite","questionToRewrite","questionHistory","answerHistory","search","q","query","browserLanguage","userSearchRules","date","formatDate","getFormattedDate","question","webResults","options","language","detailed","anonUserId","getUUID","answerModel","phind","customLinks","start","isSuccess","startsWith","hostname","URL","replaceAll","_onStreamProgress","e","CONNECTING","dispatchEvent","CustomEvent","_setReadyState","OPEN","responseText","substring","progress","parts","chunk","lastPart","pop","part","_parseEventChunk","_onStreamFailure","year","getFullYear","month","getMonth","padStart","day","getDate","cookies","invoke","domain","uuidCookie","find","cookie","value","PiBot","generateRandomId","randomStr","QianWenBot","getRequestHeaders","qianWen","xsrfToken","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","failed","errorCode","errorMsg","stopReason","firstQuery","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","skyWork","inviteToken","code","resp_data","busy_now","invite_token","currentPrompt","messageId","currentMessageId","session_id","result_message","code_msg","setTimeout","dialogue","SparkBot","flag","desc","getGtToken","initGeeGuard","appId","https","gee_token","chatId","GtToken","formData","FormData","append","String","slice","partialText","descr","Buffer","from","YouChatBot","queryTraceId","chat","youChatToken","answer","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","chatModel","ChatBaiduWenxin","modelName","baiduApiKey","baiduSecretKey","streaming","pastRounds","Falcon180bBot","GradioBot","sendPredict","fn_index","session_hash","_predictUrl","event_data","all","makeData","r","_fnIndexes","falcon","maxNewTokens","topP","repetitionPenalty","parseData","parseError","_class","GradioAppBot","gradio","fnIndex","config","path","root","log","_sendFnIndex","protocol","msg","rank","rank_eta","onClose","HuggingChatBot","packRequest","inputs","is_retry","response_id","web_search","conversationId","fetch","method","ok","errorData","json","reader","getReader","processStream","read","dataChunk","TextDecoder","decode","jsonDataArray","Boolean","jsonData","LMSYSBot","includes","AzureOpenAIAPIBot","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","BingChatBot","conversation","clientId","conversationSignature","secAccessToken","invocationId","isAnonymous","makePromptRequest","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","verbosity","scenario","isStartOfSession","requestId","timestamp","toISOString","author","inputMethod","messageType","tone","_tone","participant","spokenTextMode","seperator","fromCharCode","encodeURIComponent","version","events","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","ChatGPTBot","setRefreshCycle","chatgpt","refreshCycle","accessToken","loadArkoseScript","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","_arkoseScriptLoaded","script","document","createElement","src","setAttribute","defer","appendChild","onload","setupEnforcement","onerror","myEnforcement","_myEnforcement","setConfig","onReady","onShown","onShow","onSuppress","onCompleted","_arkosePromise","onReset","onHide","onFailed","getArkoseToken","run","arkose_token","content_type","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","trim","test","metadata","is_complete","join","push","citations","element","detail","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","OpenAIAPIBot","openaiApi","configuration","basePath","alterUrl","openAIApiKey","PoeBot","buildId","settings","lastMessageId","gqlPost","queryName","variables","formkey","poe","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","vizcacha","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","subscriptions","subscriptionName","queryHash","debug","min_seq","m","message_type","messageAdded","bot","withChatBreak","messageEdgeCreate","errors","Type","Text","Slider","Select","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","now","timer","onUnmounted","lang","navigator","userLanguage","substr","en","enMessages","zh","zhMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","restored","migrateChatsMessagesThreads","addFirstChatIfEmpty","defaultTheme","resolveTheme","mode","applyTheme","vuetify","createVuetify","components","VDataTable","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","head","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","table","db","count","add","favBots","classname","selected","currentChatIndex","currentChat","newKey","index","createdTime","modifiedTime","update","Dexie","stores","chats","threads","isThrottleMessage","isThrottleThreadMessage","messageBuffer","threadMessageBuffer","vuexPersist","VuexPersistence","storage","localForage","asyncStorage","reducer","updateCounter","selectedResponses","persistedState","deepToRaw","sourceObj","objectIterator","input","isRef","isReactive","isProxy","toRaw","keys","reduce","acc","createStore","columns","riskConfirmed","isChatDrawerOpen","prompts","actions","template","suffix","mutations","changeColumns","setUuid","setBotSelected","setFavBotOrder","newOrder","order","addFavoriteBot","removeFavoriteBot","splice","setCurrentLanguage","setChatgpt","setOpenaiApi","values","setAzureOpenaiApi","setMoss","setChatGLM","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","setCharacterAI","setClaudeAi","setPoe","setPhind","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","messageIndex","latestThreadPromptIndex","Messages","hasThread","setResponseThreadIndex","responseIndex","threadIndex","updateMessage","updateThreadMessage","Threads","setMessages","incrementUpdateCounter","clearMessages","where","equals","modify","delete","setTheme","setMode","createChat","chatIndex","selectChat","selectedTime","hideChat","hide","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","clear","addPrompt","editPrompt","deletePrompt","addAction","editAction","deleteAction","addSelectedResponses","selectedIndex","deleteSelectedResponses","findIndex","deleteAllSelectedResponses","migrateSettingsPrompts","localStorage","getItem","app","promptsData","setItem","dispatch","bots","promptMessage","msgs","className","trackEvent","sendPromptInThread","threadPromptMessage","threadResponseMessage","thread","getters","getCurrentChatPrompt","modules","plugin","sortBy","getMessagesCount","chatIndexMap","messageIndexMap","threadIndexMap","chatsMigrateData","messagesMigrateData","threadsMigrateData","migrateHasThread","getIndex","getAndGenerateUuidIfNotExist","j","p","threadMessage","bulkAdd","messageIndexes","orderBy","distinct","uniqueKeys","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_PROMPT_PRE_NEXT","left","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","SHORTCUT_PROMPT_MANAGEMENT","SHORTCUT_LIST","emit","__emit","props","__props","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","__exports__","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","useStore","onUpdated","drawerItems","useObservable","liveQuery","reverse","toArray","focusTextarea","onAddChat","confirm","selectLatestVisibleChat","latestChat","first","style","setProperty","onMounted","ChatGPT35Bot","ChatGPT4Bot","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","OpenAIAPI35Bot","OpenAIAPI4Bot","VicunaBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT432kPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","Llama2HC70bBot","Llama213bBot","Llama27bBot","Llama270bBot","ChatGLM6bBot","CodeLlamaBot","Vicuna7bBot","Vicuna13bBot","Wizardlm13bBot","Wizardlm70bBot","FalconHC180bBot","CodeLlamaHCBot","WenxinQianfan4Bot","getBotByClassName","botTags","free","paid","openSource","api","madeInChina","currentChatMessages","primaryKeys","bulkGet","sort","a","b","groupedMessage","create","apply","computed","carouselModel","maxPage","deep","replyModel","replyRef","pageLeftButton","pageRightButton","isSelected","isSelectedList","isSelectedResponsesEmpty","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","highlight","isAllDone","some","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isShowReplyButtonInDOM","isShowResendButton","isSomeResponsesHasThread","messagePromptIndex","isShowPagingButton","getButtonClass","getSelectButtonClass","favBot","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","copyToClipboard","clipboard","writeText","toggleHighlight","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","toggleReplyButton","select","stopPropagation","contains","indexOf","updateIsSelectedResponsesEmpty","pageLeft","max","pageRight","min","autoScroll","loading","gridTemplateColumns","createChatMessageLiveQuery","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","currentMessageSub","scrollToBottomFirst","newChat","oldChat","unsubscribe","subscribe","onScroll","scrollPosition","pageYOffset","innerHeight","removeEventListener","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","pacFile","reply","onFileChange","file","files","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","prefixPlaceholder","templatePlaceholder","suffixPlaceholder","preview","exampleTemplate","examplePrompt","PromptTemplate","inputVariables","exampleSelector","LengthBasedExampleSelector","fromExamples","maxLength","Number","MAX_VALUE","dynamicPrompt","FewShotPromptTemplate","formRef","isOpenAddEditAction","actionName","previewRef","templateParametersInfo","isShowTemplateParametersDialog","userActions","previewSampleData","botResponse","editIndex","isEdit","required","downloadJson","chatallMessages","d","arr","botModel","blob","Blob","createObjectURL","hour","getHours","minute","getMinutes","second","getSeconds","fileName","download","click","removeChild","revokeObjectURL","onInputTemplate","edit","addEditAction","validate","valid","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGPTBotSettings","ChatGLMBotSettings","ClaudeAIBotSettings","Falcon180bBotSettings","GradioAppBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","OpenAssistantBotSettings","PhindBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","newBot","markRaw","onDone","isLogoInverted","menu","favorited","tags","selectedTags","notDisabledBots","shownBots","toggleFavorite","toggleMenu","filterBots","filteredIn","tagBots","tag","every","tagBot","defaultLanguage","isOpenAddEditPrompt","selectedPrompt","requiredRule","width","sortable","userPrompts","x","y","isPin","defaultPrompts","act","pin","row","usePrompt","addEditPrompt","showFullText","parent","closest","children","td","position","getBoundingClientRect","div","innerText","classList","hideFullText","toElement","toRemove","querySelectorAll","remove","setPromptLanguage","onDialogCloseTransitionEnded","promptTextArea","botsMenuRef","favBotLogosRef","isPromptManagementOpen","_bots","activeBots","rerenderFavBotLogos","_favBots","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmed","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","isUpOrDown","historyKeyCode","pre","next","isAuxiliaryKey","newPrompt","getHistoryPrompt","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","newValue","oldValue","botsToCheck","oldBot","historyPrompts","toggleSelected","availability","initializeSortable","isDropOnFavBotBar","onDragEnd","parentNode","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","execCommand","onBeforeMount","on","versions","checkVersion","latest","current","compare","skip","removeListener","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","getElementById","innerHTML","toggleShortcutGuide","openShortcutGuide","previewText","previewTextarea","chatRef","onChangeOpenProp","selectedBots","updatePreview","updateFavBots","send","newChatIndex","deselectAllResponses","onUpdatedSystemTheme","last","initialValue","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","isChatActionOpen","openSettingsModal","openFind","getColumnImage","columnCount","deselectAll","callAction","_paq","ver","_createBlock","_component_CommonBotSettings","$data","brandId","description","step","ticks","CommonBotSettings","render","_component_login_setting","LoginSetting","mounted","tokenInfo","methods","mapMutations","_createVNode","_component_v_list_item","_component_v_alert","outlined","_ctx","_component_v_list_item_title","_component_v_list_item_subtitle","_component_v_checkbox","$options","autoRefresh","$event","hideDetails","label","AUTO_REFRESH_CYCLE","mapState","set","auto","settingState","refs","validateSliderInput","setting","getInputElement","valuefloat","parseFloat","inputMaxFloat","inputMinFloat","inputElement","example","_createElementVNode","$props","onClick","_cache","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","secret","items","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prop","prototype","inProgress","dataWebpackPrefix","l","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","onScriptComplete","prev","clearTimeout","doneFns","toStringTag","nmd","paths","installedChunks","installedChunkData","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}