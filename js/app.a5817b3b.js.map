{"version":3,"file":"js/app.a5817b3b.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/ChatGLMBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/components/Messages/ChatMessage.vue","webpack://chatall/./src/components/Messages/ChatMessage.vue?e75c","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/main.js","webpack://chatall/./src/store/messagesPersist.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) ChatALL/1.18.13 Chrome/112.0.5615.165 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const context = await this.getChatContext();\n    if (context.requestParams.atValue) {\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    if (this.getModelName())\n      return `${this.getBrandName()} (${this.getModelName()})`;\n    else return this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      onUpdateResponse(callbackParam, { content: err.toString(), done: true }); // Make sure stop loading\n    }\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    return false;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = store.getters.currentChat?.contexts?.[this.getClassname()];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n\n    if (!token) {\n      this.constructor._isAvailable = false;\n    } else {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then((res) => {\n          this.constructor._isAvailable = true;\n          return res;\n        })\n        .catch((err) => {\n          this.constructor._isAvailable = false;\n          return err;\n        });\n    }\n\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        this.constructor._isAvailable = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n        this.constructor._isAvailable = false;\n      });\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(new Error(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        { firstQuery: \"ChatALL\" }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        this.constructor._isAvailable = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          this.constructor._isAvailable = true;\n        } else {\n          this.constructor._isAvailable = false;\n        }\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      this.constructor._isAvailable = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends Bot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      };\n      try {\n        const resp = await axios.post(\n          `https://aip.baidubce.com/oauth/2.0/token?client_id=${apiKey}&client_secret=${secretKey}&grant_type=client_credentials`,\n          {},\n          { headers },\n        );\n        this.accessToken = resp.data.access_token;\n        this.constructor._isAvailable = true;\n      } catch (e) {\n        console.error(e);\n        this.constructor._isAvailable = false;\n      }\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > store.state.wenxinQianfan.pastRounds * 2) {\n      messages.shift();\n    }\n\n    try {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      const url = `https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=${this.accessToken}`;\n\n      messages.push({ role: \"user\", content: `‘${prompt}’` });\n      const payload = JSON.stringify({\n        messages,\n        stream: true,\n        user: \"chatall\",\n      });\n\n      const requestConfig = {\n        headers,\n        method: \"POST\",\n        payload,\n      };\n\n      let fullResult = \"\";\n      return new Promise((resolve, reject) => {\n        const source = new SSE(url, requestConfig);\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data) {\n            const data = JSON.parse(event.data);\n            const partialResult = data.result;\n            fullResult += partialResult;\n            onUpdateResponse(callbackParam, {\n              content: fullResult,\n              done: data.is_end,\n            });\n\n            if (data.is_end) {\n              messages.push({ role: \"assistant\", content: fullResult });\n              this.setChatContext(messages);\n              source.close();\n              resolve();\n            }\n          } else {\n            // To capture random errors\n            console.error(\"Error Wenxin Qianfan:\", event);\n            const response = JSON.parse(event.source.xhr.responseText);\n            source.close();\n            reject(new Error(`${response.error_code} ${response.error_msg}`));\n          }\n        });\n        source.addEventListener(\"error\", (error) => {\n          const data = JSON.parse(error.data);\n          source.close();\n          reject(new Error(`${data.error_code} ${data.error_msg}`));\n        });\n        source.stream();\n      });\n    } catch (error) {\n      console.error(\"Error sending prompt to OpenAIAPI:\", error);\n      throw error;\n    }\n  }\n\n  async createChatContext() {\n    return [];\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super.checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    if (this.constructor._loginUrl === \"\") {\n      this.constructor._isAvailable = false;\n    } else {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        this.constructor._isAvailable = true;\n      } catch (err) {\n        console.log(err);\n        this.constructor._isAvailable = false;\n      }\n    }\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                reject(new Error(event.output.data[2]));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Create a conversation to test if the bot is available\n    const conversationId = await this.createChatContext();\n    if (conversationId) {\n      this.constructor._isAvailable = true;\n      // Delete the conversation after testing\n      axios.delete(\n        `https://huggingface.co/chat/conversation/${conversationId}`,\n      );\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      parameters: {\n        temperature: 0.9,\n        truncate: 1000,\n        max_new_tokens: 1024,\n        stop: [\"</s>\"],\n        top_p: 0.95,\n        repetition_penalty: 1.2,\n        top_k: 50,\n        return_full_text: false,\n      },\n      stream: true,\n      options: {\n        id: uuidv4(),\n        is_retry: false,\n        use_cache: false,\n      },\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        const source = new SSE(\n          `https://huggingface.co/chat/conversation/${conversationId}`,\n          {\n            headers: { \"Content-Type\": \"application/json\" },\n            payload: JSON.stringify(this.packRequest(prompt)),\n          },\n        );\n\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.generated_text === null) {\n            text += data.token.text;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } else {\n            // the last message\n            onUpdateResponse(callbackParam, {\n              content: data.generated_text,\n              done: true,\n            });\n            source.close();\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n          reject(new Error(error.data.error));\n        });\n\n        source.stream();\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(\"https://huggingface.co/chat/conversation\", {\n        model: \"OpenAssistant/oasst-sft-6-llama-30b-xor\",\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return conversationId;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [9, 10]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = \"\";\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    return r;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://www.bing.com/new\";\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.48\";\n\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.10.0 OS/MacIntel\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://www.bing.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.data && response.data.result.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature: response.data.conversationSignature,\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Bing Chat conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async checkAvailability() {\n    await axios\n      .get(\"https://www.bing.com/turing/conversation/chats\")\n      .then((response) => {\n        this.constructor._isAvailable =\n          response.data?.result?.value == \"Success\";\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        this.constructor._isAvailable = false;\n        console.error(\"Error checking Bing Chat login status:\", error);\n      });\n    return this.isAvailable();\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"winmuid2tf\",\n            \"0522chtsprs0\",\n            \"anssuptkmr1\",\n            \"522convqfs0\",\n            \"osbsdusgreccf\",\n            \"contansperf\",\n            \"mlchatpcth-c\",\n            \"winstmsg2tf\",\n            \"creatgoglc\",\n            \"creatorv2t\",\n            \"sydconfigoptt\",\n            \"norespwtf\",\n            \"0524txt3\",\n            \"517opinion\",\n            \"418dhlth\",\n            \"0518logos\",\n            \"517recansvg\",\n            \"525glv7s0\",\n            \"kcimgatt\",\n            \"427startpms0\",\n            \"515oscfing2s0\",\n          ],\n          isStartOfSession: context.invocationId === 0,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          requestId: uuid,\n          conversationSignature: context.conversationSignature,\n          participant: { id: context.clientId },\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        const wsp = new WebSocketAsPromised(\n          \"wss://sydney.bing.com/sydney/ChatHub\",\n          {\n            packMessage: (data) => {\n              return JSON.stringify(data) + seperator;\n            },\n            unpackMessage: (data) => {\n              return data\n                .toString()\n                .split(seperator)\n                .filter(Boolean)\n                .map((r) => JSON.parse(r));\n            },\n          },\n        );\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Bing Chat:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (await this.isAnonymous(context.clientId)) {\n                      const url = this.getLoginUrl();\n                      onUpdateResponse(callbackParam, {\n                        content: i18n.global.t(\"bingChat.loginToContinue\", {\n                          attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                        }),\n                        format: \"html\",\n                        done: false,\n                      });\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(new Error(event.item.result.message));\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Bing Chat response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) ChatALL/1.18.13 Chrome/112.0.5615.165 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (response.data && response.data.accessToken) {\n        this.accessToken = response.data.accessToken;\n        this.constructor._isAvailable = true;\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(this.isAvailable());\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  getArkoseToken() {\n    let arkoseToken = void 0;\n    if (\n      this.getClassname() === \"ChatGPT4Bot\" ||\n      this.getClassname() === \"ChatGPTBrowsingBot\"\n    ) {\n      let part1 = Math.floor(Math.random() * Math.pow(16, 16)).toString(16);\n      while (part1.length < 15) {\n        part1 = \"0\" + part1;\n      }\n      const part2 = (Math.random() * 10).toFixed(10);\n      arkoseToken = `${\n        part1 + part2\n      }|r=us-west-2|meta=3|meta_width=300|metabgclr=transparent|metaiconclr=%23555555|guitextcolor=%23000000|pk=35536E1E-65B4-4D96-9D97-6ADB7EFF8147|at=40|sup=1|rid=59|ag=101|cdn_url=https%3A%2F%2Ftcr9i.chat.openai.com%2Fcdn%2Ffc|lurl=https%3A%2F%2Faudio-us-west-2.arkoselabs.com|surl=https%3A%2F%2Ftcr9i.chat.openai.com|smurl=https%3A%2F%2Ftcr9i.chat.openai.com%2Fcdn%2Ffc%2Fassets%2Fstyle-manager`;\n    }\n    return arkoseToken;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message.id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { SSE } from \"sse.js\";\nimport store from \"@/store\";\n\nexport default class OpenAIAPIBot extends Bot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n  static _logoFilename = \"\";\n  static _loginUrl = \"\"; // URL for the login button on the bots page\n  static _model = \"\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (!store.state.openaiApi.apiKey) {\n      this.constructor._isAvailable = false;\n    } else {\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > store.state.openaiApi.pastRounds * 2) {\n      messages.shift();\n    }\n\n    // Send the prompt to the OpenAI API\n    try {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${store.state.openaiApi.apiKey}`,\n      };\n\n      messages.push({ role: \"user\", content: `‘${prompt}’` });\n      const payload = JSON.stringify({\n        model: this.constructor._model,\n        messages,\n        temperature: store.state.openaiApi.temperature,\n        stream: true,\n      });\n\n      const requestConfig = {\n        headers,\n        method: \"POST\",\n        payload,\n      };\n\n      let res = \"\";\n      return new Promise((resolve, reject) => {\n        // call OpenAI API\n        const apiUrl =\n          store.state.openaiApi.alterUrl ||\n          \"https://api.openai.com/v1/chat/completions\";\n        const source = new SSE(apiUrl, requestConfig);\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            messages.push({ role: \"assistant\", content: res });\n            this.setChatContext(messages);\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else {\n            const data = JSON.parse(event.data);\n            const partialText = data.choices?.[0]?.delta?.content;\n            if (partialText) {\n              res += partialText;\n              onUpdateResponse(callbackParam, { content: res, done: false });\n            }\n          }\n        });\n        source.addEventListener(\"error\", (error) => {\n          const data = JSON.parse(error.data);\n          source.close();\n          reject(data.error.message);\n        });\n        source.stream();\n      });\n    } catch (error) {\n      console.error(\"Error sending prompt to OpenAIAPI:\", error);\n    }\n  }\n\n  async createChatContext() {\n    return [];\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n\n  context = {\n    formkey: \"\",\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { formkey, settings } = this.context;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"WpuLMiXEKKE98j56k\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    let isAvailable = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude+\",\n      capybara: \"Sage\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      await axios.get(url).then((response) => {\n        if (response.request.responseURL !== url) {\n          // A 307 redirect to the login page means the bot is not logged in\n          // Axios always do the redirect, so we have to check the responseURL\n          return;\n        }\n\n        // Parse buildId\n        const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n        this.context.buildId = buildId[1];\n\n        // Parse chatId\n        const chatId = response.data.match(/\"chatId\":(\\d+),/);\n        this.context.chatId = chatId[1];\n\n        // Parse and run the secret code of Poe for formkey\n        const secretCode = response.data.match(\n          /var .=\".*\",.*window\\..*=function\\(\\)\\{return .\\.join\\(\"\"\\)\\};/,\n        );\n\n        const secretFunction = secretCode[0].match(\n          /(window\\..*)=function\\(\\)\\{.*\\};/,\n        );\n\n        this.context.formkey = eval(`${secretCode[0]}${secretFunction[1]}();`);\n\n        isAvailable = true;\n      });\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    this.constructor._isAvailable = isAvailable;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,  \n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  if (window.Piwik) {\n    matomo.value = getMatomo();\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      if (window.Piwik) {\n        clearInterval(timer);\n        matomo.value = getMatomo();\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","<template>\n  <v-dialog v-model=\"dialog\" max-width=\"290\" @click:outside=\"close(false)\">\n    <v-card>\n      <v-card-title>{{ title }}</v-card-title>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary darken-1\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn color=\"primary darken-1\" @click=\"close(true)\">{{\n          $t(\"header.yes\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nlet dialog = ref(false);\nlet title = ref(\"\");\n\nlet close;\n\nconst showModal = (message) => {\n  title.value = message;\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const reserved = this.constructor._isAvailable; // To supress the availablity changing\n    const isAvailable = await super.checkAvailability();\n    this.constructor._isAvailable = reserved;\n\n    if (isAvailable) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        this.constructor._isAvailable = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        this.constructor._isAvailable = false;\n      }\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"h3precise\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"clgalileo\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"galileo\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"glpromptv6\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"h3imaginative\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.png\"; // Place it in public/bots/\n  static _model = \"capybara\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-logo.jpeg\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLMBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.svg\"; // Place it in public/bots/\n  static _model = \"chatglm-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-v1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Check:\n    // 1. Whether the bot is logged in as needed\n    // 2. Whether the bot settings are correct (e.g. API key is valid)\n    // If yes:\n    //   this.constructor._isAvailable = true;\n    // else:\n    //   this.constructor._isAvailable = false;\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/lmsys/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\n\nconst all = [\n  AlpacaBot.getInstance(),\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  MOSSBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  QianWenBot.getInstance(),\n  SageBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  VicunaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n];\n\nconst disabled = [];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    const bot = disabled.find((bot) => bot.getClassname() === className);\n    if (bot) {\n      return bot;\n    } else {\n      return all.find((bot) => bot.getClassname() === className);\n    }\n  },\n};\n\nexport default bots;\n","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      message.type,\n      message.highlight ? 'highlight-border' : '',\n    ]\"\n    :loading=\"message.done ? false : 'primary'\"\n  >\n    <v-card-title v-if=\"message.type === 'response'\" class=\"title\">\n      <img :src=\"botLogo\" alt=\"Bot Icon\" />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"message.highlight ? 'primary' : ''\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn flat size=\"x-small\" icon @click=\"copyToClipboard\">\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn flat size=\"x-small\" icon @click=\"hide\">\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n    </v-card-title>\n    <pre v-if=\"message.type === 'prompt'\">{{ message.content }}</pre>\n    <Markdown\n      v-else\n      class=\"markdown-body\"\n      :breaks=\"true\"\n      :html=\"message.format === 'html'\"\n      :source=\"message.content\"\n      @click=\"handleClick\"\n    />\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { onMounted, ref, watch, computed } from \"vue\";\nimport i18n from \"@/i18n\";\nimport Markdown from \"vue3-markdown-it\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport bots from \"@/bots\";\n\nimport \"highlight.js/styles/github.css\";\nimport \"github-markdown-css/github-markdown-light.css\";\n\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n});\n\nconst emits = defineEmits([\"update-message\"]);\n\nconst matomo = useMatomo();\n\nconst root = ref();\nconst confirmModal = ref(null);\n\nconst botLogo = computed(() => {\n  const bot = bots.getBotByClassName(props.message.className);\n  return bot ? bot.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  const bot = bots.getBotByClassName(props.message.className);\n  return bot ? bot.getFullname() : \"\";\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.message.content;\n  if (props.message.format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.message.className, 1);\n}\n\nfunction toggleHighlight() {\n  emits(\"update-message\", props.message.index, {\n    highlight: !props.message.highlight,\n  });\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.message.className,\n    props.message.highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    emits(\"update-message\", props.message.index, { hide: true });\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.message.className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n</script>\n\n<style scoped>\n.message {\n    border-radius: 8px;\n    padding: 16px;\n    word-wrap: break-word;\n    text-align: left;\n}\n\n.highlight-border {\n    box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n    background-color: #95EC69;\n    width: fit-content;\n    grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap; \n  font-family: inherit;\n}\n\n.response {\n    background-color: #FFF;\n    width: 100%;\n    grid-column: auto / span 1;\n}\n\n.title {\n    display: flex;\n    align-items: center;\n    font-size: 1rem;\n    padding: 0;\n    margin-bottom: 8px;\n}\n\n.title img {\n    width: 20px;\n    height: 20px;\n    margin-right: 4px;\n}\n\n.markdown-body {\n    background-color: inherit;\n    font-family: inherit;\n}\n</style>\n","import script from \"./ChatMessage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessage.vue?vue&type=style&index=0&id=0acf5501&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0acf5501\"]])\n\nexport default __exports__","<template>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <chat-message\n        v-for=\"(message, index) in filteredMessages\"\n        :key=\"index\"\n        :columns=\"columns\"\n        :message=\"message\"\n        @update-message=\"updateMessage\"\n      ></chat-message>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatMessage from \"./ChatMessage.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n});\n\nconst autoScroll = ref(true);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst filteredMessages = computed(() => {\n  return store.getters.currentChat.messages.filter((message) => !message.hide);\n});\n\nconst updateMessage = (index, values) => {\n  store.dispatch(\"updateMessage\", {\n    indexes: { chatIndex: store.state.currentChatIndex, messageIndex: index },\n    message: values,\n  });\n};\n\nconst scrollToBottom = ({ immediately = false }) => {\n  nextTick(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: immediately ? \"instant\" : \"smooth\",\n    });\n  });\n};\n\nconst autoScrollToBottom = () => {\n  if (autoScroll.value) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nwatch(() => store.getters.currentChat.messages.length, autoScrollToBottom);\nwatch(() => store.state.updateCounter, autoScrollToBottom);\n\nconst onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll.value =\n    scrollPosition >= document.documentElement.scrollHeight - 10;\n};\n\nonMounted(() => {\n  store.getters.currentChat.messages.forEach((message) => {\n    message.done = true;\n  });\n  window.addEventListener(\"scroll\", onScroll);\n  scrollToBottom({ immediately: true });\n});\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", onScroll);\n});\n</script>\n\n<style scoped>\n.messages {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    height: 100%;\n    overflow-y: auto;\n    gap: 16px;\n    margin: 52px 16px;\n}\n\n.message-grid {\n    display: grid;\n    grid-gap: 16px;\n    width: 100%;\n    padding: 16px;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=7f5b9a86&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7f5b9a86\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card>\n      <v-toolbar dark color=\"primary\">\n        <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn icon dark @click=\"closeDialog\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-toolbar>\n      <v-list lines=\"two\" subheader>\n        <div class=\"section\">\n          <v-list-subheader>{{ $t(\"settings.general\") }}</v-list-subheader>\n          <v-list-item>\n            <v-list-item-title>{{ $t(\"settings.language\") }}</v-list-item-title>\n            <v-select\n              :items=\"languages\"\n              item-title=\"name\"\n              item-value=\"code\"\n              hide-details\n              :model-value=\"lang\"\n              @update:model-value=\"setCurrentLanguage($event)\"\n            ></v-select>\n          </v-list-item>\n        </div>\n\n        <template v-for=\"(setting, index) in settings\" :key=\"index\">\n          <v-divider></v-divider>\n          <div class=\"section\">\n            <component :is=\"setting\"></component>\n          </div>\n        </template>\n      </v-list>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\n\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst settings = [\n  ChatGPTBotSettings,\n  OpenAIAPIBotSettings,\n  WenxinQianfanBotSettings,\n  GradioAppBotSettings,\n  BardBotSettings,\n  BingChatBotSettings,\n  HuggingChatBotSettings,\n  LMSYSBotSettings,\n  MOSSBotSettings,\n  PoeBotSettings,\n  QianWenBotSettings,\n  SparkBotSettings,\n  SkyWorkBotSettings,\n];\n\nconst languages = computed(() => [\n  { name: $t(\"settings.auto\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n]);\n\nconst lang = computed(() => store.state.lang);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n.section {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  padding: 0 16px;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=3b7995ab&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3b7995ab\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=015d9ed0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in bots.all\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nconst props = defineProps([\"favBots\"]);\n\nlet menu = ref(false);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n</script>\n\n<style>\n.bots-list {\n  column-count: 3\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=3f36ff9a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"footer\">\n    <v-textarea\n      v-model=\"prompt\"\n      auto-grow\n      max-rows=\"8.5\"\n      rows=\"1\"\n      density=\"comfortable\"\n      hide-details\n      variant=\"solo\"\n      :placeholder=\"$t('footer.promptPlaceholder')\"\n      autofocus\n      @keydown=\"filterEnterKey\"\n      style=\"min-width: 390px\"\n    ></v-textarea>\n    <v-btn\n      color=\"primary\"\n      elevation=\"2\"\n      class=\"margin-bottom\"\n      :disabled=\"\n        prompt.trim() === '' ||\n        favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n      \"\n      @click=\"sendPromptToBots\"\n    >\n      {{ $t(\"footer.sendPrompt\") }}\n    </v-btn>\n    <div class=\"bot-logos margin-bottom\">\n      <BotLogo\n        v-for=\"(bot, index) in favBots\"\n        :key=\"index\"\n        :bot=\"bot.instance\"\n        :active=\"activeBots[bot.classname]\"\n        size=\"36\"\n        @click=\"toggleSelected(bot.instance)\"\n      />\n      <BotsMenu :favBots=\"favBots\" />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onBeforeMount, reactive, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst favBots = computed(() => {\n  const _favBots = [];\n  store.getters.currentChat.favBots.forEach((favBot) => {\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots;\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nfunction updateActiveBots() {\n  for (const favBot of favBots.value) {\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n}\n\nfunction sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  store.dispatch(\"sendPrompt\", {\n    prompt: prompt.value,\n    bots: toBots,\n  });\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n</script>\n\n<style>\n.footer {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background-color: rgba(243, 243, 243, 0.7);\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n}\n\n.margin-bottom {\n  margin-bottom: 5px;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=498d89d6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar color=\"#fff\" :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-black text-center font-weight-bold\">\n        {{ $t('updates.updateAvailable') }}\n      </span>\n      <span class=\"text-black text-center\">\n        {{ $t('updates.currentVersion') }}: {{ versions.current }}\n      </span>\n      <span class=\"text-black text-center\">\n        {{ $t('updates.latestVersion') }}: {{ versions.latest }}\n      </span>\n      <v-btn prepend-icon=\"mdi-github\" color=\"primary\" variant=\"tonal\" @click=\"openReleasePage\">\n        {{ $t('updates.downloadFromGitHub') }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t('updates.skipThisVersion') }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t('updates.close') }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from 'compare-versions';\nconst { shell } = window.require(\"electron\");\n\nconst versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\nconst snackbar = ref(false);\nif (versions?.latest && versions?.current && compare(versions.latest, versions.current, '>')) {\n  if (!versions?.skip || compare(versions.latest, versions.skip, '>')) {\n    snackbar.value = true;\n  }\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: .2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0!important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: .5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=1bbcd87d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1bbcd87d\"]])\n\nexport default __exports__","<template>\n  <div id=\"app\">\n    <header>\n      <div class=\"header-content\">\n        <img class=\"logo\" src=\"@/assets/logo-banner.png\" alt=\"ChatALL\" />\n        <div class=\"column-icons\">\n          <img\n            src=\"@/assets/column-1.svg\"\n            @click=\"changeColumns(1)\"\n            :class=\"{ selected: columns === 1 }\"\n          />\n          <img\n            src=\"@/assets/column-2.svg\"\n            @click=\"changeColumns(2)\"\n            :class=\"{ selected: columns === 2 }\"\n          />\n          <img\n            src=\"@/assets/column-3.svg\"\n            @click=\"changeColumns(3)\"\n            :class=\"{ selected: columns === 3 }\"\n          />\n        </div>\n        <div>\n          <v-icon\n            class=\"cursor-pointer\"\n            color=\"primary\"\n            icon=\"mdi-broom\"\n            size=\"x-large\"\n            @click=\"clearMessages()\"\n          ></v-icon>\n          <v-icon\n            class=\"cursor-pointer\"\n            color=\"primary\"\n            icon=\"mdi-cog\"\n            size=\"x-large\"\n            @click=\"openSettingsModal()\"\n          ></v-icon>\n        </div>\n      </div>\n    </header>\n\n    <main class=\"content\">\n      <div id=\"content\">\n        <ChatMessages :columns=\"columns\"></ChatMessages>\n      </div>\n    </main>\n\n    <FooterBar></FooterBar>\n    <SettingsModal v-model:open=\"isSettingsOpen\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <UpdateNotification></UpdateNotification>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport i18n from \"./i18n\";\n\n// Components\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst store = useStore();\n\nconst confirmModal = ref(null);\nconst isSettingsOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\n\nfunction openSettingsModal() {\n  isSettingsOpen.value = true;\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n});\n</script>\n\n<style>\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: \"Arial\", sans-serif;\n}\n\n#app {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\nheader {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    background-color: white;\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n    padding: 16px;\n    z-index: 999;\n}\n\n.header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n    opacity: 0.5;\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n    flex: 1;\n    background-color: #f3f3f3;\n    padding: 16px;\n}\n\n.cursor-pointer {\n    cursor: pointer;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4a904c1b&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\n\n// Init storage\nstore.commit(\"init\");\n\nconst vuetify = createVuetify({\n  components,\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme: \"light\",\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#062AAA\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","// store/messagesPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst messagesPersist = new VuexPersist({\n  key: \"chatall-messages\",\n  storage: window.localStorage,\n  reducer: (state) => ({ messages: state.messages, chats: state.chats }), // Store only messages and chats\n});\n\nexport default messagesPersist;\n","import { createStore } from \"vuex\";\nimport VuexPersist from \"vuex-persist\";\nimport i18n from \"@/i18n\";\nimport messagesPersist from \"./messagesPersist\";\n\nconst getMatomo = function () {\n  return window.Piwik.getAsyncTracker();\n};\n\n// 初始化 VuexPersist 实例\nconst vuexPersist = new VuexPersist({\n  key: \"chatall-app\", // 用于存储的键名，可以根据你的应用更改\n  storage: window.localStorage, // 使用 localStorage，你还可以选择其他存储方式，如 sessionStorage\n  reducer: (state) => {\n    // eslint-disable-next-line\n    const { messages, chats, ...persistedState } = state;\n    return persistedState;\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    chats: [\n      {\n        title: \"New Chat\",\n        favBots: [\n          // default bots\n          { classname: \"ChatGPT35Bot\", selected: true },\n          { classname: \"ChatGPT4Bot\", selected: true },\n          { classname: \"ChatGPTBrowsingBot\", selected: true },\n          { classname: \"BingChatCreativeBot\", selected: true },\n          { classname: \"BingChatBalancedBot\", selected: true },\n          { classname: \"BingChatPreciseBot\", selected: true },\n          { classname: \"ChatGLMBot\", selected: true },\n          { classname: \"VicunaBot\", selected: true },\n          { classname: \"AlpacaBot\", selected: true },\n          { classname: \"ClaudeBot\", selected: true },\n        ],\n        contexts: {},\n        messages: [],\n      },\n    ],\n    currentChatIndex: 0,\n    updateCounter: 0,\n    // TODO: delete following fields\n    selectedBots: {},\n    messages: [],\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    setBotSelected(state, { botClassname, selected }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const bot = currentChat.favBots.find(\n        (bot) => bot.classname === botClassname,\n      );\n      if (bot) bot.selected = selected;\n      else currentChat.favBots.push({ classname: botClassname, selected });\n    },\n    addFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      if (favBots.find((bot) => bot.classname === botClassname) == undefined)\n        favBots.push({ classname: botClassname, selected: true });\n    },\n    removeFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      const index = favBots.findIndex((bot) => bot.classname === botClassname);\n      favBots.splice(index, 1);\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    addMessage(state, message) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages.push(message);\n    },\n    updateMessage(state, { indexes, message }) {\n      const { chatIndex, messageIndex } = indexes;\n      const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n      const chat = state.chats[i];\n      chat.messages[messageIndex] = {\n        ...chat.messages[messageIndex],\n        ...message,\n      };\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      if (currentChat.contexts == undefined) currentChat.contexts = {};\n      currentChat.contexts[botClassname] = context;\n    },\n    clearMessages(state) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.contexts = {};\n      currentChat.messages = [];\n    },\n    init(state) {\n      // Upgrade messages data structure\n      if (state.messages.length > 0) {\n        const chat = {\n          title: i18n.global.t(\"chat.newChat\"),\n          contexts: {},\n          messages: state.messages,\n        };\n        state.chats[0] = chat;\n        state.messages = [];\n      }\n      // Migrate to favorited bots\n      if (state.selectedBots) {\n        const bots = Object.keys(state.selectedBots);\n        state.chats[0].favBots = [];\n        for (const bot of bots) {\n          if (state.selectedBots[bot])\n            state.chats[0].favBots.push({ classname: bot, selected: true });\n        }\n        state.selectedBots = null;\n      }\n    },\n  },\n  actions: {\n    sendPrompt({ commit, state, dispatch }, { prompt, bots }) {\n      commit(\"addMessage\", {\n        type: \"prompt\",\n        content: prompt,\n        done: true,\n        hide: false,\n      });\n\n      for (const bot of bots) {\n        const message = {\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          done: false,\n          highlight: false,\n          hide: false,\n          className: bot.getClassname(),\n        };\n\n        // workaround for tracking message position\n        const currentChat = state.chats[state.currentChatIndex];\n        message.index = currentChat.messages.push(message) - 1;\n\n        bot.sendPrompt(\n          prompt,\n          (indexes, values) =>\n            dispatch(\"updateMessage\", { indexes, message: values }),\n          { chatIndex: state.currentChatIndex, messageIndex: message.index },\n        );\n\n        getMatomo().trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          bot.getClassname(),\n          prompt.length,\n        );\n      }\n    },\n    updateMessage({ commit, state }, { indexes, message: values }) {\n      commit(\"updateMessage\", { indexes, message: values });\n\n      // workaround for notifing the message window to scroll to bottom\n      commit(\"incrementUpdateCounter\");\n\n      const i =\n        indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n      const chat = state.chats[i];\n      const message = { ...chat.messages[indexes.messageIndex], ...values };\n      if (values.done) {\n        getMatomo().trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n  },\n  getters: {\n    currentChat: (state) => {\n      if (state.chats.length === 0) {\n        return null;\n      }\n      return state.chats[state.currentChatIndex];\n    },\n  },\n  modules: {\n    // ...你的模块\n  },\n  plugins: [vuexPersist.plugin, messagesPersist.plugin], // 添加插件到 store\n});\n","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=3ad7bb94\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=4509bce3\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title\n      ><span class=\"text-warning font-weight-bold\">{{\n        $t(\"settings.notice\")\n      }}</span></v-list-item-title\n    >\n    <v-list-item-subtitle>\n      <span class=\"text-warning font-weight-bold\">{{\n        $t(\"chatGpt.notice\")\n      }}</span>\n    </v-list-item-subtitle>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=d8abfc16\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"gradio.url\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{ $t(\"gradio.urlPrompt\") }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.url\"\n      outlined\n      dense\n      :placeholder=\"\n        $t('settings.forExample', {\n          example: 'https://*.hf.space, http://127.0.0.1:7861',\n        })\n      \"\n      @update:model-value=\"setGradio({ url: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"gradio.fnIndex\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"gradio.fnIndexPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.fnIndex\"\n      outlined\n      dense\n      placeholder=\"0\"\n      @update:model-value=\"setGradio({ fnIndex: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\n\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setGradio\"]),\n  },\n  computed: {\n    ...mapState([\"gradio\"]),\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=e79ef070\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=2957c662\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=9039312e\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=78c80a1c\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"openaiApi.apiKey\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.apiKey\"\n      outlined\n      dense\n      placeholder=\"sk-...\"\n      @update:model-value=\"setOpenaiApi({ apiKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"openaiApi.temperature\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"openaiApi.alterUrl\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.alterUrlPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.alterUrl\"\n      outlined\n      dense\n      placeholder=\"https://your.proxy.com/v1/chat/completions\"\n      @update:model-value=\"setOpenaiApi({ alterUrl: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"openaiApi.temperature0\"),\n        2: i18n.global.t(\"openaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"openaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=592f38eb\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=7b2f91c3\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=c5646fa2\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=64da255b\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=ecf3a428\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>API Key & Secret Key</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"wenxinQianfan.apiKey\"\n      outlined\n      dense\n      hide-details\n      label=\"API Key\"\n      :placeholder=\"'2125NA8mQy7gC52Pq9BK3tvk'\"\n      @update:model-value=\"setWenxinQianfan({ apiKey: $event })\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"wenxinQianfan.secretKey\"\n      outlined\n      dense\n      label=\"Secret Key\"\n      :placeholder=\"'IWf2pyYm26fz8GgNAHdkPkznHgazlffQ'\"\n      @update:model-value=\"setWenxinQianfan({ secretKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"wenxinQianfan.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      hide-details\n      @update:model-value=\"setWenxinQianfan({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setWenxinQianfan\"]),\n  },\n  computed: {\n    ...mapState([\"wenxinQianfan\"]),\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=ddb0c810\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./BardBotSettings\": 7841,\n\t\"./BardBotSettings.vue\": 7841,\n\t\"./BingChatBotSettings\": 3324,\n\t\"./BingChatBotSettings.vue\": 3324,\n\t\"./ChatGPTBotSettings\": 2386,\n\t\"./ChatGPTBotSettings.vue\": 2386,\n\t\"./GradioAppBotSettings\": 5401,\n\t\"./GradioAppBotSettings.vue\": 5401,\n\t\"./HuggingChatBotSettings\": 750,\n\t\"./HuggingChatBotSettings.vue\": 750,\n\t\"./LMSYSBotSettings\": 5115,\n\t\"./LMSYSBotSettings.vue\": 5115,\n\t\"./LoginSetting\": 5562,\n\t\"./LoginSetting.vue\": 5562,\n\t\"./MOSSBotSettings\": 3795,\n\t\"./MOSSBotSettings.vue\": 3795,\n\t\"./OpenAIAPIBotSettings\": 6644,\n\t\"./OpenAIAPIBotSettings.vue\": 6644,\n\t\"./PoeBotSettings\": 544,\n\t\"./PoeBotSettings.vue\": 544,\n\t\"./QianWenBotSettings\": 4911,\n\t\"./QianWenBotSettings.vue\": 4911,\n\t\"./SkyWorkBotSettings\": 1399,\n\t\"./SkyWorkBotSettings.vue\": 1399,\n\t\"./SparkBotSettings\": 7361,\n\t\"./SparkBotSettings.vue\": 7361,\n\t\"./WenxinQianfanBotSettings\": 8350,\n\t\"./WenxinQianfanBotSettings.vue\": 8350\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 2124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./BardBotSettings.vue\": 7841,\n\t\"./BingChatBotSettings.vue\": 3324,\n\t\"./ChatGPTBotSettings.vue\": 2386,\n\t\"./GradioAppBotSettings.vue\": 5401,\n\t\"./HuggingChatBotSettings.vue\": 750,\n\t\"./LMSYSBotSettings.vue\": 5115,\n\t\"./LoginSetting.vue\": 5562,\n\t\"./MOSSBotSettings.vue\": 3795,\n\t\"./OpenAIAPIBotSettings.vue\": 6644,\n\t\"./PoeBotSettings.vue\": 544,\n\t\"./QianWenBotSettings.vue\": 4911,\n\t\"./SkyWorkBotSettings.vue\": 1399,\n\t\"./SparkBotSettings.vue\": 7361,\n\t\"./WenxinQianfanBotSettings.vue\": 8350\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 6912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = function() { return Promise.resolve(); };","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1095); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","async","context","this","getChatContext","requestParams","atValue","_isAvailable","isAvailable","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","content","done","catch","error","get","match","_defineProperty","AsyncLock","static","getLogo","_logoFilename","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","key","lockedFn","onLockUnavailable","self","_lock","acquire","ret","err","timeout","botName","executeSendPrompt","_sendPrompt","acquireLock","console","toString","createIfNotExists","store","getters","currentChat","contexts","createChatContext","setChatContext","commit","botClassname","MOSSBot","getAuthHeader","token","state","moss","refresh","headers","Authorization","res","id","message","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","event","links","processed_extra_data","hasOwnProperty","call","title","removeAllListeners","close","status","output","stage","type","status_code","onError","target","open","generateRandomId","randomStr","i","QianWenBot","getRequestHeaders","qianWen","xsrfToken","success","accept","payload","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","source","SSE","withCredentials","addEventListener","chunk","failed","errorCode","errorMsg","undefined","stopReason","stream","firstQuery","userId","SkyWorkBot","getAuthHeaders","skyWork","inviteToken","code","resp_data","busy_now","invite_token","checkAvailability","currentPrompt","messageId","currentMessageId","session_id","result_message","message_id","code_msg","setTimeout","dialogue","SparkBot","response","flag","desc","window","initGeeGuard","appId","https","gee_token","chatId","GtToken","getGtToken","formData","FormData","append","String","Date","slice","partialText","descr","Buffer","from","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","Accept","accessToken","access_token","e","messages","length","pastRounds","shift","push","role","user","requestConfig","method","fullResult","partialResult","result","is_end","xhr","responseText","error_code","error_msg","GradioAppBot","GradioBot","gradio","_fnIndexes","fnIndex","makeData","fn_index","Array","parseData","config","path","root","log","_sendFnIndex","session_hash","URL","protocol","msg","event_data","rank","rank_eta","onClose","substring","HuggingChatBot","conversationId","delete","packRequest","inputs","parameters","temperature","truncate","max_new_tokens","stop","top_p","repetition_penalty","top_k","return_full_text","options","uuidv4","is_retry","use_cache","generated_text","LMSYSBot","r","BingChatBot","conversation","value","clientId","conversationSignature","invocationId","uuid","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","isStartOfSession","timestamp","toISOString","author","inputMethod","messageType","requestId","tone","_tone","participant","seperator","fromCharCode","filter","Boolean","map","version","events","makePromptRequest","item","isAnonymous","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","ChatGPTBot","setRefreshCycle","chatgpt","refreshCycle","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","getArkoseToken","arkoseToken","part1","pow","part2","toFixed","arkose_token","content_type","parts","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","test","join","citations","metadata","element","detail","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","OpenAIAPIBot","openaiApi","apiUrl","alterUrl","choices","delta","PoeBot","formkey","buildId","settings","lastMessageId","queryName","variables","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","responseURL","secretCode","secretFunction","eval","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","gqlPost","subscriptions","subscriptionName","query","queryHash","debug","min_seq","m","message_type","messageAdded","bot","withChatBreak","messageEdgeCreate","errors","lang","navigator","language","userLanguage","substr","en","enMessages","zh","zhMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","createI18n","legacy","locale","fallbackLocale","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","start","now","timer","onUnmounted","dialog","showModal","__expose","__exports__","ChatGPT35Bot","ChatGPT4Bot","reserved","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","OpenAIAPI35Bot","OpenAIAPI4Bot","VicunaBot","ChatGLMBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","all","getInstance","disabled","bots","getBotByClassName","className","find","confirmModal","botLogo","computed","props","botFullname","copyToClipboard","clipboard","writeText","trackEvent","toggleHighlight","emits","index","highlight","hide","handleClick","tagName","parentElement","preventDefault","electron","require","href","shell","openExternal","watch","columns","$el","style","setProperty","onMounted","useStore","autoScroll","gridTemplateColumns","filteredMessages","updateMessage","values","dispatch","indexes","chatIndex","currentChatIndex","messageIndex","scrollToBottom","immediately","nextTick","scrollTo","top","document","documentElement","scrollHeight","behavior","autoScrollToBottom","updateCounter","onScroll","scrollPosition","pageYOffset","innerHeight","removeEventListener","$t","useI18n","ChatGPTBotSettings","OpenAIAPIBotSettings","WenxinQianfanBotSettings","GradioAppBotSettings","BardBotSettings","BingChatBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","PoeBotSettings","QianWenBotSettings","SparkBotSettings","SkyWorkBotSettings","languages","name","setCurrentLanguage","closeDialog","emit","botSettings","newBot","markRaw","getSettingsComponent","onDone","menu","favorited","favBots","classname","toggleFavorite","includes","ipcRenderer","_bots","activeBots","reactive","_favBots","favBot","instance","clickedBot","isMakeAvailableOpen","updateActiveBots","selected","filterEnterKey","keyCode","shiftKey","ctrlKey","altKey","metaKey","sendPromptToBots","trim","toBots","toggleSelected","availability","newValue","oldValue","botsToCheck","some","oldBot","onBeforeMount","on","versions","localStorage","getItem","snackbar","skip","latest","setItem","openReleasePage","current","compare","isSettingsOpen","changeColumns","setUuid","openSettingsModal","clearMessages","_paq","ver","vuetify","createVuetify","components","directives","adapter","createVueI18nAdapter","theme","defaultTheme","themes","light","colors","primary","dark","fetch","script","createElement","head","appendChild","createApp","App","use","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","messagesPersist","VuexPersist","storage","reducer","chats","vuexPersist","persistedState","createStore","selectedBots","mutations","n","setBotSelected","addFavoriteBot","removeFavoriteBot","findIndex","splice","setChatgpt","setOpenaiApi","setMoss","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","addMessage","chat","setMessages","incrementUpdateCounter","init","keys","actions","sendPrompt","modules","plugins","plugin","_createVNode","_component_v_list_subheader","$data","_component_login_setting","LoginSetting","render","class","_component_v_list_item","_component_v_list_item_title","_createElementVNode","_hoisted_1","_toDisplayString","_ctx","_component_v_list_item_subtitle","_hoisted_2","_component_v_checkbox","$options","autoRefresh","$event","color","hideDetails","label","AUTO_REFRESH_CYCLE","methods","mapMutations","mapState","set","auto","_component_v_text_field","outlined","dense","_createBlock","$props","onClick","_cache","args","openLoginWindow","loginUrl","userAgent","invoke","mounted","secret","_component_v_slider","min","max","step","ticks","temperatureLabels","webpackAsyncContext","req","__webpack_require__","o","module","exports","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","d","a","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}